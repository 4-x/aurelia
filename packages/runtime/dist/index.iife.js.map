{"version":3,"file":"index.iife.js","sources":["../../../node_modules/tslib/tslib.es6.js","../src/observation.ts","../src/observation/subscriber-collection.ts","../src/observation/proxy-observer.ts","../src/observation/patch-properties.ts","../src/observation/property-observer.ts","../src/observation/setter-observer.ts","../src/observation/binding-context.ts","../src/observation/signaler.ts","../src/resources/binding-behavior.ts","../src/resources/value-converter.ts","../src/binding/ast.ts","../src/flags.ts","../src/lifecycle.ts","../src/binding/connectable.ts","../src/binding/binding.ts","../src/binding/call.ts","../src/binding/expression-parser.ts","../src/binding/interpolation-binding.ts","../src/binding/let-binding.ts","../src/binding/ref.ts","../src/observation/target-observer.ts","../src/observation/collection-observer.ts","../src/observation/array-observer.ts","../src/observation/map-observer.ts","../src/observation/set-observer.ts","../src/observation/computed-observer.ts","../src/observation/dirty-checker.ts","../src/observation/primitive-observer.ts","../src/observation/property-accessor.ts","../src/observation/observer-locator.ts","../src/observation/self-observer.ts","../src/resources/binding-behaviors/binding-mode.ts","../src/resources/binding-behaviors/debounce.ts","../src/resources/binding-behaviors/signals.ts","../src/resources/binding-behaviors/throttle.ts","../src/templating/bindable.ts","../src/definitions.ts","../src/templating/lifecycle-attach.ts","../src/templating/lifecycle-bind.ts","../src/dom.ts","../src/templating/view.ts","../src/rendering-engine.ts","../src/resources/custom-element.ts","../src/templating/lifecycle-render.ts","../src/resources/custom-attribute.ts","../src/resources/custom-attributes/if.ts","../src/resources/custom-attributes/repeat.ts","../src/resources/custom-attributes/replaceable.ts","../src/resources/custom-attributes/with.ts","../src/resources/value-converters/sanitize.ts","../src/aurelia.ts","../src/renderer.ts","../src/resources/binding-behaviors/keyed.ts","../src/configuration.ts","../src/instructions.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { IDisposable, IIndexable } from '@aurelia/kernel';\nimport { LifecycleFlags, State } from './flags';\nimport { ILifecycle } from './lifecycle';\n\nexport interface IProxyObserver<TObj extends object = object, TMut extends MutationKind = MutationKind.proxy> extends ISubscriberCollection<TMut> {\n  proxy: IProxy<TObj>;\n}\n\nexport type IProxy<TObj extends object = object> = TObj & {\n  $raw: TObj;\n  $observer: IProxyObserver<TObj>;\n};\n\n/** @internal */\nexport const enum SubscriberFlags {\n  None            = 0,\n  Subscriber0     = 0b0001,\n  Subscriber1     = 0b0010,\n  Subscriber2     = 0b0100,\n  SubscribersRest = 0b1000,\n  Any             = 0b1111,\n}\n\nexport enum DelegationStrategy {\n  none = 0,\n  capturing = 1,\n  bubbling = 2\n}\n\n/**\n * Describes a type that tracks changes and can flush those changes in some way\n */\nexport interface IChangeTracker {\n  $nextFlush?: IChangeTracker;\n  hasChanges?: boolean;\n  flush(flags: LifecycleFlags): void;\n}\n\n/**\n * Basic interface to normalize getting/setting a value of any property on any object\n */\nexport interface IAccessor<TValue = unknown> {\n  getValue(): TValue;\n  setValue(newValue: TValue, flags: LifecycleFlags): void;\n}\n\n/**\n * Describes a target observer for to-view bindings (in other words, an observer without the observation).\n */\nexport interface IBindingTargetAccessor<\n  TObj = any,\n  TProp = keyof TObj,\n  TValue = unknown>\n  extends IDisposable,\n          IAccessor<TValue>,\n          IPropertyChangeTracker<TObj, TProp> {\n  isDOMObserver?: boolean;\n}\n\n/**\n * Describes a target observer for from-view or two-way bindings.\n */\nexport interface IBindingTargetObserver<\n  TObj = any,\n  TProp = keyof TObj,\n  TValue = unknown>\n  extends IBindingTargetAccessor<TObj, TProp, TValue>,\n          ISubscribable<MutationKind.instance>,\n          ISubscriberCollection<MutationKind.instance> {\n\n  bind?(flags: LifecycleFlags): void;\n  unbind?(flags: LifecycleFlags): void;\n}\n\nexport type AccessorOrObserver = IBindingTargetAccessor | IBindingTargetObserver;\n\n/**\n * An array of indices, where the index of an element represents the index to map FROM, and the numeric value of the element itself represents the index to map TO\n *\n * The deletedItems property contains the items (in case of an array) or keys (in case of map or set) that have been deleted.\n */\nexport type IndexMap = number[] & {\n  deletedItems?: number[];\n};\n\n/**\n * Mostly just a marker enum to help with typings (specifically to reduce duplication)\n */\nexport enum MutationKind {\n  instance   = 0b001,\n  collection = 0b010,\n  proxy      = 0b100\n}\n\nexport interface IPatchable {\n  $patch(flags: LifecycleFlags): void;\n}\n\n/**\n * Describes a type that specifically tracks changes in an object property, or simply something that can have a getter and/or setter\n */\nexport interface IPropertyChangeTracker<TObj extends Record<string, unknown>, TProp = keyof TObj, TValue = unknown> extends IPatchable {\n  obj: TObj;\n  propertyKey?: TProp;\n  currentValue?: TValue;\n}\n\n/**\n * Describes a type that specifically tracks changes in a collection (map, set or array)\n */\nexport interface ICollectionChangeTracker<T extends Collection> extends IChangeTracker {\n  collection: T;\n  indexMap: IndexMap;\n  resetIndexMap(): void;\n}\n\n/**\n * Represents a (subscriber) function that can be called by a PropertyChangeNotifier\n */\nexport type IPropertyChangeHandler<TValue = unknown> = (newValue: TValue, previousValue: TValue, flags: LifecycleFlags) => void;\n/**\n * Represents a (observer) function that can notify subscribers of mutations on a property\n */\nexport interface IPropertyChangeNotifier extends IPropertyChangeHandler {}\n\n/**\n * Describes a (subscriber) type that has a function conforming to the IPropertyChangeHandler interface\n */\nexport interface IPropertySubscriber<TValue = unknown> {\n  id?: string;\n  handleChange(newValue: TValue, previousValue: TValue, flags: LifecycleFlags): void;\n}\n\n/**\n * Represents a (subscriber) function that can be called by a ProxyChangeNotifier\n */\nexport type IProxyChangeHandler<TValue = unknown> = (key: PropertyKey, newValue: TValue, previousValue: TValue, flags: LifecycleFlags) => void;\n/**\n * Represents a (observer) function that can notify subscribers of mutations on a proxy\n */\nexport interface IProxyChangeNotifier extends IProxyChangeHandler {}\n\n/**\n * Describes a (subscriber) type that has a function conforming to the IProxyChangeHandler interface\n */\nexport interface IProxySubscriber<TValue = unknown> { handleChange(key: PropertyKey, newValue: TValue, previousValue: TValue, flags: LifecycleFlags): void; }\n\n/**\n * Represents a (subscriber) function that can be called by a CollectionChangeNotifier\n */\nexport type ICollectionChangeHandler = (origin: string, args: IArguments | null, flags: LifecycleFlags) => void;\n/**\n * Represents a (observer) function that can notify subscribers of mutations in a collection\n */\nexport interface ICollectionChangeNotifier extends ICollectionChangeHandler {}\n\n/**\n * Represents a (subscriber) function that can be called by a BatchedCollectionChangeNotifier\n */\nexport type IBatchedCollectionChangeHandler = (indexMap: number[], flags: LifecycleFlags) => void;\n/**\n * Represents a (observer) function that can notify subscribers of batched mutations in a collection\n */\nexport interface IBatchedCollectionChangeNotifier extends IBatchedCollectionChangeHandler {}\n\n/**\n * Describes a (subscriber) type that has a function conforming to the ICollectionChangeHandler interface\n */\nexport interface ICollectionSubscriber { handleChange(origin: string, args: IArguments | null, flags: LifecycleFlags): void; }\n/**\n * Describes a (subscriber) type that has a function conforming to the IBatchedCollectionChangeNotifier interface\n */\nexport interface IBatchedCollectionSubscriber { handleBatchedChange(indexMap: number[], flags: LifecycleFlags): void; }\n\n/**\n * Either a property or collection subscriber\n */\nexport type Subscriber = ICollectionSubscriber | IPropertySubscriber | IProxySubscriber;\n/**\n * Either a batched property or batched collection subscriber\n */\nexport type BatchedSubscriber = IBatchedCollectionSubscriber;\n\n/**\n * Helper type that translates from mutationKind enum to the correct subscriber interface\n */\nexport type MutationKindToSubscriber<T> =\n  T extends MutationKind.instance ? IPropertySubscriber :\n  T extends MutationKind.collection ? ICollectionSubscriber :\n  T extends MutationKind.proxy ? IProxySubscriber :\n  never;\n\n/**\n * Helper type that translates from mutationKind enum to the correct batched subscriber interface\n */\nexport type MutationKindToBatchedSubscriber<T> =\n  T extends MutationKind.collection ? IBatchedCollectionSubscriber :\n  never;\n\n/**\n * Helper type that translates from mutationKind enum to the correct notifier interface\n */\nexport type MutationKindToNotifier<T> =\n  T extends MutationKind.instance ? IPropertyChangeNotifier :\n  T extends MutationKind.collection ? ICollectionChangeNotifier :\n  T extends MutationKind.proxy ? IProxyChangeNotifier :\n  never;\n\n/**\n * Helper type that translates from mutationKind enum to the correct batched notifier interface\n */\nexport type MutationKindToBatchedNotifier<T> =\n  T extends MutationKind.collection ? IBatchedCollectionChangeNotifier :\n  never;\n\nexport interface ISubscribable<T extends MutationKind> {\n  subscribe(subscriber: MutationKindToSubscriber<T>): void;\n  unsubscribe(subscriber: MutationKindToSubscriber<T>): void;\n}\n\n/**\n * A collection of property or collection subscribers\n */\nexport interface ISubscriberCollection<T extends MutationKind> extends ISubscribable<T> {\n  /** @internal */_subscriberFlags?: SubscriberFlags;\n  /** @internal */_subscriber0?: MutationKindToSubscriber<T>;\n  /** @internal */_subscriber1?: MutationKindToSubscriber<T>;\n  /** @internal */_subscriber2?: MutationKindToSubscriber<T>;\n  /** @internal */_subscribersRest?: MutationKindToSubscriber<T>[];\n\n  callSubscribers: MutationKindToNotifier<T>;\n  hasSubscribers(): boolean;\n  hasSubscriber(subscriber: MutationKindToSubscriber<T>): boolean;\n  removeSubscriber(subscriber: MutationKindToSubscriber<T>): boolean;\n  addSubscriber(subscriber: MutationKindToSubscriber<T>): boolean;\n}\n\n/**\n * A collection of batched property or collection subscribers\n */\nexport interface IBatchedSubscriberCollection<T extends MutationKind> extends IBatchedSubscribable<T> {\n  /** @internal */_batchedSubscriberFlags?: SubscriberFlags;\n  /** @internal */_batchedSubscriber0?: MutationKindToBatchedSubscriber<T>;\n  /** @internal */_batchedSubscriber1?: MutationKindToBatchedSubscriber<T>;\n  /** @internal */_batchedSubscriber2?: MutationKindToBatchedSubscriber<T>;\n  /** @internal */_batchedSubscribersRest?: MutationKindToBatchedSubscriber<T>[];\n\n  /** @internal */lifecycle?: ILifecycle;\n  callBatchedSubscribers: MutationKindToBatchedNotifier<T>;\n\n  /** @internal */flush(flags: LifecycleFlags): void;\n  hasBatchedSubscribers(): boolean;\n  hasBatchedSubscriber(subscriber: MutationKindToBatchedSubscriber<T>): boolean;\n  removeBatchedSubscriber(subscriber: MutationKindToBatchedSubscriber<T>): boolean;\n  addBatchedSubscriber(subscriber: MutationKindToBatchedSubscriber<T>): boolean;\n}\n\nexport interface IBatchedSubscribable<T extends MutationKind> {\n  subscribeBatched(subscriber: MutationKindToBatchedSubscriber<T>): void;\n  unsubscribeBatched(subscriber: MutationKindToBatchedSubscriber<T>): void;\n}\n\n/**\n * Describes a complete property observer with an accessor, change tracking fields, normal and batched subscribers\n */\nexport interface IPropertyObserver<TObj extends Record<string, unknown>, TProp extends keyof TObj> extends\n  IDisposable,\n  IAccessor<TObj[TProp]>,\n  IPropertyChangeTracker<TObj, TProp>,\n  ISubscriberCollection<MutationKind.instance> {\n  observing: boolean;\n  persistentFlags: LifecycleFlags;\n}\n\n/**\n * An any-typed property observer\n */\nexport type PropertyObserver = IPropertyObserver<IIndexable, string>;\n\n/**\n * A collection (array, set or map)\n */\nexport type Collection = unknown[] | Set<unknown> | Map<unknown, unknown>;\ninterface IObservedCollection {\n  $observer?: CollectionObserver;\n  $raw?: this;\n}\n\n/**\n * An array that is being observed for mutations\n */\nexport interface IObservedArray<T = unknown> extends IObservedCollection, Array<T> { }\n/**\n * A set that is being observed for mutations\n */\nexport interface IObservedSet<T = unknown> extends IObservedCollection, Set<T> { }\n/**\n * A map that is being observed for mutations\n */\nexport interface IObservedMap<K = unknown, V = unknown> extends IObservedCollection, Map<K, V> { }\n/**\n * A collection that is being observed for mutations\n */\nexport type ObservedCollection = IObservedArray | IObservedSet | IObservedMap;\n\nexport const enum CollectionKind {\n  indexed = 0b1000,\n  keyed   = 0b0100,\n  array   = 0b1001,\n  map     = 0b0110,\n  set     = 0b0111\n}\n\nexport type LengthPropertyName<T> =\n  T extends unknown[] ? 'length' :\n  T extends Set<unknown> ? 'size' :\n  T extends Map<unknown, unknown> ? 'size' :\n  never;\n\nexport type CollectionTypeToKind<T> =\n  T extends unknown[] ? CollectionKind.array | CollectionKind.indexed :\n  T extends Set<unknown> ? CollectionKind.set | CollectionKind.keyed :\n  T extends Map<unknown, unknown> ? CollectionKind.map | CollectionKind.keyed :\n  never;\n\nexport type CollectionKindToType<T> =\n  T extends CollectionKind.array ? unknown[] :\n  T extends CollectionKind.indexed ? unknown[] :\n  T extends CollectionKind.map ? Map<unknown, unknown> :\n  T extends CollectionKind.set ? Set<unknown> :\n  T extends CollectionKind.keyed ? Set<unknown> | Map<unknown, unknown> :\n  never;\n\nexport type ObservedCollectionKindToType<T> =\n  T extends CollectionKind.array ? IObservedArray :\n  T extends CollectionKind.indexed ? IObservedArray :\n  T extends CollectionKind.map ? IObservedMap :\n  T extends CollectionKind.set ? IObservedSet :\n  T extends CollectionKind.keyed ? IObservedSet | IObservedMap :\n  never;\n\n/**\n * An observer that tracks collection mutations and notifies subscribers (either directly or in batches)\n */\nexport interface ICollectionObserver<T extends CollectionKind> extends\n  IDisposable,\n  IPatchable,\n  ICollectionChangeTracker<CollectionKindToType<T>>,\n  ISubscriberCollection<MutationKind.collection>,\n  IBatchedSubscriberCollection<MutationKind.collection> {\n    persistentFlags: LifecycleFlags;\n    collection: ObservedCollectionKindToType<T>;\n    lengthPropertyName: LengthPropertyName<CollectionKindToType<T>>;\n    collectionKind: T;\n    lengthObserver: IBindingTargetObserver & IPatchable;\n    getLengthObserver(flags: LifecycleFlags): IBindingTargetObserver;\n}\nexport type CollectionObserver = ICollectionObserver<CollectionKind>;\n\nexport interface IBindingContext {\n  [key: string]: unknown;\n\n  readonly $synthetic?: true;\n  readonly $observers?: ObserversLookup<IOverrideContext>;\n  getObservers?(flags: LifecycleFlags): ObserversLookup<IOverrideContext>;\n}\n\nexport interface IOverrideContext {\n  [key: string]: unknown;\n\n  readonly $synthetic?: true;\n  readonly $observers?: ObserversLookup<IOverrideContext>;\n  readonly bindingContext: IBindingContext;\n  readonly parentOverrideContext: IOverrideContext | null;\n  getObservers(flags: LifecycleFlags): ObserversLookup<IOverrideContext>;\n}\n\nexport interface IScope {\n  readonly bindingContext: IBindingContext;\n  readonly overrideContext: IOverrideContext;\n  // parentScope is strictly internal API and mainly for replaceable template controller.\n  // NOT intended for regular scope traversal!\n  /** @internal */readonly parentScope: IScope | null;\n}\n\n// TODO: currently unused, still need to fix the observersLookup type\nexport interface IObserversLookup<TObj extends IIndexable = IIndexable, TKey extends keyof TObj =\n  Exclude<keyof TObj, '$synthetic' | '$observers' | 'bindingContext' | 'overrideContext' | 'parentOverrideContext'>> { }\n\nexport type ObserversLookup<TObj extends IIndexable = IIndexable, TKey extends keyof TObj =\n  Exclude<keyof TObj, '$synthetic' | '$observers' | 'bindingContext' | 'overrideContext' | 'parentOverrideContext'>> =\n  { [P in TKey]: PropertyObserver; } & { getOrCreate(flags: LifecycleFlags, obj: IBindingContext | IOverrideContext, key: string): PropertyObserver };\n\nexport type IObservable = IIndexable & {\n  readonly $synthetic?: false;\n  $observers?: Record<string, AccessorOrObserver>;\n};\n","import { LifecycleFlags as LF } from '../flags';\nimport {\n  IBatchedCollectionSubscriber,\n  IBatchedSubscriberCollection,\n  IndexMap,\n  IPropertySubscriber,\n  ISubscriberCollection,\n  MutationKind,\n  MutationKindToBatchedSubscriber,\n  MutationKindToSubscriber,\n  SubscriberFlags as SF\n} from '../observation';\n\nexport function subscriberCollection<T extends MutationKind>(mutationKind: T): ClassDecorator {\n  // tslint:disable-next-line:ban-types // ClassDecorator expects it to be derived from Function\n  return function(target: Function): void {\n    const proto = target.prototype as ISubscriberCollection<MutationKind.instance | MutationKind.collection | MutationKind.proxy>;\n\n    proto._subscriberFlags = SF.None;\n    proto._subscriber0 = null;\n    proto._subscriber1 = null;\n    proto._subscriber2 = null;\n    proto._subscribersRest = null;\n\n    proto.addSubscriber = addSubscriber;\n    proto.removeSubscriber = removeSubscriber;\n    proto.hasSubscriber = hasSubscriber;\n    proto.hasSubscribers = hasSubscribers;\n    switch (mutationKind) {\n      case MutationKind.instance:\n        proto.callSubscribers = callPropertySubscribers;\n        break;\n      case MutationKind.collection:\n        proto.callSubscribers = callCollectionSubscribers;\n        break;\n      case MutationKind.proxy:\n        proto.callSubscribers = callProxySubscribers;\n    }\n  };\n}\n\nfunction addSubscriber<T extends MutationKind>(this: ISubscriberCollection<T>, subscriber: MutationKindToSubscriber<T>): boolean {\n  if (this.hasSubscriber(subscriber)) {\n    return false;\n  }\n  const subscriberFlags = this._subscriberFlags;\n  if (!(subscriberFlags & SF.Subscriber0)) {\n    this._subscriber0 = subscriber;\n    this._subscriberFlags |= SF.Subscriber0;\n    return true;\n  }\n  if (!(subscriberFlags & SF.Subscriber1)) {\n    this._subscriber1 = subscriber;\n    this._subscriberFlags |= SF.Subscriber1;\n    return true;\n  }\n  if (!(subscriberFlags & SF.Subscriber2)) {\n    this._subscriber2 = subscriber;\n    this._subscriberFlags |= SF.Subscriber2;\n    return true;\n  }\n  if (!(subscriberFlags & SF.SubscribersRest)) {\n    this._subscribersRest = [subscriber];\n    this._subscriberFlags |= SF.SubscribersRest;\n    return true;\n  }\n  this._subscribersRest.push(subscriber);\n  return true;\n}\n\nfunction removeSubscriber<T extends MutationKind>(this: ISubscriberCollection<T>, subscriber: IPropertySubscriber): boolean {\n  const subscriberFlags = this._subscriberFlags;\n  if ((subscriberFlags & SF.Subscriber0) && this._subscriber0 === subscriber) {\n    this._subscriber0 = null;\n    this._subscriberFlags &= ~SF.Subscriber0;\n    return true;\n  }\n  if ((subscriberFlags & SF.Subscriber1) && this._subscriber1 === subscriber) {\n    this._subscriber1 = null;\n    this._subscriberFlags &= ~SF.Subscriber1;\n    return true;\n  }\n  if ((subscriberFlags & SF.Subscriber2) && this._subscriber2 === subscriber) {\n    this._subscriber2 = null;\n    this._subscriberFlags &= ~SF.Subscriber2;\n    return true;\n  }\n  if (subscriberFlags & SF.SubscribersRest) {\n    const subscribers = this._subscribersRest;\n    for (let i = 0, ii = subscribers.length; i < ii; ++i) {\n      if (subscribers[i] === subscriber) {\n        subscribers.splice(i, 1);\n        if (ii === 1) {\n          this._subscriberFlags &= ~SF.SubscribersRest;\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction callPropertySubscribers(this: ISubscriberCollection<MutationKind.instance>, newValue: unknown, previousValue: unknown, flags: LF): void {\n  /**\n   * Note: change handlers may have the side-effect of adding/removing subscribers to this collection during this\n   * callSubscribers invocation, so we're caching them all before invoking any.\n   * Subscribers added during this invocation are not invoked (and they shouldn't be).\n   * Subscribers removed during this invocation will still be invoked (and they also shouldn't be,\n   * however this is accounted for via $isBound and similar flags on the subscriber objects)\n   */\n  const subscriber0 = this._subscriber0;\n  const subscriber1 = this._subscriber1;\n  const subscriber2 = this._subscriber2;\n  let subscribers = this._subscribersRest;\n  if (subscribers !== null) {\n    subscribers = subscribers.slice();\n  }\n  if (subscriber0 !== null) {\n    callSubscriber(subscriber0, newValue, previousValue, flags, this[subscriber0.id]);\n  }\n  if (subscriber1 !== null) {\n    callSubscriber(subscriber1, newValue, previousValue, flags, this[subscriber1.id]);\n  }\n  if (subscriber2 !== null) {\n    callSubscriber(subscriber2, newValue, previousValue, flags, this[subscriber2.id]);\n  }\n  const length = subscribers && subscribers.length;\n  if (length !== undefined && length > 0) {\n    let subscriber = null;\n    for (let i = 0; i < length; ++i) {\n      subscriber = subscribers[i];\n      if (subscriber !== null) {\n        callSubscriber(subscriber, newValue, previousValue, flags, this[subscriber.id]);\n      }\n    }\n  }\n}\n\nfunction callSubscriber(\n  subscriber: IPropertySubscriber,\n  newValue: unknown,\n  previousValue: unknown,\n  flags: LF,\n  ownFlags: LF,\n): void {\n  if (ownFlags === undefined) {\n    // If ownFlags is undefined then the subscriber is not a connectable binding and we don't\n    // have any business trying to restrict the data flow, so just call it with whatever we received.\n    subscriber.handleChange(newValue, previousValue, flags);\n\n  // Note: if the update flags for both directions are set, that means an observer's callSubscribers caused the update direction to switch\n  // back to the origin of the change.\n  // With this heuristic we stop this roundtrip a little earlier than vCurrent does (where the target or source is evaluated\n  // and compared again) and effectively make this a \"purer\" one-way update flow that prevents observable side-effects from\n  // flowing back the opposite direction.\n  } else if (((flags | ownFlags) & LF.update) === LF.update) {\n\n    // Observers should explicitly pass this flag if they want a roundtrip to happen anyway.\n    // SelfObserver does this in order to propagate from-view changes from a child component back to the bindings\n    // on its own component.\n    // Some target observers (e.g. select) do this as well, but the other way around.\n    if ((flags & LF.allowPublishRoundtrip) > 0) {\n      // Unset the directional flag that came in from the origin and allowPublishRoundtrip since we don't\n      // want these to flow into the next subscriberCollection\n      subscriber.handleChange(newValue, previousValue, (flags & ~(LF.update | LF.allowPublishRoundtrip)) | ownFlags);\n    }\n  } else {\n    // If this is not a roundtrip, simply proceed in the same direction.\n    subscriber.handleChange(newValue, previousValue, flags | ownFlags);\n  }\n}\n\nfunction callCollectionSubscribers(this: ISubscriberCollection<MutationKind.collection> & Required<IBatchedSubscriberCollection<MutationKind.collection>>, origin: string, args: IArguments | null, flags: LF): void {\n  const subscriber0 = this._subscriber0;\n  const subscriber1 = this._subscriber1;\n  const subscriber2 = this._subscriber2;\n  let subscribers = this._subscribersRest;\n  if (subscribers !== null) {\n    subscribers = subscribers.slice();\n  }\n  if (subscriber0 !== null) {\n    subscriber0.handleChange(origin, args, flags);\n  }\n  if (subscriber1 !== null) {\n    subscriber1.handleChange(origin, args, flags);\n  }\n  if (subscriber2 !== null) {\n    subscriber2.handleChange(origin, args, flags);\n  }\n  const length = subscribers && subscribers.length;\n  if (length !== undefined && length > 0) {\n    for (let i = 0; i < length; ++i) {\n      const subscriber = subscribers[i];\n      if (subscriber !== null) {\n        subscriber.handleChange(origin, args, flags);\n      }\n    }\n  }\n  this.lifecycle.enqueueFlush(this).catch(error => { throw error; });\n}\n\nfunction callProxySubscribers(this: ISubscriberCollection<MutationKind.proxy>, key: PropertyKey, newValue: unknown, previousValue: unknown, flags: LF): void {\n  const subscriber0 = this._subscriber0;\n  const subscriber1 = this._subscriber1;\n  const subscriber2 = this._subscriber2;\n  let subscribers = this._subscribersRest;\n  if (subscribers !== null) {\n    subscribers = subscribers.slice();\n  }\n  if (subscriber0 !== null) {\n    subscriber0.handleChange(key, newValue, previousValue, flags);\n  }\n  if (subscriber1 !== null) {\n    subscriber1.handleChange(key, newValue, previousValue, flags);\n  }\n  if (subscriber2 !== null) {\n    subscriber2.handleChange(key, newValue, previousValue, flags);\n  }\n  const length = subscribers && subscribers.length;\n  if (length !== undefined && length > 0) {\n    for (let i = 0; i < length; ++i) {\n      const subscriber = subscribers[i];\n      if (subscriber !== null) {\n        subscriber.handleChange(key, newValue, previousValue, flags);\n      }\n    }\n  }\n}\nfunction hasSubscribers<T extends MutationKind>(this: ISubscriberCollection<T>): boolean {\n  return this._subscriberFlags !== SF.None;\n}\n\nfunction hasSubscriber<T extends MutationKind>(this: ISubscriberCollection<T>, subscriber: IPropertySubscriber): boolean {\n  // Flags here is just a perf tweak\n  // Compared to not using flags, it's a moderate speed-up when this collection does not have the subscriber;\n  // and minor slow-down when it does, and the former is more common than the latter.\n  const subscriberFlags = this._subscriberFlags;\n  if ((subscriberFlags & SF.Subscriber0) && this._subscriber0 === subscriber) {\n    return true;\n  }\n  if ((subscriberFlags & SF.Subscriber1) && this._subscriber1 === subscriber) {\n    return true;\n  }\n  if ((subscriberFlags & SF.Subscriber2) && this._subscriber2 === subscriber) {\n    return true;\n  }\n  if (subscriberFlags & SF.SubscribersRest) {\n    // no need to check length; if the flag is set, there's always at least one\n    const subscribers = this._subscribersRest;\n    for (let i = 0, ii = subscribers.length; i < ii; ++i) {\n      if (subscribers[i] === subscriber) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function batchedSubscriberCollection(): ClassDecorator {\n  // tslint:disable-next-line:ban-types // ClassDecorator expects it to be derived from Function\n  return function(target: Function): void {\n    const proto = target.prototype as IBatchedSubscriberCollection<MutationKind.collection>;\n\n    proto._batchedSubscriberFlags = SF.None;\n    proto._batchedSubscriber0 = null;\n    proto._batchedSubscriber1 = null;\n    proto._batchedSubscriber2 = null;\n    proto._batchedSubscribersRest = null;\n\n    proto.addBatchedSubscriber = addBatchedSubscriber;\n    proto.removeBatchedSubscriber = removeBatchedSubscriber;\n    proto.hasBatchedSubscriber = hasBatchedSubscriber;\n    proto.hasBatchedSubscribers = hasBatchedSubscribers;\n    proto.callBatchedSubscribers = callBatchedCollectionSubscribers;\n  };\n}\n\nfunction addBatchedSubscriber(this: IBatchedSubscriberCollection<MutationKind.collection>, subscriber: MutationKindToBatchedSubscriber<MutationKind.collection>): boolean {\n  if (this.hasBatchedSubscriber(subscriber)) {\n    return false;\n  }\n  const subscriberFlags = this._batchedSubscriberFlags;\n  if (!(subscriberFlags & SF.Subscriber0)) {\n    this._batchedSubscriber0 = subscriber;\n    this._batchedSubscriberFlags |= SF.Subscriber0;\n    return true;\n  }\n  if (!(subscriberFlags & SF.Subscriber1)) {\n    this._batchedSubscriber1 = subscriber;\n    this._batchedSubscriberFlags |= SF.Subscriber1;\n    return true;\n  }\n  if (!(subscriberFlags & SF.Subscriber2)) {\n    this._batchedSubscriber2 = subscriber;\n    this._batchedSubscriberFlags |= SF.Subscriber2;\n    return true;\n  }\n  if (!(subscriberFlags & SF.SubscribersRest)) {\n    this._batchedSubscribersRest = [subscriber];\n    this._batchedSubscriberFlags |= SF.SubscribersRest;\n    return true;\n  }\n  this._batchedSubscribersRest.push(subscriber);\n  return true;\n}\n\nfunction removeBatchedSubscriber(this: IBatchedSubscriberCollection<MutationKind.collection>, subscriber: IBatchedCollectionSubscriber): boolean {\n  const subscriberFlags = this._batchedSubscriberFlags;\n  if ((subscriberFlags & SF.Subscriber0) && this._batchedSubscriber0 === subscriber) {\n    this._batchedSubscriber0 = null;\n    this._batchedSubscriberFlags &= ~SF.Subscriber0;\n    return true;\n  }\n  if ((subscriberFlags & SF.Subscriber1) && this._batchedSubscriber1 === subscriber) {\n    this._batchedSubscriber1 = null;\n    this._batchedSubscriberFlags &= ~SF.Subscriber1;\n    return true;\n  }\n  if ((subscriberFlags & SF.Subscriber2) && this._batchedSubscriber2 === subscriber) {\n    this._batchedSubscriber2 = null;\n    this._batchedSubscriberFlags &= ~SF.Subscriber2;\n    return true;\n  }\n  if (subscriberFlags & SF.SubscribersRest) {\n    const subscribers = this._batchedSubscribersRest;\n    for (let i = 0, ii = subscribers.length; i < ii; ++i) {\n      if (subscribers[i] === subscriber) {\n        subscribers.splice(i, 1);\n        if (ii === 1) {\n          this._batchedSubscriberFlags &= ~SF.SubscribersRest;\n        }\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction callBatchedCollectionSubscribers(this: IBatchedSubscriberCollection<MutationKind.collection>, indexMap: IndexMap, flags: LF): void {\n  const subscriber0 = this._batchedSubscriber0;\n  const subscriber1 = this._batchedSubscriber1;\n  const subscriber2 = this._batchedSubscriber2;\n  let subscribers = this._batchedSubscribersRest;\n  if (subscribers !== null) {\n    subscribers = subscribers.slice();\n  }\n  if (subscriber0 !== null) {\n    subscriber0.handleBatchedChange(indexMap, flags);\n  }\n  if (subscriber1 !== null) {\n    subscriber1.handleBatchedChange(indexMap, flags);\n  }\n  if (subscriber2 !== null) {\n    subscriber2.handleBatchedChange(indexMap, flags);\n  }\n  const length = subscribers && subscribers.length;\n  if (length !== undefined && length > 0) {\n    for (let i = 0; i < length; ++i) {\n      const subscriber = subscribers[i];\n      if (subscriber !== null) {\n        subscriber.handleBatchedChange(indexMap, flags);\n      }\n    }\n  }\n}\n\nfunction hasBatchedSubscribers(this: IBatchedSubscriberCollection<MutationKind.collection>): boolean {\n  return this._batchedSubscriberFlags !== SF.None;\n}\n\nfunction hasBatchedSubscriber(this: IBatchedSubscriberCollection<MutationKind.collection>, subscriber: IBatchedCollectionSubscriber): boolean {\n  // Flags here is just a perf tweak\n  // Compared to not using flags, it's a moderate speed-up when this collection does not have the subscriber;\n  // and minor slow-down when it does, and the former is more common than the latter.\n  const subscriberFlags = this._batchedSubscriberFlags;\n  if ((subscriberFlags & SF.Subscriber0) && this._batchedSubscriber0 === subscriber) {\n    return true;\n  }\n  if ((subscriberFlags & SF.Subscriber1) && this._batchedSubscriber1 === subscriber) {\n    return true;\n  }\n  if ((subscriberFlags & SF.Subscriber2) && this._batchedSubscriber2 === subscriber) {\n    return true;\n  }\n  if (subscriberFlags & SF.SubscribersRest) {\n    // no need to check length; if the flag is set, there's always at least one\n    const subscribers = this._batchedSubscribersRest;\n    for (let i = 0, ii = subscribers.length; i < ii; ++i) {\n      if (subscribers[i] === subscriber) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n","import { Tracer } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport {\n  IPropertySubscriber,\n  IProxy,\n  IProxyObserver,\n  IProxySubscriber,\n  MutationKind\n} from '../observation';\nimport { subscriberCollection } from './subscriber-collection';\n\nconst slice = Array.prototype.slice;\n\nconst lookup: WeakMap<object, IProxy> = new WeakMap();\nexport interface ProxySubscriberCollection<TObj extends object = object> extends IProxyObserver<TObj, MutationKind.instance> {}\n\n@subscriberCollection(MutationKind.instance)\nexport class ProxySubscriberCollection<TObj extends object = object> implements ProxySubscriberCollection<TObj> {\n  public readonly proxy: IProxy<TObj>;\n  public readonly raw: TObj;\n  public readonly key: PropertyKey;\n  constructor(proxy: IProxy<TObj>, raw: TObj, key: PropertyKey) {\n    if (Tracer.enabled) { Tracer.enter('ProxySubscriberCollection', 'constructor', slice.call(arguments)); }\n    this.raw = raw;\n    this.key = key;\n    this.proxy = proxy;\n    this.subscribe = this.addSubscriber;\n    this.unsubscribe = this.removeSubscriber;\n    if (raw[key] instanceof Object) { // Ensure we observe array indices and newly created object properties\n      raw[key] = ProxyObserver.getOrCreate(raw[key]).proxy;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public setValue(value: unknown, flags?: LifecycleFlags): void {\n    const oldValue = this.raw[this.key];\n    if (oldValue !== value) {\n      this.raw[this.key] = value;\n      this.callSubscribers(value, oldValue, flags | LifecycleFlags.proxyStrategy | LifecycleFlags.updateTargetInstance);\n    }\n  }\n  public getValue(): unknown {\n    return this.raw[this.key];\n  }\n}\n\nexport interface ProxyObserver<TObj extends object = object> extends IProxyObserver<TObj> {}\n\n@subscriberCollection(MutationKind.proxy)\nexport class ProxyObserver<TObj extends object = object> implements ProxyObserver<TObj> {\n  public readonly proxy: IProxy<TObj>;\n  public readonly raw: TObj;\n  private readonly subscribers: Record<PropertyKey, ProxySubscriberCollection<TObj>>;\n\n  constructor(obj: TObj) {\n    if (Tracer.enabled) { Tracer.enter('ProxyObserver', 'constructor', slice.call(arguments)); }\n    this.raw = obj;\n    this.proxy = new Proxy<TObj>(obj, this) as IProxy<TObj>;\n    lookup.set(obj, this.proxy);\n    this.subscribers = {};\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public static getProxyOrSelf<T extends object = object>(obj: T): T {\n    if ((obj as { $raw?: T }).$raw === undefined) {\n      const proxy = lookup.get(obj) as T;\n      if (proxy === undefined) {\n        return obj;\n      }\n      return proxy;\n    }\n    return obj;\n  }\n  public static getRawIfProxy<T extends object = object>(obj: T): T {\n    const raw = (obj as { $raw?: T }).$raw;\n    if (raw === undefined) {\n      return obj;\n    }\n    return raw;\n  }\n\n  public static getOrCreate<T extends object>(obj: T & { $raw?: T; $observer?: ProxyObserver<T> }): IProxyObserver<T>;\n  public static getOrCreate<T extends object>(obj: T & { $raw?: T; $observer?: ProxyObserver<T> }, key: PropertyKey): IProxyObserver<T, MutationKind.instance>;\n  public static getOrCreate<T extends object>(obj: T & { $raw?: T; $observer?: ProxyObserver<T> }, key?: PropertyKey): IProxyObserver<T, MutationKind.instance | MutationKind.proxy> {\n    let proxyObserver: ProxyObserver<T>;\n    if (obj.$raw === undefined) {\n      const proxy = lookup.get(obj);\n      if (proxy === undefined) {\n        proxyObserver = new ProxyObserver(obj);\n      } else {\n        proxyObserver = (proxy as { $observer: ProxyObserver<T> }).$observer;\n      }\n    } else {\n      proxyObserver = obj.$observer;\n    }\n    if (arguments.length === 1) {\n      return proxyObserver;\n    }\n    let subscribers = proxyObserver.subscribers[key as string | number];\n    if (subscribers === undefined) {\n      const raw = this.getRawIfProxy(obj);\n      const proxy = proxyObserver.proxy;\n      subscribers = proxyObserver.subscribers[key as string | number] = new ProxySubscriberCollection(proxy, raw, key);\n    }\n    return subscribers;\n  }\n\n  public static isProxy<T extends object>(obj: T & { $raw?: T }): obj is T & { $raw: T; $observer: ProxyObserver<T> } {\n    return obj.$raw !== undefined;\n  }\n\n  public get(target: TObj, p: PropertyKey, receiver?: unknown): unknown {\n    if (p === '$observer') {\n      return this;\n    }\n    if (p === '$raw') {\n      return target;\n    }\n    return target[p];\n  }\n\n  public set(target: TObj, p: PropertyKey, value: unknown, receiver?: unknown): boolean {\n    const oldValue = target[p];\n    if (oldValue !== value) {\n      Reflect.set(target, p, value, target);\n      this.callPropertySubscribers(value, oldValue, p);\n      this.callSubscribers(p, value, oldValue, LifecycleFlags.proxyStrategy | LifecycleFlags.updateTargetInstance);\n    }\n    return true;\n  }\n\n  public deleteProperty(target: TObj, p: PropertyKey): boolean {\n    const oldValue = target[p];\n    if (Reflect.deleteProperty(target, p)) {\n      if (oldValue !== undefined) {\n        this.callPropertySubscribers(undefined, oldValue, p);\n        this.callSubscribers(p, undefined, oldValue, LifecycleFlags.proxyStrategy | LifecycleFlags.updateTargetInstance);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  public defineProperty(target: TObj, p: PropertyKey, attributes: PropertyDescriptor): boolean {\n    const oldValue = target[p];\n    if (Reflect.defineProperty(target, p, attributes)) {\n      if (attributes.value !== oldValue) {\n        this.callPropertySubscribers(attributes.value, oldValue, p);\n        this.callSubscribers(p, attributes.value, oldValue, LifecycleFlags.proxyStrategy | LifecycleFlags.updateTargetInstance);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  public apply(target: TObj, thisArg: unknown, argArray?: unknown[]): unknown {\n    // tslint:disable-next-line:ban-types // Reflect API dictates this\n    return Reflect.apply(target as Function, target, argArray);\n  }\n\n  public subscribe(subscriber: IProxySubscriber): void;\n  public subscribe(subscriber: IPropertySubscriber, key: PropertyKey): void;\n  public subscribe(subscriber: IPropertySubscriber | IProxySubscriber, key?: PropertyKey): void {\n    if (arguments.length === 1) {\n      this.addSubscriber(subscriber);\n    } else {\n      let subscribers = this.subscribers[key as string | number];\n      if (subscribers === undefined) {\n        subscribers = this.subscribers[key as string | number] = new ProxySubscriberCollection(this.proxy, this.raw, key);\n      }\n      subscribers.addSubscriber(subscriber as IPropertySubscriber);\n    }\n  }\n\n  public unsubscribe(subscriber: IProxySubscriber): void;\n  public unsubscribe(subscriber: IPropertySubscriber, key: PropertyKey): void;\n  public unsubscribe(subscriber: IPropertySubscriber | IProxySubscriber, key?: PropertyKey): void {\n    if (arguments.length === 1) {\n      this.removeSubscriber(subscriber);\n    } else {\n      const subscribers = this.subscribers[key as string | number];\n      if (subscribers !== undefined) {\n        subscribers.removeSubscriber(subscriber as IPropertySubscriber);\n      }\n    }\n  }\n\n  private callPropertySubscribers(newValue: unknown, oldValue: unknown, key: PropertyKey): void {\n    const subscribers = this.subscribers[key as string | number];\n    if (subscribers !== undefined) {\n      subscribers.callSubscribers(newValue, oldValue, LifecycleFlags.proxyStrategy | LifecycleFlags.updateTargetInstance);\n    }\n  }\n}\n","import { LifecycleFlags } from '../flags';\nimport { AccessorOrObserver, CollectionKind, ICollectionObserver, IObserversLookup } from '../observation';\n\n/** @internal */\nexport function mayHaveObservers(value: unknown): value is { $observers: IObserversLookup; $observer: ICollectionObserver<CollectionKind.indexed | CollectionKind.keyed> } {\n  return value !== null && typeof value === 'object';\n}\n\n/**\n * Checks if the provided value is an object and whether it has any observers declared on it.\n * If so, then patch all of its properties recursively. This is essentially a dirty check.\n * @internal\n */\nexport function patchProperties(value: unknown, flags: LifecycleFlags): void {\n  if (mayHaveObservers(value)) {\n    if (value.$observers !== undefined) {\n      const observers = value.$observers;\n      let key: string;\n      let observer: AccessorOrObserver;\n      for (key in observers) {\n        observer = observers[key];\n        if (observer.$patch !== undefined) {\n          observer.$patch(flags | LifecycleFlags.patchStrategy | LifecycleFlags.updateTargetInstance | LifecycleFlags.fromFlush);\n        }\n      }\n    } else if (value.$observer !== undefined && value.$observer.$patch !== undefined) {\n      value.$observer.$patch(flags | LifecycleFlags.patchStrategy | LifecycleFlags.updateTargetInstance | LifecycleFlags.fromFlush);\n    }\n  }\n}\n\n/** @internal */\nexport function patchProperty(value: unknown, key: string, flags: LifecycleFlags): void {\n  if (mayHaveObservers(value) && value.$observers !== undefined) {\n    const observer = value.$observers[key];\n    if (observer && observer.$patch !== undefined) {\n      observer.$patch(flags | LifecycleFlags.patchStrategy | LifecycleFlags.updateTargetInstance | LifecycleFlags.fromFlush);\n    }\n  }\n}\n","import { Reporter } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport { IPropertySubscriber, MutationKind, PropertyObserver } from '../observation';\nimport { subscriberCollection } from './subscriber-collection';\n\nconst defineProperty = Reflect.defineProperty;\n// note: we're reusing the same object for setting all descriptors, just changing some properties as needed\n//   this works, because the properties are copied by defineProperty (so changing them afterwards doesn't affect existing descriptors)\n// see also: https://tc39.github.io/ecma262/#sec-topropertydescriptor\nconst observedPropertyDescriptor: PropertyDescriptor = {\n  get: undefined,\n  set: undefined,\n  enumerable: true,\n  configurable: true\n};\n\nfunction subscribe(this: PropertyObserver, subscriber: IPropertySubscriber): void {\n  if (this.observing === false) {\n    this.observing = true;\n    this.currentValue = this.obj[this.propertyKey];\n    if ((this.persistentFlags & LifecycleFlags.patchStrategy) === 0) {\n      observedPropertyDescriptor.get = () => this.getValue();\n      observedPropertyDescriptor.set = value => { this.setValue(value, LifecycleFlags.none); };\n      if (!defineProperty(this.obj, this.propertyKey, observedPropertyDescriptor)) {\n        Reporter.write(1, this.propertyKey, this.obj);\n      }\n    }\n  }\n  this.addSubscriber(subscriber);\n}\n\nfunction dispose(this: PropertyObserver): void {\n  Reflect.deleteProperty(this.obj, this.propertyKey);\n  this.obj = null;\n  this.propertyKey = null;\n  this.currentValue = null;\n}\n\nexport function propertyObserver(): ClassDecorator {\n  // tslint:disable-next-line:ban-types // ClassDecorator expects it to be derived from Function\n  return function(target: Function): void {\n    subscriberCollection(MutationKind.instance)(target);\n    const proto = target.prototype as PropertyObserver;\n\n    proto.observing = false;\n    proto.obj = null;\n    proto.propertyKey = null;\n    // Note: this will generate some \"false positive\" changes when setting a target undefined from a source undefined,\n    // but those aren't harmful because the changes won't be propagated through to subscribers during $bind anyway.\n    // It will, however, solve some \"false negative\" changes when the source value is undefined but the target value is not;\n    // in such cases, this.currentValue in the observer being undefined will block the change from propagating to the target.\n    // This is likely not working correctly in vCurrent either.\n    proto.currentValue = Symbol();\n\n    proto.subscribe = proto.subscribe || subscribe;\n    proto.unsubscribe = proto.unsubscribe || proto.removeSubscriber;\n\n    proto.dispose = proto.dispose || dispose;\n  };\n}\n","import { IIndexable, Tracer } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport { IPropertyObserver, IPropertySubscriber } from '../observation';\nimport { patchProperties } from './patch-properties';\nimport { propertyObserver } from './property-observer';\n\nconst slice = Array.prototype.slice;\n\nexport interface SetterObserver extends IPropertyObserver<IIndexable, string> {}\n\n@propertyObserver()\nexport class SetterObserver implements SetterObserver {\n  public subscribe: (subscriber: IPropertySubscriber) => void;\n  public unsubscribe: (subscriber: IPropertySubscriber) => void;\n  public readonly persistentFlags: LifecycleFlags;\n  public obj: IIndexable;\n  public propertyKey: string;\n\n  constructor(flags: LifecycleFlags, obj: IIndexable, propertyKey: string) {\n    if (Tracer.enabled) { Tracer.enter('SetterObserver', 'constructor', slice.call(arguments)); }\n    this.persistentFlags = flags & LifecycleFlags.persistentBindingFlags;\n    this.obj = obj;\n    this.propertyKey = propertyKey;\n    if (flags & LifecycleFlags.patchStrategy) {\n      this.getValue = this.getValueDirect;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public getValue(): unknown {\n    return this.currentValue;\n  }\n  public getValueDirect(): unknown {\n    return this.obj[this.propertyKey];\n  }\n  public setValue(newValue: unknown, flags: LifecycleFlags): void {\n    const currentValue = this.currentValue;\n    if (currentValue !== newValue || (flags & LifecycleFlags.patchStrategy)) {\n      this.currentValue = newValue;\n      if (!(flags & LifecycleFlags.fromBind)) {\n        this.callSubscribers(newValue, currentValue, this.persistentFlags | flags);\n      }\n      // If subscribe() has been called, the target property descriptor is replaced by these getter/setter methods,\n      // so calling obj[propertyKey] will actually return this.currentValue.\n      // However, if subscribe() was not yet called (indicated by !this.observing), the target descriptor\n      // is unmodified and we need to explicitly set the property value.\n      // This will happen in one-time, to-view and two-way bindings during $bind, meaning that the $bind will not actually update the target value.\n      // This wasn't visible in vCurrent due to connect-queue always doing a delayed update, so in many cases it didn't matter whether $bind updated the target or not.\n      if (!this.observing) {\n        this.obj[this.propertyKey] = newValue;\n      }\n    }\n  }\n  public $patch(flags: LifecycleFlags): void {\n    this.callSubscribers(this.obj[this.propertyKey], this.currentValue, this.persistentFlags | flags);\n    patchProperties(this.obj[this.propertyKey], flags);\n  }\n}\n","import { IIndexable, Reporter, StrictPrimitive, Tracer } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport { IBinding } from '../lifecycle';\nimport {\n  IBindingContext,\n  IOverrideContext,\n  IScope,\n  ObservedCollection,\n  ObserversLookup,\n  PropertyObserver\n} from '../observation';\nimport { ProxyObserver } from './proxy-observer';\nimport { SetterObserver } from './setter-observer';\n\nconst slice = Array.prototype.slice;\n\nconst enum RuntimeError {\n  UndefinedScope = 250, // trying to evaluate on something that's not a valid binding\n  NullScope = 251, // trying to evaluate on an unbound binding\n  NilOverrideContext = 252,\n  NilParentScope = 253\n}\n\n/** @internal */\nexport class InternalObserversLookup {\n  public getOrCreate(flags: LifecycleFlags, obj: IBindingContext | IOverrideContext, key: string): PropertyObserver {\n    if (Tracer.enabled) { Tracer.enter('InternalObserversLookup', 'getOrCreate', slice.call(arguments)); }\n    if (this[key] === undefined) {\n      this[key] = new SetterObserver(flags, obj, key);\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n    return this[key];\n  }\n}\n\nexport type BindingContextValue = ObservedCollection | StrictPrimitive | IIndexable;\n\nexport class BindingContext implements IBindingContext {\n  [key: string]: BindingContextValue;\n\n  public readonly $synthetic: true;\n\n  public $observers: ObserversLookup<IOverrideContext>;\n\n  private constructor(keyOrObj?: string | IIndexable, value?: BindingContextValue) {\n    this.$synthetic = true;\n\n    if (keyOrObj !== undefined) {\n      if (value !== undefined) {\n        // if value is defined then it's just a property and a value to initialize with\n        this[keyOrObj as string] = value;\n      } else {\n        // can either be some random object or another bindingContext to clone from\n        for (const prop in keyOrObj as IIndexable) {\n          if (keyOrObj.hasOwnProperty(prop)) {\n            this[prop] = keyOrObj[prop];\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Create a new synthetic `BindingContext` for use in a `Scope`.\n   * @param obj Optional. An existing object or `BindingContext` to (shallow) clone (own) properties from.\n   */\n  public static create(flags: LifecycleFlags, obj?: IIndexable): BindingContext;\n  /**\n   * Create a new synthetic `BindingContext` for use in a `Scope`.\n   * @param key The name of the only property to initialize this `BindingContext` with.\n   * @param value The value of the only property to initialize this `BindingContext` with.\n   */\n  public static create(flags: LifecycleFlags, key: string, value: BindingContextValue): BindingContext;\n  /**\n   * Create a new synthetic `BindingContext` for use in a `Scope`.\n   *\n   * This overload signature is simply the combined signatures of the other two, and can be used\n   * to keep strong typing in situations where the arguments are dynamic.\n   */\n  public static create(flags: LifecycleFlags, keyOrObj?: string | IIndexable, value?: BindingContextValue): BindingContext;\n  public static create(flags: LifecycleFlags, keyOrObj?: string | IIndexable, value?: BindingContextValue): BindingContext {\n    const bc = new BindingContext(keyOrObj, value);\n    if (flags & LifecycleFlags.proxyStrategy) {\n      return ProxyObserver.getOrCreate(bc).proxy;\n    }\n    return bc;\n  }\n\n  public static get(scope: IScope, name: string, ancestor: number, flags: LifecycleFlags): IBindingContext | IOverrideContext | IBinding {\n    if (Tracer.enabled) { Tracer.enter('BindingContext', 'get', slice.call(arguments)); }\n    if (scope === undefined) {\n      throw Reporter.error(RuntimeError.UndefinedScope);\n    }\n    if (scope === null) {\n      throw Reporter.error(RuntimeError.NullScope);\n    }\n    let overrideContext = scope.overrideContext;\n\n    if (ancestor > 0) {\n      // jump up the required number of ancestor contexts (eg $parent.$parent requires two jumps)\n      while (ancestor > 0) {\n        if (overrideContext.parentOverrideContext === null) {\n          if (Tracer.enabled) { Tracer.leave(); }\n          return undefined;\n        }\n        ancestor--;\n        overrideContext = overrideContext.parentOverrideContext;\n      }\n\n      if (Tracer.enabled) { Tracer.leave(); }\n      return name in overrideContext ? overrideContext : overrideContext.bindingContext;\n    }\n\n    // traverse the context and it's ancestors, searching for a context that has the name.\n    while (overrideContext && !(name in overrideContext) && !(overrideContext.bindingContext && name in overrideContext.bindingContext)) {\n      overrideContext = overrideContext.parentOverrideContext;\n    }\n\n    if (overrideContext) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      // we located a context with the property.  return it.\n      return name in overrideContext ? overrideContext : overrideContext.bindingContext;\n    }\n\n    // the name wasn't found. see if parent scope traversal is allowed and if so, try that\n    if ((flags & LifecycleFlags.allowParentScopeTraversal) && scope.parentScope !== null) {\n      const result = this.get(scope.parentScope, name, ancestor, flags\n        // unset the flag; only allow one level of scope boundary traversal\n        & ~LifecycleFlags.allowParentScopeTraversal\n        // tell the scope to return null if the name could not be found\n        | LifecycleFlags.isTraversingParentScope);\n      if (result !== null) {\n        if (Tracer.enabled) { Tracer.leave(); }\n        return result;\n      }\n    }\n\n    // still nothing found. return the root binding context (or null\n    // if this is a parent scope traversal, to ensure we fall back to the\n    // correct level)\n    if (flags & LifecycleFlags.isTraversingParentScope) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return null;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n    return scope.bindingContext || scope.overrideContext;\n  }\n\n  public getObservers(flags: LifecycleFlags): ObserversLookup<IOverrideContext> {\n    if (Tracer.enabled) { Tracer.enter('BindingContext', 'getObservers', slice.call(arguments)); }\n    if (this.$observers === undefined) {\n      this.$observers = new InternalObserversLookup() as ObserversLookup<IOverrideContext>;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n    return this.$observers;\n  }\n}\n\nexport class Scope implements IScope {\n  public bindingContext: IBindingContext | IBinding;\n  public overrideContext: IOverrideContext;\n  // parentScope is strictly internal API and mainly for replaceable template controller.\n  // NOT intended for regular scope traversal!\n  /** @internal */public readonly parentScope: IScope | null;\n\n  private constructor(bindingContext: IBindingContext | IBinding, overrideContext: IOverrideContext) {\n    this.bindingContext = bindingContext;\n    this.overrideContext = overrideContext;\n    this.parentScope = null;\n  }\n\n  /**\n   * Create a new `Scope` backed by the provided `BindingContext` and a new standalone `OverrideContext`.\n   *\n   * Use this overload when the scope is for the root component, in a unit test,\n   * or when you simply want to prevent binding expressions from traversing up the scope.\n   * @param bc The `BindingContext` to back the `Scope` with.\n   */\n  public static create(flags: LifecycleFlags, bc: IBindingContext | IBinding): Scope;\n  /**\n   * Create a new `Scope` backed by the provided `BindingContext` and `OverrideContext`.\n   *\n   * @param bc The `BindingContext` to back the `Scope` with.\n   * @param oc The `OverrideContext` to back the `Scope` with.\n   * If a binding expression attempts to access a property that does not exist on the `BindingContext`\n   * during binding, it will traverse up via the `parentOverrideContext` of the `OverrideContext` until\n   * it finds the property.\n   */\n  public static create(flags: LifecycleFlags, bc: IBindingContext | IBinding, oc: IOverrideContext): Scope;\n  /**\n   * Create a new `Scope` backed by the provided `BindingContext` and `OverrideContext`.\n   *\n   * Use this overload when the scope is for the root component, in a unit test,\n   * or when you simply want to prevent binding expressions from traversing up the scope.\n   *\n   * @param bc The `BindingContext` to back the `Scope` with.\n   * @param oc null. This overload is functionally equivalent to not passing this argument at all.\n   */\n  public static create(flags: LifecycleFlags, bc: IBindingContext | IBinding, oc: null): Scope;\n  public static create(flags: LifecycleFlags, bc: IBindingContext | IBinding, oc?: IOverrideContext | null): Scope {\n    if (Tracer.enabled) { Tracer.enter('Scope', 'create', slice.call(arguments)); }\n    if (Tracer.enabled) { Tracer.leave(); }\n    return new Scope(bc, oc === null || oc === undefined ? OverrideContext.create(flags, bc, oc) : oc);\n  }\n\n  public static fromOverride(flags: LifecycleFlags, oc: IOverrideContext): Scope {\n    if (Tracer.enabled) { Tracer.enter('Scope', 'fromOverride', slice.call(arguments)); }\n    if (oc === null || oc === undefined) {\n      throw Reporter.error(RuntimeError.NilOverrideContext);\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n    return new Scope(oc.bindingContext, oc);\n  }\n\n  public static fromParent(flags: LifecycleFlags, ps: IScope | null, bc: IBindingContext | IBinding): Scope {\n    if (Tracer.enabled) { Tracer.enter('Scope', 'fromParent', slice.call(arguments)); }\n    if (ps === null || ps === undefined) {\n      throw Reporter.error(RuntimeError.NilParentScope);\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n    return new Scope(bc, OverrideContext.create(flags, bc, ps.overrideContext));\n  }\n}\n\nexport class OverrideContext implements IOverrideContext {\n  [key: string]: ObservedCollection | StrictPrimitive | IIndexable;\n\n  public readonly $synthetic: true;\n  public bindingContext: IBindingContext | IBinding;\n  public parentOverrideContext: IOverrideContext | null;\n\n  private constructor(bindingContext: IBindingContext | IBinding, parentOverrideContext: IOverrideContext | null) {\n    this.$synthetic = true;\n    this.bindingContext = bindingContext;\n    this.parentOverrideContext = parentOverrideContext;\n  }\n\n  public static create(flags: LifecycleFlags, bc: IBindingContext | IBinding, poc: IOverrideContext | null): OverrideContext {\n    if (Tracer.enabled) { Tracer.enter('OverrideContext', 'create', slice.call(arguments)); }\n    if (Tracer.enabled) { Tracer.leave(); }\n    return new OverrideContext(bc, poc === undefined ? null : poc);\n  }\n\n  public getObservers(): ObserversLookup<IOverrideContext> {\n    if (Tracer.enabled) { Tracer.enter('OverrideContext', 'getObservers', slice.call(arguments)); }\n    if (this.$observers === undefined) {\n      this.$observers = new InternalObserversLookup();\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n    return this.$observers as ObserversLookup<IOverrideContext>;\n  }\n}\n","import { DI, Immutable } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport { IPropertySubscriber } from '../observation';\n\ntype Signal = string;\n\nexport interface ISignaler {\n  signals: Immutable<Record<string, Set<IPropertySubscriber>>>;\n  dispatchSignal(name: Signal, flags?: LifecycleFlags): void;\n  addSignalListener(name: Signal, listener: IPropertySubscriber): void;\n  removeSignalListener(name: Signal, listener: IPropertySubscriber): void;\n}\n\nexport const ISignaler = DI.createInterface<ISignaler>('ISignaler').withDefault(x => x.singleton(Signaler));\n\n/** @internal */\nexport class Signaler implements ISignaler {\n  public signals: Record<string, Set<IPropertySubscriber>>;\n\n  constructor() {\n    this.signals = Object.create(null);\n  }\n\n  public dispatchSignal(name: Signal, flags?: LifecycleFlags): void {\n    const listeners = this.signals[name];\n    if (listeners === undefined) {\n      return;\n    }\n    for (const listener of listeners.keys()) {\n      listener.handleChange(undefined, undefined, flags | LifecycleFlags.updateTargetInstance);\n    }\n  }\n\n  public addSignalListener(name: Signal, listener: IPropertySubscriber): void {\n    const signals = this.signals;\n    const listeners = signals[name];\n    if (listeners === undefined) {\n      signals[name] = new Set([listener]);\n    } else {\n      listeners.add(listener);\n    }\n  }\n\n  public removeSignalListener(name: Signal, listener: IPropertySubscriber): void {\n    const listeners = this.signals[name];\n    if (listeners) {\n      listeners.delete(listener);\n    }\n  }\n}\n","import {\n  Class,\n  Constructable,\n  IContainer,\n  IResourceDefinition,\n  IResourceKind,\n  IResourceType,\n  Registration,\n  Writable\n} from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport { IBinding } from '../lifecycle';\nimport { IScope } from '../observation';\n\nexport interface IBindingBehavior {\n  bind(flags: LifecycleFlags, scope: IScope, binding: IBinding): void;\n  unbind(flags: LifecycleFlags, scope: IScope, binding: IBinding): void;\n}\n\nexport interface IBindingBehaviorDefinition extends IResourceDefinition { }\n\nexport interface IBindingBehaviorType<C extends Constructable = Constructable> extends IResourceType<IBindingBehaviorDefinition, InstanceType<C> & IBindingBehavior> { }\n\nexport interface IBindingBehaviorResource extends\n  IResourceKind<IBindingBehaviorDefinition, IBindingBehavior, Class<IBindingBehavior>> {\n}\n\nfunction register(this: IBindingBehaviorType, container: IContainer): void {\n  const resourceKey = BindingBehaviorResource.keyFrom(this.description.name);\n  container.register(Registration.singleton(resourceKey, this));\n}\n\nexport function bindingBehavior(definition: IBindingBehaviorDefinition): BindingBehaviorDecorator;\nexport function bindingBehavior(name: string): BindingBehaviorDecorator;\nexport function bindingBehavior(nameOrDefinition: string | IBindingBehaviorDefinition): BindingBehaviorDecorator;\nexport function bindingBehavior(nameOrDefinition: string | IBindingBehaviorDefinition): BindingBehaviorDecorator {\n  return target => BindingBehaviorResource.define(nameOrDefinition, target);\n}\n\nfunction keyFrom(this: IBindingBehaviorResource, name: string): string {\n  return `${this.name}:${name}`;\n}\n\nfunction isType<T>(this: IBindingBehaviorResource, Type: T & Partial<IBindingBehaviorType>): Type is T & IBindingBehaviorType {\n  return Type.kind === this;\n}\n\nfunction define<T extends Constructable = Constructable>(this: IBindingBehaviorResource, definition: IBindingBehaviorDefinition, ctor: T): T & IBindingBehaviorType<T>;\nfunction define<T extends Constructable = Constructable>(this: IBindingBehaviorResource, name: string, ctor: T): T & IBindingBehaviorType<T>;\nfunction define<T extends Constructable = Constructable>(this: IBindingBehaviorResource, nameOrDefinition: string | IBindingBehaviorDefinition, ctor: T): T & IBindingBehaviorType<T>;\nfunction define<T extends Constructable = Constructable>(this: IBindingBehaviorResource, nameOrDefinition: string | IBindingBehaviorDefinition, ctor: T): T & IBindingBehaviorType<T> {\n  const Type = ctor as T & IBindingBehaviorType<T>;\n  const WritableType = Type as T & Writable<IBindingBehaviorType<T>>;\n  const description = typeof nameOrDefinition === 'string'\n    ? { name: nameOrDefinition }\n    : nameOrDefinition;\n\n  WritableType.kind = BindingBehaviorResource as IBindingBehaviorResource;\n  WritableType.description = description;\n  Type.register = register;\n\n  return Type;\n}\n\nexport const BindingBehaviorResource = {\n  name: 'binding-behavior',\n  keyFrom,\n  isType,\n  define\n};\n\nexport type BindingBehaviorDecorator = <T extends Constructable>(target: T) => T & IBindingBehaviorType<T>;\n","import {\n  Class,\n  Constructable,\n  IContainer,\n  IResourceDefinition,\n  IResourceKind,\n  IResourceType,\n  Registration,\n  Writable\n} from '@aurelia/kernel';\n\nexport interface IValueConverter {\n  toView(input: unknown, ...args: unknown[]): unknown;\n  fromView?(input: unknown, ...args: unknown[]): unknown;\n}\n\nexport interface IValueConverterDefinition extends IResourceDefinition { }\n\nexport interface IValueConverterType<C extends Constructable = Constructable> extends IResourceType<IValueConverterDefinition, InstanceType<C> & IValueConverter> { }\n\nexport interface IValueConverterResource extends\n  IResourceKind<IValueConverterDefinition, IValueConverter, Class<IValueConverter>> { }\n\nfunction register(this: IValueConverterType, container: IContainer): void {\n  const resourceKey = this.kind.keyFrom(this.description.name);\n  container.register(Registration.singleton(resourceKey, this));\n}\n\nexport function valueConverter(definition: IValueConverterDefinition): ValueConverterDecorator;\nexport function valueConverter(name: string): ValueConverterDecorator;\nexport function valueConverter(nameOrDefinition: string | IValueConverterDefinition): ValueConverterDecorator;\nexport function valueConverter(nameOrDefinition: string | IValueConverterDefinition): ValueConverterDecorator {\n  return target => ValueConverterResource.define(nameOrDefinition, target);\n}\n\nfunction keyFrom(this: IValueConverterResource, name: string): string {\n  return `${this.name}:${name}`;\n}\n\nfunction isType<T>(this: IValueConverterResource, Type: T & Partial<IValueConverterType>): Type is T & IValueConverterType {\n  return Type.kind === this;\n}\n\nfunction define<T extends Constructable = Constructable>(this: IValueConverterResource, definition: IValueConverterDefinition, ctor: T): T & IValueConverterType<T>;\nfunction define<T extends Constructable = Constructable>(this: IValueConverterResource, name: string, ctor: T): T & IValueConverterType<T>;\nfunction define<T extends Constructable = Constructable>(this: IValueConverterResource, nameOrDefinition: string | IValueConverterDefinition, ctor: T): T & IValueConverterType<T>;\nfunction define<T extends Constructable = Constructable>(this: IValueConverterResource, nameOrDefinition: string | IValueConverterDefinition, ctor: T): T & IValueConverterType<T> {\n  const Type = ctor as T & Writable<IValueConverterType>;\n  const description = typeof nameOrDefinition === 'string'\n    ? { name: nameOrDefinition }\n    : nameOrDefinition;\n\n  Type.kind = ValueConverterResource;\n  Type.description = description;\n  Type.register = register;\n\n  return Type as T & IValueConverterType<T>;\n}\n\nexport const ValueConverterResource = {\n  name: 'value-converter',\n  keyFrom,\n  isType,\n  define\n};\n\nexport type ValueConverterDecorator = <T extends Constructable>(target: T) => T & IValueConverterType<T>;\n","import { IIndexable, IServiceLocator, PLATFORM, Reporter, StrictPrimitive } from '@aurelia/kernel';\nimport {\n  BinaryOperator,\n  BindingIdentifierOrPattern,\n  CallsFunction,\n  Connects,\n  HasAncestor,\n  HasBind,\n  HasUnbind,\n  IAccessKeyedExpression,\n  IAccessMemberExpression,\n  IAccessScopeExpression,\n  IAccessThisExpression,\n  IArrayBindingPattern,\n  IArrayLiteralExpression,\n  IAssignExpression,\n  IBinaryExpression,\n  IBindingBehaviorExpression,\n  IBindingIdentifier,\n  ICallFunctionExpression,\n  ICallMemberExpression,\n  ICallScopeExpression,\n  IConditionalExpression,\n  IExpression,\n  IForOfStatement,\n  IHtmlLiteralExpression,\n  IInterpolationExpression,\n  IObjectBindingPattern,\n  IObjectLiteralExpression,\n  IPrimitiveLiteralExpression,\n  IsAssign,\n  IsAssignable,\n  IsBinary,\n  IsBindingBehavior,\n  IsExpressionOrStatement,\n  IsLeftHandSide,\n  IsLiteral,\n  IsPrimary,\n  IsResource,\n  IsValueConverter,\n  ITaggedTemplateExpression,\n  ITemplateExpression,\n  IUnaryExpression,\n  IValueConverterExpression,\n  IVisitor,\n  Observes,\n  UnaryOperator\n} from '../ast';\nimport { ExpressionKind, LifecycleFlags } from '../flags';\nimport { IBinding } from '../lifecycle';\nimport { Collection, IBindingContext, IOverrideContext, IScope, ObservedCollection } from '../observation';\nimport { BindingContext } from '../observation/binding-context';\nimport { ProxyObserver } from '../observation/proxy-observer';\nimport { ISignaler } from '../observation/signaler';\nimport { BindingBehaviorResource, IBindingBehavior } from '../resources/binding-behavior';\nimport { IValueConverter, ValueConverterResource } from '../resources/value-converter';\nimport { IConnectableBinding } from './connectable';\n\nexport function connects(expr: IsExpressionOrStatement): expr is Connects {\n  return (expr.$kind & ExpressionKind.Connects) === ExpressionKind.Connects;\n}\nexport function observes(expr: IsExpressionOrStatement): expr is Observes {\n  return (expr.$kind & ExpressionKind.Observes) === ExpressionKind.Observes;\n}\nexport function callsFunction(expr: IsExpressionOrStatement): expr is CallsFunction {\n  return (expr.$kind & ExpressionKind.CallsFunction) === ExpressionKind.CallsFunction;\n}\nexport function hasAncestor(expr: IsExpressionOrStatement): expr is HasAncestor {\n  return (expr.$kind & ExpressionKind.HasAncestor) === ExpressionKind.HasAncestor;\n}\nexport function isAssignable(expr: IsExpressionOrStatement): expr is IsAssignable {\n  return (expr.$kind & ExpressionKind.IsAssignable) === ExpressionKind.IsAssignable;\n}\nexport function isLeftHandSide(expr: IsExpressionOrStatement): expr is IsLeftHandSide {\n  return (expr.$kind & ExpressionKind.IsLeftHandSide) === ExpressionKind.IsLeftHandSide;\n}\nexport function isPrimary(expr: IsExpressionOrStatement): expr is IsPrimary {\n  return (expr.$kind & ExpressionKind.IsPrimary) === ExpressionKind.IsPrimary;\n}\nexport function isResource(expr: IsExpressionOrStatement): expr is IsResource {\n  return (expr.$kind & ExpressionKind.IsResource) === ExpressionKind.IsResource;\n}\nexport function hasBind(expr: IsExpressionOrStatement): expr is HasBind {\n  return (expr.$kind & ExpressionKind.HasBind) === ExpressionKind.HasBind;\n}\nexport function hasUnbind(expr: IsExpressionOrStatement): expr is HasUnbind {\n  return (expr.$kind & ExpressionKind.HasUnbind) === ExpressionKind.HasUnbind;\n}\nexport function isLiteral(expr: IsExpressionOrStatement): expr is IsLiteral {\n  return (expr.$kind & ExpressionKind.IsLiteral) === ExpressionKind.IsLiteral;\n}\nexport function arePureLiterals(expressions: ReadonlyArray<IsExpressionOrStatement> | undefined): expressions is IsLiteral[] {\n  if (expressions === undefined || expressions.length === 0) {\n    return true;\n  }\n  for (let i = 0; i < expressions.length; ++i) {\n    if (!isPureLiteral(expressions[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nexport function isPureLiteral(expr: IsExpressionOrStatement): expr is IsLiteral {\n  if (isLiteral(expr)) {\n    switch (expr.$kind) {\n      case ExpressionKind.ArrayLiteral:\n        return arePureLiterals(expr.elements);\n      case ExpressionKind.ObjectLiteral:\n        return arePureLiterals(expr.values);\n      case ExpressionKind.Template:\n        return arePureLiterals(expr.expressions);\n      case ExpressionKind.PrimitiveLiteral:\n        return true;\n    }\n  }\n  return false;\n}\n\nconst enum RuntimeError {\n  NoLocator = 202,\n  NoBehaviorFound = 203,\n  BehaviorAlreadyApplied = 204,\n  NoConverterFound = 205,\n  NoBinding = 206,\n  NotAFunction = 207,\n  UnknownOperator = 208,\n  UndefinedScope = 250, // trying to evaluate on something that's not a valid binding\n  NullScope = 251, // trying to evaluate on an unbound binding\n}\n\nexport class BindingBehavior implements IBindingBehaviorExpression {\n  public readonly $kind: ExpressionKind.BindingBehavior;\n  public readonly expression: IsBindingBehavior;\n  public readonly name: string;\n  public readonly args: ReadonlyArray<IsAssign>;\n  public readonly behaviorKey: string;\n\n  constructor(expression: IsBindingBehavior, name: string, args: ReadonlyArray<IsAssign>) {\n    this.$kind = ExpressionKind.BindingBehavior;\n    this.expression = expression;\n    this.name = name;\n    this.args = args;\n    this.behaviorKey = BindingBehaviorResource.keyFrom(this.name);\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): unknown {\n    return this.expression.evaluate(flags, scope, locator);\n  }\n\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, value: unknown): unknown {\n    return this.expression.assign(flags, scope, locator, value);\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    this.expression.connect(flags, scope, binding);\n  }\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    if (scope === undefined) {\n      throw Reporter.error(RuntimeError.UndefinedScope, this);\n    }\n    if (scope === null) {\n      throw Reporter.error(RuntimeError.NullScope, this);\n    }\n    if (!binding) {\n      throw Reporter.error(RuntimeError.NoBinding, this);\n    }\n    const locator = binding.locator;\n    if (!locator) {\n      throw Reporter.error(RuntimeError.NoLocator, this);\n    }\n    if (hasBind(this.expression)) {\n      this.expression.bind(flags, scope, binding);\n    }\n    const behaviorKey = this.behaviorKey;\n    const behavior = locator.get<IBindingBehavior>(behaviorKey);\n    if (!behavior) {\n      throw Reporter.error(RuntimeError.NoBehaviorFound, this);\n    }\n    if (binding[behaviorKey] === undefined || binding[behaviorKey] === null) {\n      binding[behaviorKey] = behavior;\n      behavior.bind.apply(behavior, ([flags, scope, binding] as unknown[]).concat(evalList(flags, scope, locator, this.args)));\n    } else {\n      Reporter.write(RuntimeError.BehaviorAlreadyApplied, this);\n    }\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const behaviorKey = this.behaviorKey;\n    if (binding[behaviorKey] !== undefined && binding[behaviorKey] !== null) {\n      binding[behaviorKey].unbind(flags, scope, binding);\n      binding[behaviorKey] = null;\n    } else {\n      // TODO: this is a temporary hack to make testing repeater keyed mode easier,\n      // we should remove this idempotency again when track-by attribute is implemented\n      Reporter.write(RuntimeError.BehaviorAlreadyApplied, this);\n    }\n    if (hasUnbind(this.expression)) {\n      this.expression.unbind(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitBindingBehavior(this);\n  }\n}\n\nexport class ValueConverter implements IValueConverterExpression {\n  public readonly $kind: ExpressionKind.ValueConverter;\n  public readonly expression: IsValueConverter;\n  public readonly name: string;\n  public readonly args: ReadonlyArray<IsAssign>;\n  public readonly converterKey: string;\n\n  constructor(expression: IsValueConverter, name: string, args: ReadonlyArray<IsAssign>) {\n    this.$kind = ExpressionKind.ValueConverter;\n    this.expression = expression;\n    this.name = name;\n    this.args = args;\n    this.converterKey = ValueConverterResource.keyFrom(this.name);\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): unknown {\n    if (!locator) {\n      throw Reporter.error(RuntimeError.NoLocator, this);\n    }\n    const converter = locator.get<ValueConverter & IValueConverter>(this.converterKey);\n    if (!converter) {\n      throw Reporter.error(RuntimeError.NoConverterFound, this);\n    }\n    if ('toView' in converter) {\n      const args = this.args;\n      const len = args.length;\n      const result = Array(len + 1);\n      result[0] = this.expression.evaluate(flags, scope, locator);\n      for (let i = 0; i < len; ++i) {\n        result[i + 1] = args[i].evaluate(flags, scope, locator);\n      }\n      return converter.toView.apply(converter, result);\n    }\n    return this.expression.evaluate(flags, scope, locator);\n  }\n\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, value: unknown): unknown {\n    if (!locator) {\n      throw Reporter.error(RuntimeError.NoLocator, this);\n    }\n    const converter = locator.get<ValueConverter & IValueConverter>(this.converterKey);\n    if (!converter) {\n      throw Reporter.error(RuntimeError.NoConverterFound, this);\n    }\n    if ('fromView' in converter) {\n      value = converter.fromView.apply(converter, [value].concat(evalList(flags, scope, locator, this.args)));\n    }\n    return this.expression.assign(flags, scope, locator, value);\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    if (scope === undefined) {\n      throw Reporter.error(RuntimeError.UndefinedScope, this);\n    }\n    if (scope === null) {\n      throw Reporter.error(RuntimeError.NullScope, this);\n    }\n    if (!binding) {\n      throw Reporter.error(RuntimeError.NoBinding, this);\n    }\n    const locator = binding.locator;\n    if (!locator) {\n      throw Reporter.error(RuntimeError.NoLocator, this);\n    }\n    this.expression.connect(flags, scope, binding);\n    const args = this.args;\n    for (let i = 0, ii = args.length; i < ii; ++i) {\n      args[i].connect(flags, scope, binding);\n    }\n    const converter = locator.get(this.converterKey) as { signals?: string[] };\n    if (!converter) {\n      throw Reporter.error(RuntimeError.NoConverterFound, this);\n    }\n    const signals = converter.signals;\n    if (signals === undefined) {\n      return;\n    }\n    const signaler = locator.get(ISignaler);\n    for (let i = 0, ii = signals.length; i < ii; ++i) {\n      signaler.addSignalListener(signals[i], binding);\n    }\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const locator = binding.locator;\n    const converter = locator.get(this.converterKey) as { signals?: string[] };\n    const signals = converter.signals;\n    if (signals === undefined) {\n      return;\n    }\n    const signaler = locator.get(ISignaler);\n    for (let i = 0, ii = signals.length; i < ii; ++i) {\n      signaler.removeSignalListener(signals[i], binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitValueConverter(this);\n  }\n}\n\nexport class Assign implements IAssignExpression {\n  public readonly $kind: ExpressionKind.Assign;\n  public readonly target: IsAssignable;\n  public readonly value: IsAssign;\n\n  constructor(target: IsAssignable, value: IsAssign) {\n    this.$kind = ExpressionKind.Assign;\n    this.target = target;\n    this.value = value;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): unknown {\n    return this.target.assign(flags, scope, locator, this.value.evaluate(flags, scope, locator));\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    return;\n  }\n\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, value: unknown): unknown {\n    this.value.assign(flags, scope, locator, value);\n    return this.target.assign(flags, scope, locator, value);\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAssign(this);\n  }\n}\n\nexport class Conditional implements IConditionalExpression {\n  public readonly $kind: ExpressionKind.Conditional;\n  public assign: IExpression['assign'];\n  public readonly condition: IsBinary;\n  public readonly yes: IsAssign;\n  public readonly no: IsAssign;\n\n  constructor(condition: IsBinary, yes: IsAssign, no: IsAssign) {\n    this.$kind = ExpressionKind.Conditional;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.condition = condition;\n    this.yes = yes;\n    this.no = no;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): unknown {\n    return (!!this.condition.evaluate(flags, scope, locator))\n      ? this.yes.evaluate(flags, scope, locator)\n      : this.no.evaluate(flags, scope, locator);\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const condition = this.condition;\n    if (condition.evaluate(flags, scope, null)) {\n      this.condition.connect(flags, scope, binding);\n      this.yes.connect(flags, scope, binding);\n    } else {\n      this.condition.connect(flags, scope, binding);\n      this.no.connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitConditional(this);\n  }\n}\n\nexport class AccessThis implements IAccessThisExpression {\n  public static readonly $this: AccessThis = new AccessThis(0);\n  public static readonly $parent: AccessThis = new AccessThis(1);\n  public readonly $kind: ExpressionKind.AccessThis;\n  public assign: IExpression['assign'];\n  public connect: IExpression['connect'];\n  public readonly ancestor: number;\n\n  constructor(ancestor: number = 0) {\n    this.$kind = ExpressionKind.AccessThis;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.connect = PLATFORM.noop;\n    this.ancestor = ancestor;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): IBindingContext | undefined {\n    if (scope === undefined) {\n      throw Reporter.error(RuntimeError.UndefinedScope, this);\n    }\n    if (scope === null) {\n      throw Reporter.error(RuntimeError.NullScope, this);\n    }\n    let oc: IOverrideContext | null = scope.overrideContext;\n    let i = this.ancestor;\n    while (i-- && oc) {\n      oc = oc.parentOverrideContext;\n    }\n    return i < 1 && oc ? oc.bindingContext : undefined;\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAccessThis(this);\n  }\n}\n\nexport class AccessScope implements IAccessScopeExpression {\n  public readonly $kind: ExpressionKind.AccessScope;\n  public readonly name: string;\n  public readonly ancestor: number;\n\n  constructor(name: string, ancestor: number = 0) {\n    this.$kind = ExpressionKind.AccessScope;\n    this.name = name;\n    this.ancestor = ancestor;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): IBindingContext | IBinding | IOverrideContext {\n    return BindingContext.get(scope, this.name, this.ancestor, flags)[this.name];\n  }\n\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, value: unknown): unknown {\n    const obj = BindingContext.get(scope, this.name, this.ancestor, flags) as IBindingContext;\n    if (obj instanceof Object) {\n      if (obj.$observers !== undefined && obj.$observers[this.name] !== undefined) {\n        obj.$observers[this.name].setValue(value, flags);\n        return value;\n      } else {\n        return obj[this.name] = value;\n      }\n    }\n    return undefined;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const context = BindingContext.get(scope, this.name, this.ancestor, flags);\n    binding.observeProperty(flags, context, this.name);\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAccessScope(this);\n  }\n}\n\nexport class AccessMember implements IAccessMemberExpression {\n  public readonly $kind: ExpressionKind.AccessMember;\n  public readonly object: IsLeftHandSide;\n  public readonly name: string;\n\n  constructor(object: IsLeftHandSide, name: string) {\n    this.$kind = ExpressionKind.AccessMember;\n    this.object = object;\n    this.name = name;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): unknown {\n    const instance = this.object.evaluate(flags, scope, locator) as IIndexable;\n    return instance === null || instance === undefined ? instance : instance[this.name];\n  }\n\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, value: unknown): unknown {\n    const obj = this.object.evaluate(flags, scope, locator) as IBindingContext;\n    if (obj instanceof Object) {\n      if (obj.$observers !== undefined && obj.$observers[this.name] !== undefined) {\n        obj.$observers[this.name].setValue(value, flags);\n      } else {\n        obj[this.name] = value;\n      }\n    } else {\n      this.object.assign(flags, scope, locator, { [this.name]: value });\n    }\n    return value;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const obj = this.object.evaluate(flags, scope, null) as IIndexable;\n    this.object.connect(flags, scope, binding);\n    if (obj instanceof Object) {\n      binding.observeProperty(flags, obj, this.name);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAccessMember(this);\n  }\n}\n\nexport class AccessKeyed implements IAccessKeyedExpression {\n  public readonly $kind: ExpressionKind.AccessKeyed;\n  public readonly object: IsLeftHandSide;\n  public readonly key: IsAssign;\n\n  constructor(object: IsLeftHandSide, key: IsAssign) {\n    this.$kind = ExpressionKind.AccessKeyed;\n    this.object = object;\n    this.key = key;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): unknown {\n    const instance = this.object.evaluate(flags, scope, locator) as IIndexable;\n    if (instance instanceof Object) {\n      const key = this.key.evaluate(flags, scope, locator) as string;\n      return instance[key];\n    }\n    return undefined;\n  }\n\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, value: unknown): unknown {\n    const instance = this.object.evaluate(flags, scope, locator) as IIndexable;\n    const key = this.key.evaluate(flags, scope, locator) as string;\n    return instance[key] = value;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const obj = this.object.evaluate(flags, scope, null);\n    this.object.connect(flags, scope, binding);\n    if (typeof obj === 'object' && obj !== null) {\n      this.key.connect(flags, scope, binding);\n      const key = this.key.evaluate(flags, scope, null);\n\n      if (Array.isArray(obj) && isNumeric(key)) {\n        // Only observe array indexers in proxy mode\n        if (flags & LifecycleFlags.proxyStrategy) {\n          binding.observeProperty(flags, obj, key as unknown as string);\n        }\n      } else {\n        // observe the property represented by the key as long as it's not an array indexer\n        // (note: string indexers behave the same way as numeric indexers as long as they represent numbers)\n        binding.observeProperty(flags, obj, key as string);\n      }\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitAccessKeyed(this);\n  }\n}\n\nexport class CallScope implements ICallScopeExpression {\n  public readonly $kind: ExpressionKind.CallScope;\n  public assign: IExpression['assign'];\n  public readonly name: string;\n  public readonly args: ReadonlyArray<IsAssign>;\n  public readonly ancestor: number;\n\n  constructor(name: string, args: ReadonlyArray<IsAssign>, ancestor: number = 0) {\n    this.$kind = ExpressionKind.CallScope;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.name = name;\n    this.args = args;\n    this.ancestor = ancestor;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator | null): unknown {\n    const args = evalList(flags, scope, locator, this.args);\n    const context = BindingContext.get(scope, this.name, this.ancestor, flags);\n    const func = getFunction(flags, context, this.name);\n    if (func) {\n      return func.apply(context, args);\n    }\n    return undefined;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const args = this.args;\n    for (let i = 0, ii = args.length; i < ii; ++i) {\n      args[i].connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitCallScope(this);\n  }\n}\n\nexport class CallMember implements ICallMemberExpression {\n  public readonly $kind: ExpressionKind.CallMember;\n  public assign: IExpression['assign'];\n  public readonly object: IsLeftHandSide;\n  public readonly name: string;\n  public readonly args: ReadonlyArray<IsAssign>;\n\n  constructor(object: IsLeftHandSide, name: string, args: ReadonlyArray<IsAssign>) {\n    this.$kind = ExpressionKind.CallMember;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.object = object;\n    this.name = name;\n    this.args = args;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): unknown {\n    const instance = this.object.evaluate(flags, scope, locator) as IIndexable;\n    const args = evalList(flags, scope, locator, this.args);\n    const func = getFunction(flags, instance, this.name);\n    if (func) {\n      return func.apply(instance, args);\n    }\n    return undefined;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const obj = this.object.evaluate(flags, scope, null) as IIndexable;\n    this.object.connect(flags, scope, binding);\n    if (getFunction(flags & ~LifecycleFlags.mustEvaluate, obj, this.name)) {\n      const args = this.args;\n      for (let i = 0, ii = args.length; i < ii; ++i) {\n        args[i].connect(flags, scope, binding);\n      }\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitCallMember(this);\n  }\n}\n\nexport class CallFunction implements ICallFunctionExpression {\n  public readonly $kind: ExpressionKind.CallFunction;\n  public assign: IExpression['assign'];\n  public readonly func: IsLeftHandSide;\n  public readonly args: ReadonlyArray<IsAssign>;\n\n  constructor(func: IsLeftHandSide, args: ReadonlyArray<IsAssign>) {\n    this.$kind = ExpressionKind.CallFunction;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.func = func;\n    this.args = args;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): unknown {\n    const func = this.func.evaluate(flags, scope, locator);\n    if (typeof func === 'function') {\n      return func.apply(null, evalList(flags, scope, locator, this.args));\n    }\n    if (!(flags & LifecycleFlags.mustEvaluate) && (func === null || func === undefined)) {\n      return undefined;\n    }\n    throw Reporter.error(RuntimeError.NotAFunction, this);\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const func = this.func.evaluate(flags, scope, null);\n    this.func.connect(flags, scope, binding);\n    if (typeof func === 'function') {\n      const args = this.args;\n      for (let i = 0, ii = args.length; i < ii; ++i) {\n        args[i].connect(flags, scope, binding);\n      }\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitCallFunction(this);\n  }\n}\n\nexport class Binary implements IBinaryExpression {\n  public readonly $kind: ExpressionKind.Binary;\n  public assign: IExpression['assign'];\n  public readonly operation: BinaryOperator;\n  public readonly left: IsBinary;\n  public readonly right: IsBinary;\n\n  constructor(operation: BinaryOperator, left: IsBinary, right: IsBinary) {\n    this.$kind = ExpressionKind.Binary;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.operation = operation;\n    this.left = left;\n    this.right = right;\n\n    // what we're doing here is effectively moving the large switch statement from evaluate to the constructor\n    // so that the check only needs to be done once, and evaluate (which is called many times) will have a lot less\n    // work to do; we can do this because the operation can't change after it's parsed\n    this.evaluate = this[operation] as IExpression['evaluate'];\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): unknown {\n    throw Reporter.error(RuntimeError.UnknownOperator, this);\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const left = this.left.evaluate(flags, scope, null);\n    this.left.connect(flags, scope, binding);\n    if (this.operation === '&&' && !left || this.operation === '||' && left) {\n      return;\n    }\n    this.right.connect(flags, scope, binding);\n  }\n\n  private ['&&'](f: LifecycleFlags, s: IScope, l: IServiceLocator): unknown {\n    return this.left.evaluate(f, s, l) && this.right.evaluate(f, s, l);\n  }\n  private ['||'](f: LifecycleFlags, s: IScope, l: IServiceLocator): unknown {\n    return this.left.evaluate(f, s, l) || this.right.evaluate(f, s, l);\n  }\n  private ['=='](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    // tslint:disable-next-line:triple-equals\n    return this.left.evaluate(f, s, l) == this.right.evaluate(f, s, l);\n  }\n  private ['==='](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    return this.left.evaluate(f, s, l) === this.right.evaluate(f, s, l);\n  }\n  private ['!='](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    // tslint:disable-next-line:triple-equals\n    return this.left.evaluate(f, s, l) != this.right.evaluate(f, s, l);\n  }\n  private ['!=='](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    return this.left.evaluate(f, s, l) !== this.right.evaluate(f, s, l);\n  }\n  private ['instanceof'](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    const right = this.right.evaluate(f, s, l);\n    if (typeof right === 'function') {\n      return this.left.evaluate(f, s, l) instanceof right;\n    }\n    return false;\n  }\n  private ['in'](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    const right = this.right.evaluate(f, s, l);\n    if (right !== null && typeof right === 'object') {\n      return this.left.evaluate(f, s, l) as string in right;\n    }\n    return false;\n  }\n  // note: autoConvertAdd (and the null check) is removed because the default spec behavior is already largely similar\n  // and where it isn't, you kind of want it to behave like the spec anyway (e.g. return NaN when adding a number to undefined)\n  // this makes bugs in user code easier to track down for end users\n  // also, skipping these checks and leaving it to the runtime is a nice little perf boost and simplifies our code\n  private ['+'](f: LifecycleFlags, s: IScope, l: IServiceLocator): number {\n    return (this.left.evaluate(f, s, l) as number) + (this.right.evaluate(f, s, l) as number);\n  }\n  private ['-'](f: LifecycleFlags, s: IScope, l: IServiceLocator): number {\n    return (this.left.evaluate(f, s, l) as number) - (this.right.evaluate(f, s, l) as number);\n  }\n  private ['*'](f: LifecycleFlags, s: IScope, l: IServiceLocator): number {\n    return (this.left.evaluate(f, s, l) as number) * (this.right.evaluate(f, s, l) as number);\n  }\n  private ['/'](f: LifecycleFlags, s: IScope, l: IServiceLocator): number {\n    return (this.left.evaluate(f, s, l) as number) / (this.right.evaluate(f, s, l) as number);\n  }\n  private ['%'](f: LifecycleFlags, s: IScope, l: IServiceLocator): number {\n    return (this.left.evaluate(f, s, l) as number) % (this.right.evaluate(f, s, l) as number);\n  }\n  private ['<'](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    return (this.left.evaluate(f, s, l) as number) < (this.right.evaluate(f, s, l) as number);\n  }\n  private ['>'](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    return (this.left.evaluate(f, s, l) as number) > (this.right.evaluate(f, s, l) as number);\n  }\n  private ['<='](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    return (this.left.evaluate(f, s, l) as number) <= (this.right.evaluate(f, s, l) as number);\n  }\n  private ['>='](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    return (this.left.evaluate(f, s, l) as number) >= (this.right.evaluate(f, s, l) as number);\n  }\n\n  // tslint:disable-next-line:member-ordering\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitBinary(this);\n  }\n}\n\nexport class Unary implements IUnaryExpression {\n  public readonly $kind: ExpressionKind.Unary;\n  public assign: IExpression['assign'];\n  public readonly operation: UnaryOperator;\n  public readonly expression: IsLeftHandSide;\n\n  constructor(operation: UnaryOperator, expression: IsLeftHandSide) {\n    this.$kind = ExpressionKind.Unary;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.operation = operation;\n    this.expression = expression;\n\n    // see Binary (we're doing the same thing here)\n    this.evaluate = this[operation] as IExpression['evaluate'];\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): unknown {\n    throw Reporter.error(RuntimeError.UnknownOperator, this);\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    this.expression.connect(flags, scope, binding);\n  }\n\n  public ['void'](f: LifecycleFlags, s: IScope, l: IServiceLocator): undefined {\n    return void this.expression.evaluate(f, s, l);\n  }\n  public ['typeof'](f: LifecycleFlags, s: IScope, l: IServiceLocator): string {\n    return typeof this.expression.evaluate(f, s, l);\n  }\n  public ['!'](f: LifecycleFlags, s: IScope, l: IServiceLocator): boolean {\n    return !this.expression.evaluate(f, s, l);\n  }\n  public ['-'](f: LifecycleFlags, s: IScope, l: IServiceLocator): number {\n    return -(this.expression.evaluate(f, s, l) as number);\n  }\n  public ['+'](f: LifecycleFlags, s: IScope, l: IServiceLocator): number {\n    return +(this.expression.evaluate(f, s, l) as number);\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitUnary(this);\n  }\n}\nexport class PrimitiveLiteral<TValue extends StrictPrimitive = StrictPrimitive> implements IPrimitiveLiteralExpression {\n  public static readonly $undefined: PrimitiveLiteral<undefined> = new PrimitiveLiteral<undefined>(undefined);\n  public static readonly $null: PrimitiveLiteral<null> = new PrimitiveLiteral<null>(null);\n  public static readonly $true: PrimitiveLiteral<true> = new PrimitiveLiteral<true>(true);\n  public static readonly $false: PrimitiveLiteral<false> = new PrimitiveLiteral<false>(false);\n  public static readonly $empty: PrimitiveLiteral<string> = new PrimitiveLiteral<''>('');\n  public readonly $kind: ExpressionKind.PrimitiveLiteral;\n  public connect: IExpression['connect'];\n  public assign: IExpression['assign'];\n  public readonly value: TValue;\n\n  constructor(value: TValue) {\n    this.$kind = ExpressionKind.PrimitiveLiteral;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.connect = PLATFORM.noop;\n    this.value = value;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): TValue {\n    return this.value;\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitPrimitiveLiteral(this);\n  }\n}\n\nexport class HtmlLiteral implements IHtmlLiteralExpression {\n  public readonly $kind: ExpressionKind.HtmlLiteral;\n  public assign: IExpression['assign'];\n  public readonly parts: ReadonlyArray<HtmlLiteral>;\n\n  constructor(parts: ReadonlyArray<HtmlLiteral>) {\n    this.$kind = ExpressionKind.HtmlLiteral;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.parts = parts;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): string {\n    const elements = this.parts;\n    let result = '';\n    let value;\n    for (let i = 0, ii = elements.length; i < ii; ++i) {\n      value = elements[i].evaluate(flags, scope, locator);\n      if (value === undefined || value === null) {\n        continue;\n      }\n      result += value;\n    }\n    return result;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    for (let i = 0, ii = this.parts.length; i < ii; ++i) {\n      this.parts[i].connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitHtmlLiteral(this);\n  }\n}\n\nexport class ArrayLiteral implements IArrayLiteralExpression {\n  public static readonly $empty: ArrayLiteral = new ArrayLiteral(PLATFORM.emptyArray);\n  public readonly $kind: ExpressionKind.ArrayLiteral;\n  public assign: IExpression['assign'];\n  public readonly elements: ReadonlyArray<IsAssign>;\n\n  constructor(elements: ReadonlyArray<IsAssign>) {\n    this.$kind = ExpressionKind.ArrayLiteral;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.elements = elements;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): ReadonlyArray<unknown> {\n    const elements = this.elements;\n    const length = elements.length;\n    const result = Array(length);\n    for (let i = 0; i < length; ++i) {\n      result[i] = elements[i].evaluate(flags, scope, locator);\n    }\n    return result;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const elements = this.elements;\n    for (let i = 0, ii = elements.length; i < ii; ++i) {\n      elements[i].connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitArrayLiteral(this);\n  }\n}\n\nexport class ObjectLiteral implements IObjectLiteralExpression {\n  public static readonly $empty: ObjectLiteral = new ObjectLiteral(PLATFORM.emptyArray, PLATFORM.emptyArray);\n  public readonly $kind: ExpressionKind.ObjectLiteral;\n  public assign: IExpression['assign'];\n  public readonly keys: ReadonlyArray<number | string>;\n  public readonly values: ReadonlyArray<IsAssign>;\n\n  constructor(keys: ReadonlyArray<number | string>, values: ReadonlyArray<IsAssign>) {\n    this.$kind = ExpressionKind.ObjectLiteral;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.keys = keys;\n    this.values = values;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): Record<string, unknown> {\n    const instance: Record<string, unknown> = {};\n    const keys = this.keys;\n    const values = this.values;\n    for (let i = 0, ii = keys.length; i < ii; ++i) {\n      instance[keys[i]] = values[i].evaluate(flags, scope, locator);\n    }\n    return instance;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const keys = this.keys;\n    const values = this.values;\n    for (let i = 0, ii = keys.length; i < ii; ++i) {\n      values[i].connect(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitObjectLiteral(this);\n  }\n}\n\nexport class Template implements ITemplateExpression {\n  public static readonly $empty: Template = new Template(['']);\n  public readonly $kind: ExpressionKind.Template;\n  public assign: IExpression['assign'];\n  public readonly cooked: ReadonlyArray<string>;\n  public readonly expressions: ReadonlyArray<IsAssign>;\n\n  constructor(cooked: ReadonlyArray<string>, expressions?: ReadonlyArray<IsAssign>) {\n    this.$kind = ExpressionKind.Template;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.cooked = cooked;\n    this.expressions = expressions === undefined ? PLATFORM.emptyArray : expressions;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): string {\n    const expressions = this.expressions;\n    const cooked = this.cooked;\n    let result = cooked[0];\n    for (let i = 0, ii = expressions.length; i < ii; ++i) {\n      result += expressions[i].evaluate(flags, scope, locator);\n      result += cooked[i + 1];\n    }\n    return result;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const expressions = this.expressions;\n    for (let i = 0, ii = expressions.length; i < ii; ++i) {\n      expressions[i].connect(flags, scope, binding);\n      i++;\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitTemplate(this);\n  }\n}\n\nexport class TaggedTemplate implements ITaggedTemplateExpression {\n  public readonly $kind: ExpressionKind.TaggedTemplate;\n  public assign: IExpression['assign'];\n  public readonly cooked: ReadonlyArray<string> & { raw?: ReadonlyArray<string> };\n  public readonly func: IsLeftHandSide;\n  public readonly expressions: ReadonlyArray<IsAssign>;\n\n  constructor(cooked: ReadonlyArray<string> & { raw?: ReadonlyArray<string> }, raw: ReadonlyArray<string>, func: IsLeftHandSide, expressions?: ReadonlyArray<IsAssign>) {\n    this.$kind = ExpressionKind.TaggedTemplate;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.cooked = cooked;\n    this.cooked.raw = raw;\n    this.func = func;\n    this.expressions = expressions === undefined ? PLATFORM.emptyArray : expressions;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): string {\n    const expressions = this.expressions;\n    const len = expressions.length;\n    const results = Array(len);\n    for (let i = 0, ii = len; i < ii; ++i) {\n      results[i] = expressions[i].evaluate(flags, scope, locator);\n    }\n    const func = this.func.evaluate(flags, scope, locator);\n    if (typeof func !== 'function') {\n      throw Reporter.error(RuntimeError.NotAFunction, this);\n    }\n    return func.apply(null, [this.cooked].concat(results));\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    const expressions = this.expressions;\n    for (let i = 0, ii = expressions.length; i < ii; ++i) {\n      expressions[i].connect(flags, scope, binding);\n    }\n    this.func.connect(flags, scope, binding);\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitTaggedTemplate(this);\n  }\n}\n\nexport class ArrayBindingPattern implements IArrayBindingPattern {\n  public readonly $kind: ExpressionKind.ArrayBindingPattern;\n  public readonly elements: ReadonlyArray<IsAssign>;\n\n  // We'll either have elements, or keys+values, but never all 3\n  constructor(elements: ReadonlyArray<IsAssign>) {\n    this.$kind = ExpressionKind.ArrayBindingPattern;\n    this.elements = elements;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): unknown {\n    // TODO\n    return undefined;\n  }\n\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, obj: IIndexable): unknown {\n    // TODO\n    return undefined;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    return;\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitArrayBindingPattern(this);\n  }\n}\n\nexport class ObjectBindingPattern implements IObjectBindingPattern {\n  public readonly $kind: ExpressionKind.ObjectBindingPattern;\n  public readonly keys: ReadonlyArray<string | number>;\n  public readonly values: ReadonlyArray<IsAssign>;\n\n  // We'll either have elements, or keys+values, but never all 3\n  constructor(keys: ReadonlyArray<string | number>, values: ReadonlyArray<IsAssign>) {\n    this.$kind = ExpressionKind.ObjectBindingPattern;\n    this.keys = keys;\n    this.values = values;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): unknown {\n    // TODO\n    return undefined;\n  }\n\n  public assign(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator, obj: IIndexable): unknown {\n    // TODO\n    return undefined;\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    return;\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitObjectBindingPattern(this);\n  }\n}\n\nexport class BindingIdentifier implements IBindingIdentifier {\n  public readonly $kind: ExpressionKind.BindingIdentifier;\n  public readonly name: string;\n\n  constructor(name: string) {\n    this.$kind = ExpressionKind.BindingIdentifier;\n    this.name = name;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator | null): string {\n    return this.name;\n  }\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    return;\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitBindingIdentifier(this);\n  }\n}\n\nconst toStringTag = Object.prototype.toString;\n\n// https://tc39.github.io/ecma262/#sec-iteration-statements\n// https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements\nexport class ForOfStatement implements IForOfStatement {\n  public readonly $kind: ExpressionKind.ForOfStatement;\n  public assign: IExpression['assign'];\n  public readonly declaration: BindingIdentifierOrPattern;\n  public readonly iterable: IsBindingBehavior;\n\n  constructor(declaration: BindingIdentifierOrPattern, iterable: IsBindingBehavior) {\n    this.$kind = ExpressionKind.ForOfStatement;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.declaration = declaration;\n    this.iterable = iterable;\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): unknown {\n    return this.iterable.evaluate(flags, scope, locator);\n  }\n\n  public count(flags: LifecycleFlags, result: ObservedCollection | number | null | undefined): number {\n    return CountForOfStatement[toStringTag.call(result)](result);\n  }\n\n  public iterate(flags: LifecycleFlags, result: ObservedCollection | number | null | undefined, func: (arr: Collection, index: number, item: unknown) => void): void {\n    IterateForOfStatement[toStringTag.call(result)](flags | LifecycleFlags.isOriginalArray, result, func);\n  }\n\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    this.declaration.connect(flags, scope, binding);\n    this.iterable.connect(flags, scope, binding);\n  }\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    if (hasBind(this.iterable)) {\n      this.iterable.bind(flags, scope, binding);\n    }\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    if (hasUnbind(this.iterable)) {\n      this.iterable.unbind(flags, scope, binding);\n    }\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitForOfStatement(this);\n  }\n}\n\n/*\n* Note: this implementation is far simpler than the one in vCurrent and might be missing important stuff (not sure yet)\n* so while this implementation is identical to Template and we could reuse that one, we don't want to lock outselves in to potentially the wrong abstraction\n* but this class might be a candidate for removal if it turns out it does provide all we need\n*/\nexport class Interpolation implements IInterpolationExpression {\n  public readonly $kind: ExpressionKind.Interpolation;\n  public assign: IExpression['assign'];\n  public readonly parts: ReadonlyArray<string>;\n  public readonly expressions: ReadonlyArray<IsBindingBehavior>;\n  public readonly isMulti: boolean;\n  public readonly firstExpression: IsBindingBehavior;\n  constructor(parts: ReadonlyArray<string>, expressions?: ReadonlyArray<IsBindingBehavior>) {\n    this.$kind = ExpressionKind.Interpolation;\n    this.assign = PLATFORM.noop as () => unknown;\n    this.parts = parts;\n    this.expressions = expressions === undefined ? PLATFORM.emptyArray : expressions;\n    this.isMulti = this.expressions.length > 1;\n    this.firstExpression = this.expressions[0];\n  }\n\n  public evaluate(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator): string {\n    if (this.isMulti) {\n      const expressions = this.expressions;\n      const parts = this.parts;\n      let result = parts[0];\n      for (let i = 0, ii = expressions.length; i < ii; ++i) {\n        result += expressions[i].evaluate(flags, scope, locator);\n        result += parts[i + 1];\n      }\n      return result;\n    } else {\n      const parts = this.parts;\n      return parts[0] + this.firstExpression.evaluate(flags, scope, locator) + parts[1];\n    }\n  }\n  public connect(flags: LifecycleFlags, scope: IScope, binding: IConnectableBinding): void {\n    return;\n  }\n\n  public accept<T>(visitor: IVisitor<T>): T {\n    return visitor.visitInterpolation(this);\n  }\n}\n\n/// Evaluate the [list] in context of the [scope].\nfunction evalList(flags: LifecycleFlags, scope: IScope, locator: IServiceLocator | null, list: ReadonlyArray<IExpression>): unknown[] {\n  const len = list.length;\n  const result = Array(len);\n  for (let i = 0; i < len; ++i) {\n    result[i] = list[i].evaluate(flags, scope, locator);\n  }\n  return result;\n}\n\nfunction getFunction(flags: LifecycleFlags, obj: IIndexable, name: string): (...args: unknown[]) => unknown | null {\n  const func = obj === null || obj === undefined ? null : obj[name];\n  if (typeof func === 'function') {\n    return func as (...args: unknown[]) => unknown;\n  }\n  if (!(flags & LifecycleFlags.mustEvaluate) && (func === null || func === undefined)) {\n    return null;\n  }\n  throw Reporter.error(RuntimeError.NotAFunction, obj, name, func);\n}\n\nfunction isNumeric(value: unknown): value is number {\n  const valueType = typeof value;\n  if (valueType === 'number') return true;\n  if (valueType !== 'string') return false;\n  const len = (value as string).length;\n  if (len === 0) return false;\n  let char;\n  for (let i = 0; i < len; ++i) {\n    char = (value as string).charCodeAt(i);\n    if (char < 0x30 /*0*/ || char > 0x39/*9*/) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst proxyAndOriginalArray = LifecycleFlags.proxyStrategy | LifecycleFlags.isOriginalArray;\n\n/** @internal */\nexport const IterateForOfStatement = {\n  ['[object Array]'](flags: LifecycleFlags, result: unknown[], func: (arr: Collection, index: number, item: unknown) => void): void {\n    if ((flags & proxyAndOriginalArray) === proxyAndOriginalArray) {\n      // If we're in proxy mode, and the array is the original \"items\" (and not an array we created here to iterate over e.g. a set)\n      // then replace all items (which are Objects) with proxies so their properties are observed in the source view model even if no\n      // observers are explicitly created\n      const rawArray = ProxyObserver.getRawIfProxy(result);\n      const len = rawArray.length;\n      let item: unknown;\n      let i = 0;\n      for (; i < len; ++i) {\n        item = rawArray[i];\n        if (item instanceof Object) {\n          item = rawArray[i] = ProxyObserver.getOrCreate(item).proxy;\n        }\n        func(rawArray, i, item);\n      }\n    } else {\n      for (let i = 0, ii = result.length; i < ii; ++i) {\n        func(result, i, result[i]);\n      }\n    }\n  },\n  ['[object Map]'](flags: LifecycleFlags, result: Map<unknown, unknown>, func: (arr: Collection, index: number, item: unknown) => void): void {\n    const arr = Array(result.size);\n    let i = -1;\n    for (const entry of result.entries()) {\n      arr[++i] = entry;\n    }\n    IterateForOfStatement['[object Array]'](flags & ~LifecycleFlags.isOriginalArray, arr, func);\n  },\n  ['[object Set]'](flags: LifecycleFlags, result: Set<unknown>, func: (arr: Collection, index: number, item: unknown) => void): void {\n    const arr = Array(result.size);\n    let i = -1;\n    for (const key of result.keys()) {\n      arr[++i] = key;\n    }\n    IterateForOfStatement['[object Array]'](flags & ~LifecycleFlags.isOriginalArray, arr, func);\n  },\n  ['[object Number]'](flags: LifecycleFlags, result: number, func: (arr: Collection, index: number, item: unknown) => void): void {\n    const arr = Array(result);\n    for (let i = 0; i < result; ++i) {\n      arr[i] = i;\n    }\n    IterateForOfStatement['[object Array]'](flags & ~LifecycleFlags.isOriginalArray, arr, func);\n  },\n  ['[object Null]'](flags: LifecycleFlags, result: null, func: (arr: Collection, index: number, item: unknown) => void): void {\n    return;\n  },\n  ['[object Undefined]'](flags: LifecycleFlags, result: null, func: (arr: Collection, index: number, item: unknown) => void): void {\n    return;\n  }\n};\n\n/** @internal */\nexport const CountForOfStatement = {\n  ['[object Array]'](result: unknown[]): number { return result.length; },\n  ['[object Map]'](result: Map<unknown, unknown>): number { return result.size; },\n  ['[object Set]'](result: Set<unknown>): number { return result.size; },\n  ['[object Number]'](result: number): number { return result; },\n  ['[object Null]'](result: null): number { return 0; },\n  ['[object Undefined]'](result: null): number { return 0; }\n};\n","/*\n* Note: the oneTime binding now has a non-zero value for 2 reasons:\n*  - plays nicer with bitwise operations (more consistent code, more explicit settings)\n*  - allows for potentially having something like BindingMode.oneTime | BindingMode.fromView, where an initial value is set once to the view but updates from the view also propagate back to the view model\n*\n* Furthermore, the \"default\" mode would be for simple \".bind\" expressions to make it explicit for our logic that the default is being used.\n* This essentially adds extra information which binding could use to do smarter things and allows bindingBehaviors that add a mode instead of simply overwriting it\n*/\nexport enum BindingMode {\n  oneTime  = 0b0001,\n  toView   = 0b0010,\n  fromView = 0b0100,\n  twoWay   = 0b0110,\n  default  = 0b1000\n}\n\nexport const enum BindingStrategy {\n  /**\n   * Configures all components \"below\" this one to operate in getterSetter binding mode.\n   * This is the default; if no strategy is specified, this one is implied.\n   *\n   * This strategy is the most compatible, convenient and has the best performance on frequently updated bindings on components that are infrequently replaced.\n   * However, it also consumes the most resources on initialization.\n   *\n   * Cannot be combined with `proxies` or `patch`.\n   */\n  getterSetter = 0b0001,\n  /**\n   * Configures all components \"below\" this one to operate in proxy binding mode.\n   * No getters/setters are created.\n   *\n   * This strategy consumes significantly fewer resources than `getterSetter` on initialization and has the best performance on infrequently updated bindings on\n   * components that are frequently replaced.\n   * However, it consumes more resources on updates.\n   *\n   * Cannot be combined with `getterSetter` or `patch`.\n   */\n  proxies      = 0b0010,\n  /**\n   * Configures all components \"below\" this one to operate in patched binding mode.\n   * Nothing is observed; to propagate changes, you manually need to call `$patch` on the component.\n   *\n   * This strategy consumes the least amount of resources and has the fastest initialization.\n   * Performance on updates will depend heavily on how it's used, but tends to be worse on a large number of\n   * nested bindings/components due to a larger number of reads on all properties.\n   *\n   * Cannot be combined with `getterSetter` or `proxies`.\n   */\n  patch        = 0b0100,\n  /**\n   * Configures any repeaters \"below\" this component to operate in keyed mode.\n   * To only put a single repeater in that mode, use `& keyed` (this will change to track-by etc soon)\n   *\n   * Can be combined with either `getterSetter`, `proxies` or `patch`.\n   */\n  keyed        = 0b1000\n}\n\nconst mandatoryStrategy = BindingStrategy.getterSetter | BindingStrategy.proxies | BindingStrategy.patch;\n\nexport function ensureValidStrategy(strategy: BindingStrategy | null | undefined): BindingStrategy {\n  if ((strategy & mandatoryStrategy) === 0 || strategy === BindingStrategy.keyed) {\n    // TODO: probably want to validate that user isn't trying to mix proxy/patch, getterSetter/patch, getterSetter/proxy\n    // TODO: also need to make sure that strategy can be changed away from patch/proxies inside the component tree (not here though, but just making a note)\n    return strategy | BindingStrategy.getterSetter;\n  }\n  return strategy;\n}\n\nexport const enum State {\n  none                  = 0b000000000000,\n  isBinding             = 0b000000000001,\n  isBound               = 0b000000000010,\n  isAttaching           = 0b000000000100,\n  isAttached            = 0b000000001000,\n  isMounted             = 0b000000010000,\n  isDetaching           = 0b000000100000,\n  isUnbinding           = 0b000001000000,\n  isCached              = 0b000010000000,\n  isContainerless       = 0b000100000000,\n  isPatching            = 0b001000000000\n}\n\nexport const enum Hooks {\n  none                   = 0b000000000001,\n  hasCreated             = 0b000000000010,\n  hasBinding             = 0b000000000100,\n  hasBound               = 0b000000001000,\n  hasAttaching           = 0b000000010000,\n  hasAttached            = 0b000000100000,\n  hasDetaching           = 0b000001000000,\n  hasDetached            = 0b000010000000,\n  hasUnbinding           = 0b000100000000,\n  hasUnbound             = 0b001000000000,\n  hasRender              = 0b010000000000,\n  hasCaching             = 0b100000000000\n}\n\nexport const enum LifecycleFlags {\n  none                      = 0b0_00000000_000000000000_00_0000,\n  // Bitmask for flags that need to be stored on a binding during $bind for mutation\n  // callbacks outside of $bind\n  persistentBindingFlags    = 0b1_00000000_000000000000_00_1111,\n  allowParentScopeTraversal = 0b1_00000000_000000000000_00_0000,\n  bindingStrategy           = 0b0_00000000_000000000000_00_1111,\n  getterSetterStrategy      = 0b0_00000000_000000000000_00_0001,\n  proxyStrategy             = 0b0_00000000_000000000000_00_0010,\n  patchStrategy             = 0b0_00000000_000000000000_00_0100,\n  keyedStrategy             = 0b0_00000000_000000000000_00_1000,\n  update                    = 0b0_00000000_000000000000_11_0000,\n  updateTargetInstance      = 0b0_00000000_000000000000_01_0000,\n  updateSourceExpression    = 0b0_00000000_000000000000_10_0000,\n  from                      = 0b0_00000000_111111111111_00_0000,\n  fromFlush                 = 0b0_00000000_000000000111_00_0000,\n  fromAsyncFlush            = 0b0_00000000_000000000001_00_0000,\n  fromSyncFlush             = 0b0_00000000_000000000010_00_0000,\n  fromTick                  = 0b0_00000000_000000000100_00_0000,\n  fromStartTask             = 0b0_00000000_000000001000_00_0000,\n  fromStopTask              = 0b0_00000000_000000010000_00_0000,\n  fromBind                  = 0b0_00000000_000000100000_00_0000,\n  fromUnbind                = 0b0_00000000_000001000000_00_0000,\n  fromAttach                = 0b0_00000000_000010000000_00_0000,\n  fromDetach                = 0b0_00000000_000100000000_00_0000,\n  fromCache                 = 0b0_00000000_001000000000_00_0000,\n  fromDOMEvent              = 0b0_00000000_010000000000_00_0000,\n  fromLifecycleTask         = 0b0_00000000_100000000000_00_0000,\n  allowPublishRoundtrip     = 0b0_00000001_000000000000_00_0000,\n  isPublishing              = 0b0_00000010_000000000000_00_0000,\n  mustEvaluate              = 0b0_00000100_000000000000_00_0000,\n  parentUnmountQueued       = 0b0_00001000_000000000000_00_0000,\n  // this flag is for the synchronous flush before detach (no point in updating the\n  // DOM if it's about to be detached)\n  doNotUpdateDOM            = 0b0_00010000_000000000000_00_0000,\n  isTraversingParentScope   = 0b0_00100000_000000000000_00_0000,\n  isOriginalArray           = 0b0_01000000_000000000000_00_0000,\n  isCollectionMutation      = 0b0_10000000_000000000000_00_0000,\n}\n\nexport const enum ExpressionKind {\n  Connects             = 0b000000000001_00000, // The expression's connect() function calls observeProperty and/or calls connect() on another expression that it wraps (all expressions except for AccessThis, PrimitiveLiteral, CallMember/Function and Assign)\n  Observes             = 0b000000000010_00000, // The expression's connect() function calls observeProperty (only AccessScope, AccessMember and AccessKeyed do this)\n  CallsFunction        = 0b000000000100_00000, // Calls a function (CallFunction, CallScope, CallMember, TaggedTemplate) -> needs a valid function object returning from its lefthandside's evaluate()\n  HasAncestor          = 0b000000001000_00000, // Has an \"ancestor\" property, meaning the expression could climb up the context (only AccessThis, AccessScope and CallScope)\n  IsPrimary            = 0b000000010000_00000, // Is a primary expression according to ES parsing rules\n  IsLeftHandSide       = 0b000000100000_00000, // Is a left-hand side expression according to ES parsing rules, includes IsPrimary\n  HasBind              = 0b000001000000_00000, // Has a bind() method (currently only BindingBehavior)\n  HasUnbind            = 0b000010000000_00000, // Has an unbind() method (currentl only BindingBehavior and ValueConverter)\n  IsAssignable         = 0b000100000000_00000, // Is an assignable expression according to ES parsing rules (only AccessScope, AccessMember, AccessKeyed ans Assign)\n  IsLiteral            = 0b001000000000_00000, // Is an Aurelia resource (ValueConverter or BindingBehavior)\n  IsResource           = 0b010000000000_00000, // Is literal expression (Primitive, Array, Object or Template)\n  IsForDeclaration     = 0b100000000000_00000, // Is a For declaration (for..of, for..in -> currently only ForOfStatement)\n  Type                 = 0b000000000000_11111, // Type mask to uniquely identify each AST class (concrete types start below)\n  // ---------------------------------------------------------------------------------------------------------------------------\n  AccessThis           = 0b000000111000_00001, //               HasAncestor\n  AccessScope          = 0b000100111011_00010, // IsAssignable  HasAncestor       Observes  Connects\n  ArrayLiteral         = 0b001000110001_00011, //                                           Connects\n  ObjectLiteral        = 0b001000110001_00100, //                                           Connects\n  PrimitiveLiteral     = 0b001000110000_00101, //\n  Template             = 0b001000110001_00110, //                                           Connects\n  Unary                = 0b000000000001_00111, //                                           Connects\n  CallScope            = 0b000000101101_01000, //               HasAncestor  CallsFunction  Connects\n  CallMember           = 0b000000100100_01001, //                            CallsFunction\n  CallFunction         = 0b000000100100_01010, //                            CallsFunction\n  AccessMember         = 0b000100100011_01011, // IsAssignable                    Observes  Connects\n  AccessKeyed          = 0b000100100011_01100, // IsAssignable                    Observes  Connects\n  TaggedTemplate       = 0b000000100101_01101, //                            CallsFunction  Connects\n  Binary               = 0b000000000001_01110, //                                           Connects\n  Conditional          = 0b000000000001_11111, //                                           Connects\n  Assign               = 0b000100000000_10000, // IsAssignable\n  ValueConverter       = 0b010010000001_10001, //                                           Connects\n  BindingBehavior      = 0b010011000001_10010, //                                           Connects\n  HtmlLiteral          = 0b000000000001_10011, //                                           Connects\n  ArrayBindingPattern  = 0b100000000000_10100, //\n  ObjectBindingPattern = 0b100000000000_10101, //\n  BindingIdentifier    = 0b100000000000_10110, //\n  ForOfStatement       = 0b000011000001_10111, //                                           Connects\n  Interpolation        = 0b000000000000_11000  //\n}\n","import {\n  DI,\n  IContainer,\n  IDisposable,\n  Immutable,\n  InjectArray,\n  IResolver,\n  IServiceLocator,\n  PLATFORM,\n  Registration,\n  Tracer\n} from '@aurelia/kernel';\nimport { ITargetedInstruction, TemplateDefinition, TemplatePartDefinitions } from './definitions';\nimport { INode, INodeSequence, IRenderLocation } from './dom';\nimport { Hooks, LifecycleFlags, State } from './flags';\nimport { IChangeTracker, IOverrideContext, IPatchable, IScope, ObserversLookup } from './observation';\n\nconst slice = Array.prototype.slice;\nexport interface IState {\n  $state?: State;\n  $lifecycle?: ILifecycle;\n}\n\nexport interface IBinding {\n  readonly $nextBinding: IBinding | null;\n  readonly $prevBinding: IBinding | null;\n  readonly locator: IServiceLocator;\n  readonly $scope: IScope | null;\n  readonly $state: State;\n  $bind(flags: LifecycleFlags, scope: IScope): void;\n  $unbind(flags: LifecycleFlags): void;\n}\n\n/**\n * An object containing the necessary information to render something for display.\n */\nexport interface IRenderable<T extends INode = INode> extends IState {\n  /**\n   * The Bindings that belong to this instance.\n   */\n  $bindingHead?: IBinding;\n  $bindingTail?: IBinding;\n\n  /**\n   * The Views, CustomElements, CustomAttributes and other components that are children of this instance.\n   */\n  $componentHead?: IComponent;\n  $componentTail?: IComponent;\n\n  /**\n   * The (dependency) context of this instance.\n   *\n   * Contains any dependencies required by this instance or its children.\n   */\n  readonly $context: IRenderContext<T>;\n\n  /**\n   * The nodes that represent the visible aspect of this instance.\n   *\n   * Typically this will be a sequence of `DOM` nodes contained in a `DocumentFragment`\n   */\n  readonly $nodes: INodeSequence<T>;\n\n  /**\n   * The binding scope that the `$bindables` of this instance will be bound to.\n   *\n   * This includes the `BindingContext` which can be either a user-defined view model instance, or a synthetic view model instantiated by a `templateController`\n   */\n  readonly $scope: IScope;\n}\n\nexport const IRenderable = DI.createInterface<IRenderable>('IRenderable').noDefault();\n\nexport interface IRenderContext<T extends INode = INode> extends IServiceLocator {\n  createChild(): IRenderContext<T>;\n  render(flags: LifecycleFlags, renderable: IRenderable<T>, targets: ArrayLike<object>, templateDefinition: TemplateDefinition, host?: T, parts?: TemplatePartDefinitions): void;\n  beginComponentOperation(renderable: IRenderable<T>, target: object, instruction: Immutable<ITargetedInstruction>, factory?: IViewFactory<T>, parts?: TemplatePartDefinitions, location?: IRenderLocation<T>, locationIsContainer?: boolean): IDisposable;\n}\n\nexport interface IView<T extends INode = INode> extends IRenderable<T>, IMountableComponent {\n  readonly cache: IViewCache<T>;\n  readonly isFree: boolean;\n  readonly location: IRenderLocation<T>;\n\n  /**\n   * Reserves this `IView` for mounting at a particular `IRenderLocation`.\n   * Also marks this `IView` such that it cannot be returned to the cache until\n   * it is released again.\n   *\n   * @param location The RenderLocation before which the view will be appended to the DOM.\n   */\n  hold(location: IRenderLocation<T>): void;\n\n  /**\n   * Marks this `IView` such that it can be returned to the cache when it is unmounted.\n   *\n   * If this `IView` is not currently attached, it will be unmounted immediately.\n   *\n   * @param flags The `LifecycleFlags` to pass to the unmount operation (only effective\n   * if the view is already in detached state).\n   *\n   * @returns Whether this `IView` can/will be returned to cache\n   */\n  release(flags: LifecycleFlags): boolean;\n\n  lockScope(scope: IScope): void;\n}\n\nexport interface IViewCache<T extends INode = INode> {\n  readonly isCaching: boolean;\n  setCacheSize(size: number | '*', doNotOverrideIfAlreadySet: boolean): void;\n  canReturnToCache(view: IView<T>): boolean;\n  tryReturnToCache(view: IView<T>): boolean;\n}\n\nexport interface IViewFactory<T extends INode = INode> extends IViewCache<T> {\n  readonly name: string;\n  create(flags?: LifecycleFlags): IView<T>;\n}\n\nexport const IViewFactory = DI.createInterface<IViewFactory>('IViewFactory').noDefault();\n\n/**\n * Defines optional lifecycle hooks that will be called only when they are implemented.\n */\nexport interface ILifecycleHooks extends IState {\n  $hooks?: Hooks;\n  /** @internal */$nextBound?: ILifecycleHooks;\n  /** @internal */$nextUnbound?: ILifecycleHooks;\n  /** @internal */$nextAttached?: ILifecycleHooks;\n  /** @internal */$nextDetached?: ILifecycleHooks;\n\n  /**\n   * Called at the end of `$hydrate`.\n   *\n   * @description\n   * This is the second and last \"hydrate\" lifecycle hook (after `render`). It happens only once per instance (contrary to bind/attach\n   * which can happen many times per instance), though it can happen many times per type (once for each instance)\n   *\n   * This hook is called right before the `$bind` lifecycle starts, making this the last opportunity\n   * for any high-level post processing on initialized properties.\n   */\n  created?(flags: LifecycleFlags): void;\n\n  /**\n   * Called at the start of `$bind`, before this instance and its children (if any) are bound.\n   *\n   * @description\n   * This is the first \"create\" lifecycle hook of the hooks that can occur multiple times per instance,\n   * and the third lifecycle hook (after `render` and `created`) of the very first this.lifecycle.\n   */\n  binding?(flags: LifecycleFlags): void;\n\n  /**\n   * Called at the end of `$bind`, after this instance and its children (if any) are bound.\n   *\n   * @description\n   * This is the second \"create\" lifecycle hook (after `binding`) of the hooks that can occur multiple times per instance,\n   * and the fourth lifecycle hook (after `render`, `created` and `binding`) of the very first this.lifecycle.\n   */\n  bound?(flags: LifecycleFlags): void;\n\n  /**\n   * Called at the start of `$unbind`, before this instance and its children (if any) are unbound.\n   *\n   * @description\n   * This is the fourth \"cleanup\" lifecycle hook (after `detaching`, `caching` and `detached`)\n   *\n   * Last opportunity to perform any source or target updates before the bindings are disconnected.\n   *\n   */\n  unbinding?(flags: LifecycleFlags): void;\n\n  /**\n   * Called at the end of `$unbind`, after this instance and its children (if any) are unbound.\n   *\n   * @description\n   * This is the fifth (and last) \"cleanup\" lifecycle hook (after `detaching`, `caching`, `detached`\n   * and `unbinding`).\n   *\n   * The lifecycle either ends here, or starts at `$bind` again.\n   */\n  unbound?(flags: LifecycleFlags): void;\n\n  /**\n   * Called at the start of `$attach`, before this instance and its children (if any) are attached.\n   *\n   * @description\n   * This is the third \"create\" lifecycle hook (after `binding` and `bound`) of the hooks that can occur multiple times per instance,\n   * and the fifth lifecycle hook (after `render`, `created`, `binding` and `bound`) of the very first lifecycle\n   *\n   * This is the time to add any (sync or async) tasks (e.g. animations) to the lifecycle that need to happen before\n   * the nodes are added to the DOM.\n   */\n  attaching?(flags: LifecycleFlags): void;\n\n  /**\n   * Called at the end of `$attach`, after this instance and its children (if any) are attached.\n   *\n   * @description\n   * This is the fourth (and last) \"create\" lifecycle hook (after `binding`, `bound` and `attaching`) of the hooks that can occur\n   * multiple times per instance, and the sixth lifecycle hook (after `render`, `created`, `binding`, `bound` and `attaching`)\n   * of the very first lifecycle\n   *\n   * This instance and its children (if any) can be assumed\n   * to be fully initialized, bound, rendered, added to the DOM and ready for use.\n   */\n  attached?(flags: LifecycleFlags): void;\n\n  /**\n   * Called at the start of `$detach`, before this instance and its children (if any) are detached.\n   *\n   * @description\n   * This is the first \"cleanup\" lifecycle hook.\n   *\n   * This is the time to add any (sync or async) tasks (e.g. animations) to the lifecycle that need to happen before\n   * the nodes are removed from the DOM.\n   */\n  detaching?(flags: LifecycleFlags): void;\n\n  /**\n   * Called at the end of `$detach`, after this instance and its children (if any) are detached.\n   *\n   * @description\n   * This is the third \"cleanup\" lifecycle hook (after `detaching` and `caching`).\n   *\n   * The `$nodes` are now removed from the DOM and the `View` (if possible) is returned to cache.\n   *\n   * If no `$unbind` lifecycle is queued, this is the last opportunity to make state changes before the lifecycle ends.\n   */\n  detached?(flags: LifecycleFlags): void;\n\n  /**\n   * Called during `$unmount` (which happens during `$detach`), specifically after the\n   * `$nodes` are removed from the DOM, but before the view is actually added to the cache.\n   *\n   * @description\n   * This is the second \"cleanup\" lifecycle hook.\n   *\n   * This lifecycle is invoked if and only if the `ViewFactory` that created the `View` allows the view to be cached.\n   *\n   * Usually this hook is not invoked unless you explicitly set the cache size to to something greater than zero\n   * on the resource description.\n   */\n  caching?(flags: LifecycleFlags): void;\n}\n\nexport interface IComponent extends IPatchable {\n  readonly $nextComponent: IComponent | null;\n  readonly $prevComponent: IComponent | null;\n  $nextUnbindAfterDetach: IComponent | null;\n  /** @internal */$nextPatch?: IComponent;\n  /** @internal */readonly $observers?: ObserversLookup<IOverrideContext>;\n  $bind(flags: LifecycleFlags, scope?: IScope): void;\n  $unbind(flags: LifecycleFlags): void;\n  $attach(flags: LifecycleFlags): void;\n  $detach(flags: LifecycleFlags): void;\n  $cache(flags: LifecycleFlags): void;\n}\n\nexport interface IMountableComponent extends IComponent {\n  /** @internal */$nextMount?: IMountableComponent;\n  /** @internal */$nextUnmount?: IMountableComponent;\n\n  /**\n   * Add the `$nodes` of this instance to the Host or RenderLocation that this instance is holding.\n   */\n  $mount(flags: LifecycleFlags): void;\n\n  /**\n   * Remove the `$nodes` of this instance from the Host or RenderLocation that this instance is holding, optionally returning them to a cache.\n   * @returns\n   * - `true` if the instance has been returned to the cache.\n   * - `false` if the cache (typically ViewFactory) did not allow the instance to be cached.\n   * - `undefined` (void) if the instance does not support caching. Functionally equivalent to `false`\n   */\n  $unmount(flags: LifecycleFlags): boolean | void;\n}\n\nconst marker = Object.freeze(Object.create(null));\n\n/*\n * Note: the lifecycle object ensures that certain callbacks are executed in a particular order that may\n * deviate from the order in which the component tree is walked.\n * The component tree is always walked in a top-down recursive fashion, for example:\n * {\n *   path: \"1\",\n *   children: [\n *     { path: \"1.1\", children: [\n *       { path: \"1.1.1\" },\n *       { path: \"1.1.2\" }\n *     ]},\n *     { path: \"1.2\", children: [\n *       { path: \"1.2.1\" },\n *       { path: \"1.2.2\" }\n *     ]}\n *   ]\n * }\n * The call chain would be: 1 -> 1.1 -> 1.1.1 -> 1.1.2 -> 1.2 -> 1.2.1 -> 1.2.2\n *\n * During mounting, for example, we want to mount the root component *last* (so that the DOM doesn't need to be updated\n * for each mount operation), and we want to invoke the detached callbacks in the same order that the components were mounted.\n * But all mounts need to happen before any of the detach callbacks are invoked, so we store the components in a LinkedList\n * whose execution is deferred until all the normal $attach/$detach calls have occurred.\n * In the example of attach, the call chains would look like this:\n * $attach: 1 -> 1.1 -> 1.1.1 -> 1.1.2 -> 1.2 -> 1.2.1 -> 1.2.2\n * $mount: 1.1.1 -> 1.1.2 -> 1.1 -> 1.2.1 -> 1.2.2 -> 1.2 -> 1\n * attached: 1.1.1 -> 1.1.2 -> 1.1 -> 1.2.1 -> 1.2.2 -> 1.2 -> 1\n *\n * Instead of (without the lifecycles):\n * $attach: 1, $mount: 1, detached: 1 -> $attach: 1.1, $mount: 1.1, detached: 1.1 -> etc..\n *\n * Furthermore, the lifecycle object tracks the call depth so that it will automatically run a list of operations\n * when the top-most component finishes execution, and components themselves don't need to worry about where in the\n * tree they reside.\n */\n\nexport interface ILifecycle {\n  processFlushQueue(flags: LifecycleFlags): void;\n\n  /**\n   * Queue a flush() callback to be executed either on the next promise tick or on the next\n   * bind lifecycle (if during startTask) or on the next attach lifecycle.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   *\n   * This queue is primarily used by DOM target observers and collection observers.\n   */\n  enqueueFlush(requestor: IChangeTracker): Promise<void>;\n\n  processBindQueue(flags: LifecycleFlags): void;\n  processUnbindQueue(flags: LifecycleFlags): void;\n\n  /**\n   * Open up / expand a bind batch for enqueueing `bound` callbacks.\n   *\n   * When the top-most caller calls `endBind`, the `bound` callbacks will be invoked.\n   *\n   * Each `beginBind` *must* be matched by an `endBind`.\n   */\n  beginBind(): void;\n\n  /**\n   * Add a `bound` callback to the queue, to be invoked when the current bind batch\n   * is ended via `endBind` by the top-most caller.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueBound(requestor: ILifecycleHooks): void;\n\n  /**\n   * Close / shrink a bind batch for invoking queued `bound` callbacks.\n   * @param flags The flags that will be passed into the `bound` callbacks.\n   *\n   * Flags during bind are primarily for optimization purposes, and to control whether\n   * changes are batched or propagated synchronously.\n   * If unsure which flags to provide, it's OK to use `LifecycleFlags.none` (or simply `0`)\n   * This default will work, but is generally less efficient.\n   */\n  endBind(flags: LifecycleFlags): ILifecycleTask;\n\n  /**\n   * Open up / expand an unbind batch for enqueueing `unbound` callbacks.\n   *\n   * When the top-most caller calls `endUnbind`, the `unbound` callbacks will be invoked.\n   *\n   * Each `beginUnbind` *must* be matched by an `endUnbind`.\n   */\n  beginUnbind(): void;\n\n  /**\n   * Add an `unbound` callback to the queue, to be invoked when the current unbind batch\n   * is ended via `endUnbind` by the top-most caller.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueUnbound(requestor: ILifecycleHooks): void;\n\n  /**\n   * Close / shrink an unbind batch for invoking queued `unbound` callbacks.\n   * @param flags The flags that will be passed into the `unbound` callbacks.\n   *\n   * Flags during unbind are primarily for optimization purposes, and to control whether\n   * changes are batched or propagated synchronously.\n   * If unsure which flags to provide, it's OK to use `LifecycleFlags.none` (or simply `0`)\n   * This default will work, but is generally less efficient.\n   */\n  endUnbind(flags: LifecycleFlags): ILifecycleTask;\n\n  processAttachQueue(flags: LifecycleFlags): void;\n  processDetachQueue(flags: LifecycleFlags): void;\n\n  /**\n   * Open up / expand an attach batch for enqueueing `$mount` and `attached` callbacks.\n   *\n   * When the top-most caller calls `endAttach`, the `$mount` and `attached` callbacks\n   * will be invoked (in that order).\n   *\n   * Each `beginAttach` *must* be matched by an `endAttach`.\n   */\n  beginAttach(): void;\n\n  /**\n   * Add a `$mount` callback to the queue, to be invoked when the current attach batch\n   * is ended via `endAttach` by the top-most caller.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueMount(requestor: IMountableComponent): void;\n\n  /**\n   * Add an `attached` callback to the queue, to be invoked when the current attach batch\n   * is ended via `endAttach` by the top-most caller.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueAttached(requestor: ILifecycleHooks): void;\n\n  /**\n   * Close / shrink an attach batch for invoking queued `$mount` and `attached` callbacks.\n   * @param flags The flags that will be passed into the `$mount` and `attached` callbacks.\n   *\n   * Flags during attach are primarily for optimization purposes.\n   * If unsure which flags to provide, it's OK to use `LifecycleFlags.none` (or simply `0`)\n   * This default will work, but is generally less efficient.\n   */\n  endAttach(flags: LifecycleFlags): ILifecycleTask;\n\n  /**\n   * Open up / expand a detach batch for enqueueing `$unmount` and `detached` callbacks.\n   *\n   * When the top-most caller calls `endAttach`, the `$unmount` and `detached` callbacks\n   * will be invoked (in that order).\n   *\n   * Each `beginAttach` *must* be matched by an `endAttach`.\n   */\n  beginDetach(): void;\n\n  /**\n   * Add a `$unmount` callback to the queue, to be invoked when the current detach batch\n   * is ended via `endAttach` by the top-most caller.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueUnmount(requestor: IMountableComponent): void;\n\n  /**\n   * Add a `detached` callback to the queue, to be invoked when the current detach batch\n   * is ended via `endAttach` by the top-most caller.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueDetached(requestor: ILifecycleHooks): void;\n\n  /**\n   * Add an `$unbind` callback to the queue, to be invoked when the current detach batch\n   * is ended via `endAttach` by the top-most caller. The callback is invoked after all the\n   * `$unmount` and `detached` callbacks are processed.\n   *\n   * This method is idempotent; adding the same item more than once has the same effect as\n   * adding it once.\n   */\n  enqueueUnbindAfterDetach(requestor: IComponent): void;\n\n  /**\n   * Close / shrink a detach batch for invoking queued `$unmount` and `detached` callbacks.\n   * @param flags The flags that will be passed into the `$unmount` and `detached` callbacks.\n   *\n   * Flags during detach are primarily for optimization purposes, and to control whether a\n   * component should be unmounted or not (the default is to only unmount root nodes).\n   * If unsure which flags to provide, it's OK to use `LifecycleFlags.none` (or simply `0`).\n   * This default will work, but is generally less efficient.\n   */\n  endDetach(flags: LifecycleFlags): ILifecycleTask;\n\n  registerTask(task: ILifecycleTask): void;\n  finishTask(task: ILifecycleTask): void;\n}\n\nexport const ILifecycle = DI.createInterface<ILifecycle>('ILifecycle').withDefault(x => x.singleton(Lifecycle));\n\n/** @internal */\nexport class Lifecycle implements ILifecycle {\n  /** @internal */public bindDepth: number;\n  /** @internal */public patchDepth: number;\n  /** @internal */public attachDepth: number;\n  /** @internal */public detachDepth: number;\n  /** @internal */public unbindDepth: number;\n\n  /** @internal */public flushHead: IChangeTracker;\n  /** @internal */public flushTail: IChangeTracker;\n\n  /** @internal */public boundHead: ILifecycleHooks;\n  /** @internal */public boundTail: ILifecycleHooks;\n\n  /** @internal */public mountHead: IMountableComponent;\n  /** @internal */public mountTail: IMountableComponent;\n\n  /** @internal */public attachedHead: ILifecycleHooks;\n  /** @internal */public attachedTail: ILifecycleHooks;\n\n  /** @internal */public unmountHead: IMountableComponent;\n  /** @internal */public unmountTail: IMountableComponent;\n\n  /** @internal */public detachedHead: ILifecycleHooks;\n  /** @internal */public detachedTail: ILifecycleHooks;\n\n  /** @internal */public unbindAfterDetachHead: IComponent;\n  /** @internal */public unbindAfterDetachTail: IComponent;\n\n  /** @internal */public unboundHead: ILifecycleHooks;\n  /** @internal */public unboundTail: ILifecycleHooks;\n\n  /** @internal */public flushed: Promise<void>;\n  /** @internal */public promise: Promise<void>;\n\n  /** @internal */public flushCount: number;\n  /** @internal */public patchCount: number;\n  /** @internal */public boundCount: number;\n  /** @internal */public mountCount: number;\n  /** @internal */public attachedCount: number;\n  /** @internal */public unmountCount: number;\n  /** @internal */public detachedCount: number;\n  /** @internal */public unbindAfterDetachCount: number;\n  /** @internal */public unboundCount: number;\n\n  // These are dummy properties to make the lifecycle conform to the interfaces\n  // of the components it manages. This allows the lifecycle itself to be the first link\n  // in the chain and removes the need for an additional null check on each addition.\n  /** @internal */public $nextFlush: IChangeTracker;\n  /** @internal */public flush: IChangeTracker['flush'];\n  /** @internal */public $nextBound: ILifecycleHooks;\n  /** @internal */public bound: ILifecycleHooks['bound'];\n  /** @internal */public $nextMount: IMountableComponent;\n  /** @internal */public $mount: IMountableComponent['$mount'];\n  /** @internal */public $nextAttached: ILifecycleHooks;\n  /** @internal */public attached: ILifecycleHooks['attached'];\n  /** @internal */public $nextUnmount: IMountableComponent;\n  /** @internal */public $unmount: IMountableComponent['$unmount'];\n  /** @internal */public $nextDetached: ILifecycleHooks;\n  /** @internal */public detached: ILifecycleHooks['detached'];\n  /** @internal */public $nextUnbindAfterDetach: IComponent;\n  /** @internal */public $unbind: IComponent['$unbind'];\n  /** @internal */public $nextUnbound: ILifecycleHooks;\n  /** @internal */public unbound: ILifecycleHooks['unbound'];\n\n  /** @internal */public task: AggregateLifecycleTask | null;\n\n  constructor() {\n    this.bindDepth = 0;\n    this.patchDepth = 0;\n    this.attachDepth = 0;\n    this.detachDepth = 0;\n    this.unbindDepth = 0;\n\n    this.flushHead = this;\n    this.flushTail = this;\n\n    this.boundHead = this;\n    this.boundTail = this;\n\n    this.mountHead = this as unknown as IMountableComponent;\n    this.mountTail = this as unknown as IMountableComponent;\n\n    this.attachedHead = this;\n    this.attachedTail = this;\n\n    this.unmountHead = this as unknown as IMountableComponent;\n    this.unmountTail = this as unknown as IMountableComponent;\n\n    this.detachedHead = this; //LOL\n    this.detachedTail = this;\n\n    this.unbindAfterDetachHead = this as unknown as IComponent;\n    this.unbindAfterDetachTail = this as unknown as IComponent;\n\n    this.unboundHead = this;\n    this.unboundTail = this;\n\n    this.flushed = null;\n    this.promise = Promise.resolve();\n\n    this.flushCount = 0;\n    this.patchCount = 0;\n    this.boundCount = 0;\n    this.mountCount = 0;\n    this.attachedCount = 0;\n    this.unmountCount = 0;\n    this.detachedCount = 0;\n    this.unbindAfterDetachCount = 0;\n    this.unboundCount = 0;\n\n    this.$nextFlush = marker;\n    this.flush = PLATFORM.noop;\n    this.$nextBound = marker;\n    this.bound = PLATFORM.noop;\n    this.$nextMount = marker;\n    this.$mount = PLATFORM.noop;\n    this.$nextAttached = marker;\n    this.attached = PLATFORM.noop;\n    this.$nextUnmount = marker;\n    this.$unmount = PLATFORM.noop;\n    this.$nextDetached = marker;\n    this.detached = PLATFORM.noop;\n    this.$nextUnbindAfterDetach = marker;\n    this.$unbind = PLATFORM.noop;\n    this.$nextUnbound = marker;\n    this.unbound = PLATFORM.noop;\n\n    this.task = null;\n  }\n\n  public static register(container: IContainer): IResolver<ILifecycle> {\n    return Registration.singleton(ILifecycle, this).register(container);\n  }\n\n  public registerTask(task: ILifecycleTask): void {\n    if (this.task === null) {\n      this.task = new AggregateLifecycleTask();\n    }\n    this.task.addTask(task);\n  }\n\n  public finishTask(task: ILifecycleTask): void {\n    if (this.task !== null) {\n      if (this.task === task) {\n        this.task = null;\n      } else {\n        this.task.removeTask(task);\n      }\n    }\n  }\n\n  public enqueueFlush(requestor: IChangeTracker): Promise<void> {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'enqueueFlush', slice.call(arguments)); }\n    // Queue a flush() callback; the depth is just for debugging / testing purposes and has\n    // no effect on execution. flush() will automatically be invoked when the promise resolves,\n    // or it can be manually invoked synchronously.\n    if (this.flushHead === this) {\n      this.flushed = this.promise.then(() => { this.processFlushQueue(LifecycleFlags.fromAsyncFlush); });\n    }\n    if (requestor.$nextFlush === null) {\n      requestor.$nextFlush = marker;\n      this.flushTail.$nextFlush = requestor;\n      this.flushTail = requestor;\n      ++this.flushCount;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n    return this.flushed;\n  }\n\n  public processFlushQueue(flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'processFlushQueue', slice.call(arguments)); }\n    flags |= LifecycleFlags.fromSyncFlush;\n    // flush callbacks may lead to additional flush operations, so keep looping until\n    // the flush head is back to `this` (though this will typically happen in the first iteration)\n    while (this.flushCount > 0) {\n      let current = this.flushHead.$nextFlush;\n      this.flushHead = this.flushTail = this;\n      this.flushCount = 0;\n      let next: typeof current;\n      do {\n        next = current.$nextFlush;\n        current.$nextFlush = null;\n        current.flush(flags);\n        current = next;\n      } while (current !== marker);\n      // doNotUpdateDOM will cause DOM updates to be re-queued which results in an infinite loop\n      // unless we break here\n      // Note that breaking on this flag is still not the ideal solution; future improvement would\n      // be something like a separate DOM queue and a non-DOM queue, but for now this fixes the infinite\n      // loop without breaking anything (apart from the edgiest of edge cases which are not yet tested)\n      if (flags & LifecycleFlags.doNotUpdateDOM) {\n        break;\n      }\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public beginBind(): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'beginBind', slice.call(arguments)); }\n    ++this.bindDepth;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public enqueueBound(requestor: ILifecycleHooks): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'enqueueBound', slice.call(arguments)); }\n    // build a standard singly linked list for bound callbacks\n    if (requestor.$nextBound === null) {\n      requestor.$nextBound = marker;\n      this.boundTail.$nextBound = requestor;\n      this.boundTail = requestor;\n      ++this.boundCount;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public endBind(flags: LifecycleFlags): ILifecycleTask {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'endBind', slice.call(arguments)); }\n    // close / shrink a bind batch\n    if (--this.bindDepth === 0) {\n      if (this.task !== null && !this.task.done) {\n        this.task.owner = this;\n        if (Tracer.enabled) { Tracer.leave(); }\n        return this.task;\n      }\n\n      this.processBindQueue(flags);\n\n      if (Tracer.enabled) { Tracer.leave(); }\n      return LifecycleTask.done;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public processBindQueue(flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'processBindQueue', slice.call(arguments)); }\n    // flush before processing bound callbacks, but only if this is the initial bind;\n    // no DOM is attached yet so we can safely let everything propagate\n    if (flags & LifecycleFlags.fromStartTask) {\n      this.processFlushQueue(flags | LifecycleFlags.fromSyncFlush);\n    }\n    // bound callbacks may lead to additional bind operations, so keep looping until\n    // the bound head is back to `this` (though this will typically happen in the first iteration)\n    while (this.boundCount > 0) {\n      this.boundCount = 0;\n      let current = this.boundHead.$nextBound;\n      let next: ILifecycleHooks;\n      this.boundHead = this.boundTail = this;\n      do {\n        current.bound(flags);\n        next = current.$nextBound;\n        current.$nextBound = null;\n        current = next;\n      } while (current !== marker);\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public beginUnbind(): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'beginUnbind', slice.call(arguments)); }\n    // open up / expand an unbind batch; the very first caller will close it again with endUnbind\n    ++this.unbindDepth;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public enqueueUnbound(requestor: ILifecycleHooks): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'enqueueUnbound', slice.call(arguments)); }\n    // This method is idempotent; adding the same item more than once has the same effect as\n    // adding it once.\n    // build a standard singly linked list for unbound callbacks\n    if (requestor.$nextUnbound === null) {\n      requestor.$nextUnbound = marker;\n      this.unboundTail.$nextUnbound = requestor;\n      this.unboundTail = requestor;\n      ++this.unboundCount;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public endUnbind(flags: LifecycleFlags): ILifecycleTask {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'endUnbind', slice.call(arguments)); }\n    // close / shrink an unbind batch\n    if (--this.unbindDepth === 0) {\n      if (this.task !== null && !this.task.done) {\n        this.task.owner = this;\n        if (Tracer.enabled) { Tracer.leave(); }\n        return this.task;\n      }\n\n      this.processUnbindQueue(flags);\n\n      if (Tracer.enabled) { Tracer.leave(); }\n      return LifecycleTask.done;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public processUnbindQueue(flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'processUnbindQueue', slice.call(arguments)); }\n    // unbound callbacks may lead to additional unbind operations, so keep looping until\n    // the unbound head is back to `this` (though this will typically happen in the first iteration)\n    while (this.unboundCount > 0) {\n      this.unboundCount = 0;\n      let current = this.unboundHead.$nextUnbound;\n      let next: ILifecycleHooks;\n      this.unboundHead = this.unboundTail = this;\n      do {\n        current.unbound(flags);\n        next = current.$nextUnbound;\n        current.$nextUnbound = null;\n        current = next;\n      } while (current !== marker);\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public beginAttach(): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'beginAttach', slice.call(arguments)); }\n    // open up / expand an attach batch; the very first caller will close it again with endAttach\n    ++this.attachDepth;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public enqueueMount(requestor: IMountableComponent): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'enqueueMount', slice.call(arguments)); }\n    // This method is idempotent; adding the same item more than once has the same effect as\n    // adding it once.\n    // build a standard singly linked list for mount callbacks\n    if (requestor.$nextMount === null) {\n      requestor.$nextMount = marker;\n      this.mountTail.$nextMount = requestor;\n      this.mountTail = requestor;\n      ++this.mountCount;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public enqueueAttached(requestor: ILifecycleHooks): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'enqueueAttached', slice.call(arguments)); }\n    // This method is idempotent; adding the same item more than once has the same effect as\n    // adding it once.\n    // build a standard singly linked list for attached callbacks\n    if (requestor.$nextAttached === null) {\n      requestor.$nextAttached = marker;\n      this.attachedTail.$nextAttached = requestor;\n      this.attachedTail = requestor;\n      ++this.attachedCount;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public endAttach(flags: LifecycleFlags): ILifecycleTask {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'endAttach', slice.call(arguments)); }\n    // close / shrink an attach batch\n    if (--this.attachDepth === 0) {\n      if (this.task !== null && !this.task.done) {\n        this.task.owner = this;\n        if (Tracer.enabled) { Tracer.leave(); }\n        return this.task;\n      }\n\n      this.processAttachQueue(flags);\n\n      if (Tracer.enabled) { Tracer.leave(); }\n      return LifecycleTask.done;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public processAttachQueue(flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'processAttachQueue', slice.call(arguments)); }\n    // flush and patch before starting the attach lifecycle to ensure batched collection changes are propagated to repeaters\n    // and the DOM is updated\n    this.processFlushQueue(flags | LifecycleFlags.fromSyncFlush);\n    // TODO: prevent duplicate updates coming from the patch queue (or perhaps it's just not needed in its entirety?)\n    //this.processPatchQueue(flags | LifecycleFlags.fromSyncFlush);\n\n    if (this.mountCount > 0) {\n      this.mountCount = 0;\n      let currentMount = this.mountHead.$nextMount;\n      this.mountHead = this.mountTail = this as unknown as IMountableComponent;\n      let nextMount: typeof currentMount;\n\n      do {\n        currentMount.$mount(flags);\n        nextMount = currentMount.$nextMount;\n        currentMount.$nextMount = null;\n        currentMount = nextMount;\n      } while (currentMount !== marker);\n    }\n\n    if (this.attachedCount > 0) {\n      this.attachedCount = 0;\n      let currentAttached = this.attachedHead.$nextAttached;\n      this.attachedHead = this.attachedTail = this;\n      let nextAttached: typeof currentAttached;\n\n      do {\n        currentAttached.attached(flags);\n        nextAttached = currentAttached.$nextAttached;\n        currentAttached.$nextAttached = null;\n        currentAttached = nextAttached;\n      } while (currentAttached !== marker);\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public beginDetach(): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'beginDetach', slice.call(arguments)); }\n    // open up / expand a detach batch; the very first caller will close it again with endDetach\n    ++this.detachDepth;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public enqueueUnmount(requestor: IMountableComponent): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'enqueueUnmount', slice.call(arguments)); }\n    // This method is idempotent; adding the same item more than once has the same effect as\n    // adding it once.\n    // build a standard singly linked list for unmount callbacks\n    if (requestor.$nextUnmount === null) {\n      requestor.$nextUnmount = marker;\n      this.unmountTail.$nextUnmount = requestor;\n      this.unmountTail = requestor;\n      ++this.unmountCount;\n    }\n    // this is a temporary solution until a cleaner method surfaces.\n    // if an item being queued for unmounting is already in the mount queue,\n    // remove it from the mount queue (this can occur in some very exotic situations\n    // and should be dealt with in a less hacky way)\n    if (requestor.$nextMount !== null) {\n      let current = this.mountHead;\n      let next = current.$nextMount;\n      while (next !== requestor) {\n        current = next;\n        next = current.$nextMount;\n      }\n      current.$nextMount = next.$nextMount;\n      next.$nextMount = null;\n      if (this.mountTail === next) {\n        this.mountTail = this as unknown as IMountableComponent;\n      }\n      --this.mountCount;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public enqueueDetached(requestor: ILifecycleHooks): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'enqueueDetached', slice.call(arguments)); }\n    // This method is idempotent; adding the same item more than once has the same effect as\n    // adding it once.\n    // build a standard singly linked list for detached callbacks\n    if (requestor.$nextDetached === null) {\n      requestor.$nextDetached = marker;\n      this.detachedTail.$nextDetached = requestor;\n      this.detachedTail = requestor;\n      ++this.detachedCount;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public enqueueUnbindAfterDetach(requestor: IComponent): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'enqueueUnbindAfterDetach', slice.call(arguments)); }\n    // This method is idempotent; adding the same item more than once has the same effect as\n    // adding it once.\n    // build a standard singly linked list for unbindAfterDetach callbacks\n    if (requestor.$nextUnbindAfterDetach === null) {\n      requestor.$nextUnbindAfterDetach = marker;\n      this.unbindAfterDetachTail.$nextUnbindAfterDetach = requestor;\n      this.unbindAfterDetachTail = requestor;\n      ++this.unbindAfterDetachCount;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public endDetach(flags: LifecycleFlags): ILifecycleTask {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'endDetach', slice.call(arguments)); }\n    // close / shrink a detach batch\n    if (--this.detachDepth === 0) {\n      if (this.task !== null && !this.task.done) {\n        this.task.owner = this;\n        return this.task;\n      }\n\n      this.processDetachQueue(flags);\n\n      if (Tracer.enabled) { Tracer.leave(); }\n      return LifecycleTask.done;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public processDetachQueue(flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Lifecycle', 'processDetachQueue', slice.call(arguments)); }\n    // flush before unmounting to ensure batched collection changes propagate to the repeaters,\n    // which may lead to additional unmount operations\n    this.processFlushQueue(flags | LifecycleFlags.fromFlush | LifecycleFlags.doNotUpdateDOM);\n\n    if (this.unmountCount > 0) {\n      this.unmountCount = 0;\n      let currentUnmount = this.unmountHead.$nextUnmount;\n      this.unmountHead = this.unmountTail = this as unknown as IMountableComponent;\n      let nextUnmount: typeof currentUnmount;\n\n      do {\n        currentUnmount.$unmount(flags);\n        nextUnmount = currentUnmount.$nextUnmount;\n        currentUnmount.$nextUnmount = null;\n        currentUnmount = nextUnmount;\n      } while (currentUnmount !== marker);\n    }\n\n    if (this.detachedCount > 0) {\n      this.detachedCount = 0;\n      let currentDetached = this.detachedHead.$nextDetached;\n      this.detachedHead = this.detachedTail = this;\n      let nextDetached: typeof currentDetached;\n\n      do {\n        currentDetached.detached(flags);\n        nextDetached = currentDetached.$nextDetached;\n        currentDetached.$nextDetached = null;\n        currentDetached = nextDetached;\n      } while (currentDetached !== marker);\n    }\n\n    if (this.unbindAfterDetachCount > 0) {\n      this.beginUnbind();\n      this.unbindAfterDetachCount = 0;\n      let currentUnbind = this.unbindAfterDetachHead.$nextUnbindAfterDetach;\n      this.unbindAfterDetachHead = this.unbindAfterDetachTail = this as unknown as IComponent;\n      let nextUnbind: typeof currentUnbind;\n\n      do {\n        currentUnbind.$unbind(flags);\n        nextUnbind = currentUnbind.$nextUnbindAfterDetach;\n        currentUnbind.$nextUnbindAfterDetach = null;\n        currentUnbind = nextUnbind;\n      } while (currentUnbind !== marker);\n      this.endUnbind(flags);\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\nexport class CompositionCoordinator {\n  public static readonly inject: InjectArray = [ILifecycle];\n\n  public readonly $lifecycle: ILifecycle;\n\n  public onSwapComplete: () => void;\n\n  private currentView: IView;\n  private isAttached: boolean;\n  private isBound: boolean;\n  private queue: (IView | PromiseSwap)[] | null;\n  private scope: IScope;\n  private swapTask: ILifecycleTask;\n\n  constructor($lifecycle: ILifecycle) {\n    this.$lifecycle = $lifecycle;\n\n    this.onSwapComplete = PLATFORM.noop;\n\n    this.currentView = null;\n    this.isAttached = false;\n    this.isBound = false;\n    this.queue = null;\n    this.swapTask = LifecycleTask.done;\n  }\n\n  public static register(container: IContainer): IResolver<CompositionCoordinator> {\n    return Registration.transient(this, this).register(container, this);\n  }\n\n  public compose(value: IView | Promise<IView>, flags: LifecycleFlags): void {\n    if (this.swapTask.done) {\n      if (value instanceof Promise) {\n        this.enqueue(new PromiseSwap(this, value));\n        this.processNext();\n      } else {\n        this.swap(value, flags);\n      }\n    } else {\n      if (value instanceof Promise) {\n        this.enqueue(new PromiseSwap(this, value));\n      } else {\n        this.enqueue(value);\n      }\n\n      if (this.swapTask.canCancel()) {\n        this.swapTask.cancel();\n      }\n    }\n  }\n\n  public binding(flags: LifecycleFlags, scope: IScope): void {\n    this.scope = scope;\n    this.isBound = true;\n\n    if (this.currentView !== null) {\n      this.currentView.$bind(flags, scope);\n    }\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    this.isAttached = true;\n\n    if (this.currentView !== null) {\n      this.currentView.$attach(flags);\n    }\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    this.isAttached = false;\n\n    if (this.currentView !== null) {\n      this.currentView.$detach(flags);\n    }\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    this.isBound = false;\n\n    if (this.currentView !== null) {\n      this.currentView.$unbind(flags);\n    }\n  }\n\n  public caching(flags: LifecycleFlags): void {\n    this.currentView = null;\n  }\n\n  private enqueue(view: IView | PromiseSwap): void {\n    if (Tracer.enabled) { Tracer.enter('CompositionCoordinator', 'enqueue', slice.call(arguments)); }\n    if (this.queue === null) {\n      this.queue = [];\n    }\n\n    this.queue.push(view);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  private swap(view: IView, flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('CompositionCoordinator', 'swap', slice.call(arguments)); }\n    if (this.currentView === view) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n\n    const $lifecycle = this.$lifecycle;\n    const swapTask = new AggregateLifecycleTask();\n\n    let lifecycleTask: ILifecycleTask;\n    let currentView = this.currentView;\n    if (currentView === null) {\n      lifecycleTask = LifecycleTask.done;\n    } else {\n      $lifecycle.enqueueUnbindAfterDetach(currentView);\n      $lifecycle.beginDetach();\n      currentView.$detach(flags);\n      lifecycleTask = $lifecycle.endDetach(flags);\n    }\n    swapTask.addTask(lifecycleTask);\n\n    currentView = this.currentView = view;\n\n    if (currentView === null) {\n      lifecycleTask = LifecycleTask.done;\n    } else {\n      if (this.isBound) {\n        $lifecycle.beginBind();\n        currentView.$bind(flags, this.scope);\n        $lifecycle.endBind(flags);\n      }\n      if (this.isAttached) {\n        $lifecycle.beginAttach();\n        currentView.$attach(flags);\n        lifecycleTask = $lifecycle.endAttach(flags);\n      } else {\n        lifecycleTask = LifecycleTask.done;\n      }\n    }\n    swapTask.addTask(lifecycleTask);\n\n    if (swapTask.done) {\n      this.swapTask = LifecycleTask.done;\n      this.onSwapComplete();\n    } else {\n      this.swapTask = swapTask;\n      this.swapTask.wait().then(() => {\n        this.onSwapComplete();\n        this.processNext();\n      }).catch(error => { throw error; });\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  private processNext(): void {\n    if (Tracer.enabled) { Tracer.enter('CompositionCoordinator', 'processNext', slice.call(arguments)); }\n    if (this.queue !== null && this.queue.length > 0) {\n      const next = this.queue.pop();\n      this.queue.length = 0;\n\n      if (PromiseSwap.is(next)) {\n        this.swapTask = next.start();\n      } else {\n        this.swap(next, LifecycleFlags.fromLifecycleTask);\n      }\n    } else {\n      this.swapTask = LifecycleTask.done;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\nexport const LifecycleTask = {\n  done: {\n    done: true,\n    canCancel(): boolean { return false; },\n    cancel(): void { return; },\n    wait(): Promise<unknown> { return Promise.resolve(); }\n  }\n};\n\nexport interface ILifecycleTask<T = unknown> {\n  readonly done: boolean;\n  canCancel(): boolean;\n  cancel(): void;\n  wait(): Promise<T>;\n}\n\nexport class AggregateLifecycleTask implements ILifecycleTask<void> {\n  public done: boolean;\n\n  /** @internal */\n  public owner: Lifecycle;\n\n  private readonly tasks: ILifecycleTask[];\n  private resolve: () => void;\n  private waiter: Promise<void>;\n\n  constructor() {\n    this.done = true;\n\n    this.owner = null;\n\n    this.resolve = null;\n    this.tasks = [];\n    this.waiter = null;\n  }\n\n  public addTask(task: ILifecycleTask): void {\n    if (Tracer.enabled) { Tracer.enter('AggregateLifecycleTask', 'addTask', slice.call(arguments)); }\n    if (!task.done) {\n      this.done = false;\n      this.tasks.push(task);\n      task.wait().then(() => { this.tryComplete(); }).catch(error => { throw error; });\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public removeTask(task: ILifecycleTask): void {\n    if (Tracer.enabled) { Tracer.enter('AggregateLifecycleTask', 'removeTask', slice.call(arguments)); }\n    if (task.done) {\n      const idx = this.tasks.indexOf(task);\n      if (idx !== -1) {\n        this.tasks.splice(idx, 1);\n      }\n    }\n    if (this.tasks.length === 0 && this.owner !== null) {\n      this.owner.finishTask(this);\n      this.owner = null;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public canCancel(): boolean {\n    if (this.done) {\n      return false;\n    }\n\n    return this.tasks.every(x => x.canCancel());\n  }\n\n  public cancel(): void {\n    if (this.canCancel()) {\n      this.tasks.forEach(x => { x.cancel(); });\n      this.done = false;\n    }\n  }\n\n  public wait(): Promise<void> {\n    if (this.waiter === null) {\n      if (this.done) {\n        this.waiter = Promise.resolve();\n      } else {\n        // tslint:disable-next-line:promise-must-complete\n        this.waiter = new Promise((resolve) => this.resolve = resolve);\n      }\n    }\n\n    return this.waiter;\n  }\n\n  private tryComplete(): void {\n    if (this.done) {\n      return;\n    }\n\n    if (this.tasks.every(x => x.done)) {\n      this.complete(true);\n    }\n  }\n\n  private complete(notCancelled: boolean): void {\n    if (Tracer.enabled) { Tracer.enter('AggregateLifecycleTask', 'complete', slice.call(arguments)); }\n    this.done = true;\n\n    if (notCancelled && this.owner !== null) {\n      this.owner.processDetachQueue(LifecycleFlags.fromLifecycleTask);\n      this.owner.processUnbindQueue(LifecycleFlags.fromLifecycleTask);\n      this.owner.processBindQueue(LifecycleFlags.fromLifecycleTask);\n      this.owner.processAttachQueue(LifecycleFlags.fromLifecycleTask);\n    }\n    this.owner.finishTask(this);\n\n    if (this.resolve !== null) {\n      this.resolve();\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n/** @internal */\nexport class PromiseSwap implements ILifecycleTask<IView> {\n  public done: boolean;\n\n  private readonly coordinator: CompositionCoordinator;\n  private isCancelled: boolean;\n  private promise: Promise<IView>;\n\n  constructor(coordinator: CompositionCoordinator, promise: Promise<IView>) {\n    this.coordinator = coordinator;\n    this.done = false;\n    this.isCancelled = false;\n    this.promise = promise;\n  }\n\n  public static is(object: object): object is PromiseSwap {\n    return 'start' in object;\n  }\n\n  public start(): ILifecycleTask<IView | unknown> {\n    if (this.isCancelled) {\n      return LifecycleTask.done;\n    }\n\n    this.promise = this.promise.then(x => {\n      this.onResolve(x);\n      return x;\n    });\n\n    return this;\n  }\n\n  public canCancel(): boolean {\n    return !this.done;\n  }\n\n  public cancel(): void {\n    if (this.canCancel()) {\n      this.isCancelled = true;\n    }\n  }\n\n  public wait(): Promise<IView> {\n    return this.promise;\n  }\n\n  private onResolve(value: IView): void {\n    if (this.isCancelled) {\n      return;\n    }\n\n    this.done = true;\n    this.coordinator.compose(value, LifecycleFlags.fromLifecycleTask);\n  }\n}\n\n// tslint:disable:jsdoc-format\n/**\n * A general-purpose ILifecycleTask implementation that can be placed\n * before an attached, detached, bound or unbound hook during attaching,\n * detaching, binding or unbinding, respectively.\n *\n * The provided promise will be awaited before the corresponding lifecycle\n * hook (and any hooks following it) is invoked.\n *\n * The provided callback will be invoked after the promise is resolved\n * and before the next lifecycle hook.\n *\n * Example:\n```ts\nexport class MyViewModel {\n  private $lifecycle: ILifecycle; // set before created() hook\n  private answer: number;\n\n  public binding(flags: LifecycleFlags): void {\n    // this.answer === undefined\n    this.$lifecycle.registerTask(new PromiseTask(\n      this.getAnswerAsync,\n      answer => {\n        this.answer = answer;\n      }\n    ));\n  }\n\n  public bound(flags: LifecycleFlags): void {\n    // this.answer === 42\n  }\n\n  private getAnswerAsync(): Promise<number> {\n    return Promise.resolve().then(() => 42);\n  }\n}\n```\n */\n// tslint:enable:jsdoc-format\nexport class PromiseTask<T = void> implements ILifecycleTask<T> {\n  public done: boolean;\n\n  private isCancelled: boolean;\n  private readonly promise: Promise<T>;\n  private readonly callback: (result?: T) => void;\n\n  constructor(promise: Promise<T>, callback: (result?: T) => void) {\n    this.done = false;\n    this.isCancelled = false;\n    this.callback = callback;\n    this.promise = promise.then(value => {\n      if (this.isCancelled === true) {\n        return;\n      }\n      this.done = true;\n      this.callback(value);\n      return value;\n    });\n  }\n\n  public canCancel(): boolean {\n    return !this.done;\n  }\n\n  public cancel(): void {\n    if (this.canCancel()) {\n      this.isCancelled = true;\n    }\n  }\n\n  public wait(): Promise<T> {\n    return this.promise;\n  }\n}\n","import { Class, IIndexable, Tracer } from '@aurelia/kernel';\nimport { IConnectable } from '../ast';\nimport { LifecycleFlags } from '../flags';\nimport { IBinding } from '../lifecycle';\nimport { IBindingTargetObserver, IPatchable, IPropertySubscriber, ISubscribable, MutationKind } from '../observation';\nimport { IObserverLocator } from '../observation/observer-locator';\n\n// TODO: add connect-queue (or something similar) back in when everything else is working, to improve startup time\n\nconst slice = Array.prototype.slice;\n\nconst slotNames: string[] = [];\nconst versionSlotNames: string[] = [];\nlet lastSlot = -1;\nfunction ensureEnoughSlotNames(currentSlot: number): void {\n  if (currentSlot === lastSlot) {\n    lastSlot += 5;\n    const ii = slotNames.length = versionSlotNames.length = lastSlot + 1;\n    for (let i = currentSlot + 1; i < ii; ++i) {\n      slotNames[i] = `_observer${i}`;\n      versionSlotNames[i] = `_observerVersion${i}`;\n    }\n  }\n}\nensureEnoughSlotNames(-1);\n\nexport interface IPartialConnectableBinding extends IBinding, IPropertySubscriber {\n  observerLocator: IObserverLocator;\n}\n\nexport interface IConnectableBinding extends IPartialConnectableBinding, IConnectable, IPatchable {\n  id: string;\n  $nextConnect?: IConnectableBinding;\n  observerSlots: number;\n  version: number;\n  addObserver(observer: ISubscribable<MutationKind.instance | MutationKind.proxy>): void;\n  unobserve(all?: boolean): void;\n}\n\n/** @internal */\nexport function addObserver(this: IConnectableBinding, observer: ISubscribable<MutationKind.instance | MutationKind.proxy>): void {\n  // find the observer.\n  const observerSlots = this.observerSlots === undefined ? 0 : this.observerSlots;\n  let i = observerSlots;\n\n  while (i-- && this[slotNames[i]] !== observer);\n\n  // if we are not already observing, put the observer in an open slot and subscribe.\n  if (i === -1) {\n    i = 0;\n    while (this[slotNames[i]]) {\n      i++;\n    }\n    this[slotNames[i]] = observer;\n    observer.subscribe(this);\n    observer[this.id] |= LifecycleFlags.updateTargetInstance;\n    // increment the slot count.\n    if (i === observerSlots) {\n      this.observerSlots = i + 1;\n    }\n  }\n  // set the \"version\" when the observer was used.\n  if (this.version === undefined) {\n    this.version = 0;\n  }\n  this[versionSlotNames[i]] = this.version;\n  ensureEnoughSlotNames(i);\n}\n\n/** @internal */\nexport function observeProperty(this: IConnectableBinding, flags: LifecycleFlags, obj: IIndexable, propertyName: string): void {\n  if (Tracer.enabled) { Tracer.enter(this['constructor'].name, 'observeProperty', slice.call(arguments)); }\n  const observer = this.observerLocator.getObserver(flags, obj, propertyName) as IBindingTargetObserver;\n  /* Note: we need to cast here because we can indeed get an accessor instead of an observer,\n   *  in which case the call to observer.subscribe will throw. It's not very clean and we can solve this in 2 ways:\n   *  1. Fail earlier: only let the locator resolve observers from .getObserver, and throw if no branches are left (e.g. it would otherwise return an accessor)\n   *  2. Fail silently (without throwing): give all accessors a no-op subscribe method\n   *\n   * We'll probably want to implement some global configuration (like a \"strict\" toggle) so users can pick between enforced correctness vs. ease-of-use\n   */\n  this.addObserver(observer);\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function unobserve(this: IConnectableBinding, all?: boolean): void {\n  const slots = this.observerSlots;\n  let slotName: string;\n  let observer: IBindingTargetObserver;\n  if (all === true) {\n    for (let i = 0; i < slots; ++i) {\n      slotName = slotNames[i];\n      observer = this[slotName];\n      if (observer !== null && observer !== undefined) {\n        this[slotName] = null;\n        observer.unsubscribe(this);\n        observer[this.id] &= ~LifecycleFlags.updateTargetInstance;\n      }\n    }\n  } else {\n    const version = this.version;\n    for (let i = 0; i < slots; ++i) {\n      if (this[versionSlotNames[i]] !== version) {\n        slotName = slotNames[i];\n        observer = this[slotName];\n        if (observer !== null && observer !== undefined) {\n          this[slotName] = null;\n          observer.unsubscribe(this);\n          observer[this.id] &= ~LifecycleFlags.updateTargetInstance;\n        }\n      }\n    }\n  }\n}\n\ntype DecoratableConnectable<TProto, TClass> = Class<TProto & Partial<IConnectableBinding> & IPartialConnectableBinding, TClass>;\ntype DecoratedConnectable<TProto, TClass> = Class<TProto & IConnectableBinding, TClass>;\n\nfunction connectableDecorator<TProto, TClass>(target: DecoratableConnectable<TProto, TClass>): DecoratedConnectable<TProto, TClass> {\n  const proto = target.prototype;\n  if (!proto.hasOwnProperty('observeProperty')) proto.observeProperty = observeProperty;\n  if (!proto.hasOwnProperty('unobserve')) proto.unobserve = unobserve;\n  if (!proto.hasOwnProperty('addObserver')) proto.addObserver = addObserver;\n  return target as DecoratedConnectable<TProto, TClass>;\n}\n\nexport function connectable(): typeof connectableDecorator;\nexport function connectable<TProto, TClass>(target: DecoratableConnectable<TProto, TClass>): DecoratedConnectable<TProto, TClass>;\nexport function connectable<TProto, TClass>(target?: DecoratableConnectable<TProto, TClass>): DecoratedConnectable<TProto, TClass> | typeof connectableDecorator {\n  return target === undefined ? connectableDecorator : connectableDecorator(target);\n}\n\nconst idAttributes: PropertyDescriptor = {\n  configurable: false,\n  enumerable: false,\n  writable: false,\n  value: 0\n};\nconnectable.assignIdTo = (instance: IConnectableBinding): void => {\n  ++idAttributes.value;\n  Reflect.defineProperty(instance, 'id', idAttributes);\n};\n","import { IServiceLocator, Reporter, Tracer } from '@aurelia/kernel';\nimport { IForOfStatement, IsBindingBehavior } from '../ast';\nimport { BindingMode, ExpressionKind, LifecycleFlags, State } from '../flags';\nimport { IBinding, ILifecycle } from '../lifecycle';\nimport { AccessorOrObserver, IBindingTargetObserver, IObservable, IScope } from '../observation';\nimport { IObserverLocator } from '../observation/observer-locator';\nimport { hasBind, hasUnbind } from './ast';\nimport { connectable, IConnectableBinding, IPartialConnectableBinding } from './connectable';\n\nconst slice = Array.prototype.slice;\n\n// BindingMode is not a const enum (and therefore not inlined), so assigning them to a variable to save a member accessor is a minor perf tweak\nconst { oneTime, toView, fromView } = BindingMode;\n\n// pre-combining flags for bitwise checks is a minor perf tweak\nconst toViewOrOneTime = toView | oneTime;\n\nexport interface Binding extends IConnectableBinding {}\n\n@connectable()\nexport class Binding implements IPartialConnectableBinding {\n  public id: string;\n  public $nextBinding: IBinding;\n  public $prevBinding: IBinding;\n  public $state: State;\n  public $lifecycle: ILifecycle;\n  public $nextConnect: IConnectableBinding;\n  public $scope: IScope;\n\n  public locator: IServiceLocator;\n  public mode: BindingMode;\n  public observerLocator: IObserverLocator;\n  public sourceExpression: IsBindingBehavior | IForOfStatement;\n  public target: IObservable;\n  public targetProperty: string;\n\n  public targetObserver: AccessorOrObserver;\n\n  public persistentFlags: LifecycleFlags;\n\n  constructor(sourceExpression: IsBindingBehavior | IForOfStatement, target: IObservable, targetProperty: string, mode: BindingMode, observerLocator: IObserverLocator, locator: IServiceLocator) {\n    connectable.assignIdTo(this);\n    this.$nextBinding = null;\n    this.$prevBinding = null;\n    this.$state = State.none;\n    this.$lifecycle = locator.get(ILifecycle);\n    this.$nextConnect = null;\n    this.$scope = null;\n\n    this.locator = locator;\n    this.mode = mode;\n    this.observerLocator = observerLocator;\n    this.sourceExpression = sourceExpression;\n    this.target = target;\n    this.targetProperty = targetProperty;\n    this.persistentFlags = LifecycleFlags.none;\n  }\n\n  public updateTarget(value: unknown, flags: LifecycleFlags): void {\n    flags |= this.persistentFlags;\n    this.targetObserver.setValue(value, flags);\n    if (flags & LifecycleFlags.patchStrategy) {\n      this.targetObserver.$patch(flags);\n    }\n  }\n\n  public updateSource(value: unknown, flags: LifecycleFlags): void {\n    flags |= this.persistentFlags;\n    this.sourceExpression.assign(flags, this.$scope, this.locator, value);\n  }\n\n  public handleChange(newValue: unknown, _previousValue: unknown, flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Binding', 'handleChange', slice.call(arguments)); }\n    if ((this.$state & State.isBound) === 0) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n\n    flags |= this.persistentFlags;\n\n    if ((flags & LifecycleFlags.updateTargetInstance) > 0) {\n      const previousValue = this.targetObserver.getValue();\n      // if the only observable is an AccessScope then we can assume the passed-in newValue is the correct and latest value\n      if (this.sourceExpression.$kind !== ExpressionKind.AccessScope || this.observerSlots > 1) {\n        newValue = this.sourceExpression.evaluate(flags, this.$scope, this.locator);\n      }\n      if (newValue !== previousValue) {\n        this.updateTarget(newValue, flags);\n      }\n      if ((this.mode & oneTime) === 0) {\n        this.version++;\n        this.sourceExpression.connect(flags, this.$scope, this);\n        this.unobserve(false);\n      }\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n\n    if ((flags & LifecycleFlags.updateSourceExpression) > 0) {\n      if (newValue !== this.sourceExpression.evaluate(flags, this.$scope, this.locator)) {\n        this.updateSource(newValue, flags);\n      }\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n\n    if (Tracer.enabled) { Tracer.leave(); }\n    throw Reporter.error(15, flags);\n  }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (Tracer.enabled) { Tracer.enter('Binding', '$bind', slice.call(arguments)); }\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        if (Tracer.enabled) { Tracer.leave(); }\n        return;\n      }\n      this.$unbind(flags | LifecycleFlags.fromBind);\n    }\n    // add isBinding flag\n    this.$state |= State.isBinding;\n\n    // Store flags which we can only receive during $bind and need to pass on\n    // to the AST during evaluate/connect/assign\n    this.persistentFlags = flags & LifecycleFlags.persistentBindingFlags;\n\n    this.$scope = scope;\n\n    let sourceExpression = this.sourceExpression;\n    if (hasBind(sourceExpression)) {\n      sourceExpression.bind(flags, scope, this);\n    }\n\n    let targetObserver = this.targetObserver as IBindingTargetObserver;\n    if (!targetObserver) {\n      if (this.mode & fromView) {\n        targetObserver = this.targetObserver = this.observerLocator.getObserver(flags, this.target, this.targetProperty) as IBindingTargetObserver;\n      } else {\n        targetObserver = this.targetObserver = this.observerLocator.getAccessor(flags, this.target, this.targetProperty) as IBindingTargetObserver;\n      }\n    }\n    if (targetObserver.bind) {\n      targetObserver.bind(flags);\n    }\n\n    // during bind, binding behavior might have changed sourceExpression\n    sourceExpression = this.sourceExpression;\n    if (this.mode & toViewOrOneTime) {\n      this.updateTarget(sourceExpression.evaluate(flags, scope, this.locator), flags);\n    }\n    if (this.mode & toView) {\n      sourceExpression.connect(flags, scope, this);\n    }\n    if (this.mode & fromView) {\n      targetObserver.subscribe(this);\n      targetObserver[this.id] |= LifecycleFlags.updateSourceExpression;\n    }\n\n    // add isBound flag and remove isBinding flag\n    this.$state |= State.isBound;\n    this.$state &= ~State.isBinding;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Binding', '$unbind', slice.call(arguments)); }\n    if (!(this.$state & State.isBound)) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    // clear persistent flags\n    this.persistentFlags = LifecycleFlags.none;\n\n    if (hasUnbind(this.sourceExpression)) {\n      this.sourceExpression.unbind(flags, this.$scope, this);\n    }\n    this.$scope = null;\n\n    if ((this.targetObserver as IBindingTargetObserver).unbind) {\n      (this.targetObserver as IBindingTargetObserver).unbind(flags);\n    }\n    if ((this.targetObserver as IBindingTargetObserver).unsubscribe) {\n      (this.targetObserver as IBindingTargetObserver).unsubscribe(this);\n      this.targetObserver[this.id] &= ~LifecycleFlags.updateSourceExpression;\n    }\n    this.unobserve(true);\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public $patch(flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Binding', '$patch', slice.call(arguments)); }\n    if (this.$state & State.isBound) {\n      this.targetObserver.$patch(flags | this.persistentFlags);\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n","import { IServiceLocator, Tracer } from '@aurelia/kernel';\nimport { IsBindingBehavior } from '../ast';\nimport { LifecycleFlags, State } from '../flags';\nimport { IBinding } from '../lifecycle';\nimport { IAccessor, IBindingContext, IObservable, IScope } from '../observation';\nimport { IObserverLocator } from '../observation/observer-locator';\nimport { hasBind, hasUnbind } from './ast';\nimport { IConnectableBinding } from './connectable';\n\nconst slice = Array.prototype.slice;\n\nexport interface Call extends IConnectableBinding {}\nexport class Call {\n  public $nextBinding: IBinding;\n  public $prevBinding: IBinding;\n  public $state: State;\n  public $scope: IScope;\n\n  public locator: IServiceLocator;\n  public sourceExpression: IsBindingBehavior;\n  public targetObserver: IAccessor;\n\n  constructor(sourceExpression: IsBindingBehavior, target: IObservable | IBindingContext, targetProperty: string, observerLocator: IObserverLocator, locator: IServiceLocator) {\n    this.$nextBinding = null;\n    this.$prevBinding = null;\n    this.$state = State.none;\n\n    this.locator = locator;\n    this.sourceExpression = sourceExpression;\n    this.targetObserver = observerLocator.getObserver(LifecycleFlags.none, target, targetProperty);\n  }\n\n  public callSource(args: object): unknown {\n    if (Tracer.enabled) { Tracer.enter('Call', 'callSource', slice.call(arguments)); }\n    const overrideContext = this.$scope.overrideContext;\n    Object.assign(overrideContext, args);\n    const result = this.sourceExpression.evaluate(LifecycleFlags.mustEvaluate, this.$scope, this.locator);\n\n    for (const prop in args) {\n      Reflect.deleteProperty(overrideContext, prop);\n    }\n\n    if (Tracer.enabled) { Tracer.leave(); }\n    return result;\n  }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (Tracer.enabled) { Tracer.enter('Call', '$bind', slice.call(arguments)); }\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        if (Tracer.enabled) { Tracer.leave(); }\n        return;\n      }\n\n      this.$unbind(flags | LifecycleFlags.fromBind);\n    }\n    // add isBinding flag\n    this.$state |= State.isBinding;\n\n    this.$scope = scope;\n\n    if (hasBind(this.sourceExpression)) {\n      this.sourceExpression.bind(flags, scope, this);\n    }\n\n    this.targetObserver.setValue($args => this.callSource($args), flags);\n\n    // add isBound flag and remove isBinding flag\n    this.$state |= State.isBound;\n    this.$state &= ~State.isBinding;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Call', '$unbind', slice.call(arguments)); }\n    if (!(this.$state & State.isBound)) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    if (hasUnbind(this.sourceExpression)) {\n      this.sourceExpression.unbind(flags, this.$scope, this);\n    }\n\n    this.$scope = null;\n    this.targetObserver.setValue(null, flags);\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public observeProperty(flags: LifecycleFlags, obj: object, propertyName: string): void {\n    return;\n  }\n\n  public handleChange(newValue: unknown, previousValue: unknown, flags: LifecycleFlags): void {\n    return;\n  }\n}\n","import { DI, PLATFORM, Reporter } from '@aurelia/kernel';\nimport {\n  AnyBindingExpression,\n  IForOfStatement,\n  IInterpolationExpression,\n  IsBindingBehavior\n} from '../ast';\nimport { ExpressionKind } from '../flags';\nimport {\n  AccessMember,\n  AccessScope,\n  CallMember,\n  CallScope,\n  ForOfStatement,\n  Interpolation,\n  PrimitiveLiteral\n} from './ast';\n\nexport interface IExpressionParser {\n  cache(expressions: Record<string, AnyBindingExpression>): void;\n  parse(expression: string, bindingType: BindingType.ForCommand): IForOfStatement;\n  parse(expression: string, bindingType: BindingType.Interpolation): IInterpolationExpression;\n  parse(expression: string, bindingType: Exclude<BindingType, BindingType.ForCommand | BindingType.Interpolation>): IsBindingBehavior;\n  parse(expression: string, bindingType: BindingType): AnyBindingExpression;\n}\n\nexport const IExpressionParser = DI.createInterface<IExpressionParser>('IExpressionParser').withDefault(x => x.singleton(ExpressionParser));\n\n/** @internal */\nexport class ExpressionParser implements IExpressionParser {\n  private readonly expressionLookup: Record<string, IsBindingBehavior>;\n  private readonly forOfLookup: Record<string, IForOfStatement>;\n  private readonly interpolationLookup: Record<string, IInterpolationExpression>;\n\n  constructor() {\n    this.expressionLookup = Object.create(null);\n    this.forOfLookup = Object.create(null);\n    this.interpolationLookup = Object.create(null);\n  }\n\n  public parse(expression: string, bindingType: BindingType.ForCommand): IForOfStatement;\n  public parse(expression: string, bindingType: BindingType.Interpolation): IInterpolationExpression;\n  public parse(expression: string, bindingType: Exclude<BindingType, BindingType.ForCommand | BindingType.Interpolation>): IsBindingBehavior;\n  public parse(expression: string, bindingType: BindingType): AnyBindingExpression {\n    switch (bindingType) {\n      case BindingType.Interpolation: {\n        let found = this.interpolationLookup[expression];\n        if (found === undefined) {\n          found = this.interpolationLookup[expression] = this.parseCore(expression, bindingType);\n        }\n        return found;\n      }\n      case BindingType.ForCommand: {\n        let found = this.forOfLookup[expression];\n        if (found === undefined) {\n          found = this.forOfLookup[expression] = this.parseCore(expression, bindingType);\n        }\n        return found;\n      }\n      default: {\n        // Allow empty strings for normal bindings and those that are empty by default (such as a custom attribute without an equals sign)\n        // But don't cache it, because empty strings are always invalid for any other type of binding\n        if (expression.length === 0 && (bindingType & (BindingType.BindCommand | BindingType.OneTimeCommand | BindingType.ToViewCommand))) {\n          return PrimitiveLiteral.$empty;\n        }\n        let found = this.expressionLookup[expression];\n        if (found === undefined) {\n          found = this.expressionLookup[expression] = this.parseCore(expression, bindingType);\n        }\n        return found;\n      }\n    }\n  }\n\n  public cache(expressions: Record<string, AnyBindingExpression>): void {\n    const { forOfLookup, expressionLookup, interpolationLookup } = this;\n    for (const expression in expressions) {\n      const expr = expressions[expression];\n      switch (expr.$kind) {\n        case ExpressionKind.Interpolation:\n          interpolationLookup[expression] = expr;\n          break;\n        case ExpressionKind.ForOfStatement:\n          forOfLookup[expression] = expr;\n          break;\n        default:\n          expressionLookup[expression] = expr;\n      }\n    }\n  }\n\n  private parseCore(expression: string, bindingType: BindingType.ForCommand): ForOfStatement;\n  private parseCore(expression: string, bindingType: BindingType.Interpolation): Interpolation;\n  private parseCore(expression: string, bindingType: Exclude<BindingType, BindingType.ForCommand | BindingType.Interpolation>): IsBindingBehavior;\n  private parseCore(expression: string, bindingType: BindingType): AnyBindingExpression {\n    try {\n      const parts = expression.split('.');\n      const firstPart = parts[0];\n      let current: AnyBindingExpression;\n\n      if (firstPart.endsWith('()')) {\n        current = new CallScope(firstPart.replace('()', ''), PLATFORM.emptyArray);\n      } else {\n        current = new AccessScope(parts[0]);\n      }\n\n      let index = 1;\n\n      while (index < parts.length) {\n        const currentPart = parts[index];\n\n        if (currentPart.endsWith('()')) {\n          current = new CallMember(current, currentPart.replace('()', ''), PLATFORM.emptyArray);\n        } else {\n          current = new AccessMember(current, parts[index]);\n        }\n\n        index++;\n      }\n\n      return current;\n    } catch (e) {\n      throw Reporter.error(3, e);\n    }\n  }\n}\n\nexport const enum BindingType {\n              None = 0,\n     Interpolation = 0b10000000_0000,\n        IsRef      = 0b01010000_0000,\n        IsIterator = 0b00100000_0000,\n        IsCustom   = 0b00010000_0000,\n        IsFunction = 0b00001000_0000,\n        IsEvent    = 0b00000100_0000,\n        IsProperty = 0b00000010_0000,\n        IsCommand  = 0b00000001_0000,\nIsPropertyCommand  = 0b00000011_0000,\n   IsEventCommand  = 0b00000101_0000,\nDelegationStrategyDelta =     0b0110,\n           Command =          0b1111,\n    OneTimeCommand = 0b00000011_0001,\n     ToViewCommand = 0b00000011_0010,\n   FromViewCommand = 0b00000011_0011,\n     TwoWayCommand = 0b00000011_0100,\n       BindCommand = 0b00000011_0101,\n    TriggerCommand = 0b00000101_0110,\n    CaptureCommand = 0b00000101_0111,\n   DelegateCommand = 0b00000101_1000,\n       CallCommand = 0b00001001_1001,\n    OptionsCommand = 0b00000001_1010,\n        ForCommand = 0b00100001_1011,\n     CustomCommand = 0b00010001_1100\n}\n","import { IServiceLocator } from '@aurelia/kernel';\nimport { IExpression, IInterpolationExpression } from '../ast';\nimport { BindingMode, LifecycleFlags, State } from '../flags';\nimport { IBinding } from '../lifecycle';\nimport { IBindingTargetAccessor, IObservable, IScope } from '../observation';\nimport { IObserverLocator } from '../observation/observer-locator';\nimport { connectable, IConnectableBinding, IPartialConnectableBinding } from './connectable';\n\nconst { toView, oneTime } = BindingMode;\n\nexport class MultiInterpolationBinding implements IBinding {\n  public $nextBinding: IBinding;\n  public $prevBinding: IBinding;\n  public $state: State;\n  public $scope: IScope;\n\n  public interpolation: IInterpolationExpression;\n  public observerLocator: IObserverLocator;\n  public locator: IServiceLocator;\n  public mode: BindingMode;\n  public parts: InterpolationBinding[];\n  public target: IObservable;\n  public targetProperty: string;\n\n  constructor(observerLocator: IObserverLocator, interpolation: IInterpolationExpression, target: IObservable, targetProperty: string, mode: BindingMode, locator: IServiceLocator) {\n    this.$nextBinding = null;\n    this.$prevBinding = null;\n    this.$state = State.none;\n    this.$scope = null;\n\n    this.interpolation = interpolation;\n    this.locator = locator;\n    this.mode = mode;\n    this.observerLocator = observerLocator;\n    this.target = target;\n    this.targetProperty = targetProperty;\n\n    // Note: the child expressions of an Interpolation expression are full Aurelia expressions, meaning they may include\n    // value converters and binding behaviors.\n    // Each expression represents one ${interpolation}, and for each we create a child TextBinding unless there is only one,\n    // in which case the renderer will create the TextBinding directly\n    const expressions = interpolation.expressions;\n    const parts = this.parts = Array(expressions.length);\n    for (let i = 0, ii = expressions.length; i < ii; ++i) {\n      parts[i] = new InterpolationBinding(expressions[i], interpolation, target, targetProperty, mode, observerLocator, locator, i === 0);\n    }\n  }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n      this.$unbind(flags);\n    }\n    this.$state |= State.isBound;\n    this.$scope = scope;\n\n    const parts = this.parts;\n    for (let i = 0, ii = parts.length; i < ii; ++i) {\n      parts[i].$bind(flags, scope);\n    }\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (!(this.$state & State.isBound)) {\n      return;\n    }\n    this.$state &= ~State.isBound;\n    this.$scope = null;\n    const parts = this.parts;\n    for (let i = 0, ii = parts.length; i < ii; ++i) {\n      parts[i].$unbind(flags);\n    }\n  }\n}\n\nexport interface InterpolationBinding extends IConnectableBinding {}\n\n@connectable()\nexport class InterpolationBinding implements IPartialConnectableBinding {\n  public id: string;\n  public $scope: IScope;\n  public $state: State;\n\n  public interpolation: IInterpolationExpression;\n  public isFirst: boolean;\n  public locator: IServiceLocator;\n  public mode: BindingMode;\n  public observerLocator: IObserverLocator;\n  public sourceExpression: IExpression;\n  public target: IObservable;\n  public targetProperty: string;\n\n  public targetObserver: IBindingTargetAccessor;\n\n  // tslint:disable-next-line:parameters-max-number\n  constructor(sourceExpression: IExpression, interpolation: IInterpolationExpression, target: IObservable, targetProperty: string, mode: BindingMode, observerLocator: IObserverLocator, locator: IServiceLocator, isFirst: boolean) {\n    connectable.assignIdTo(this);\n    this.$state = State.none;\n\n    this.interpolation = interpolation;\n    this.isFirst = isFirst;\n    this.mode = mode;\n    this.locator = locator;\n    this.observerLocator = observerLocator;\n    this.sourceExpression = sourceExpression;\n    this.target = target;\n    this.targetProperty = targetProperty;\n\n    this.targetObserver = observerLocator.getAccessor(LifecycleFlags.none, target, targetProperty);\n  }\n\n  public updateTarget(value: unknown, flags: LifecycleFlags): void {\n    this.targetObserver.setValue(value, flags | LifecycleFlags.updateTargetInstance);\n  }\n\n  public handleChange(_newValue: unknown, _previousValue: unknown, flags: LifecycleFlags): void {\n    if (!(this.$state & State.isBound)) {\n      return;\n    }\n\n    const previousValue = this.targetObserver.getValue();\n    const newValue = this.interpolation.evaluate(flags, this.$scope, this.locator);\n    if (newValue !== previousValue) {\n      this.updateTarget(newValue, flags);\n    }\n\n    if ((this.mode & oneTime) === 0) {\n      this.version++;\n      this.sourceExpression.connect(flags, this.$scope, this);\n      this.unobserve(false);\n    }\n  }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        return;\n      }\n      this.$unbind(flags);\n    }\n\n    this.$state |= State.isBound;\n    this.$scope = scope;\n\n    const sourceExpression = this.sourceExpression;\n    if (sourceExpression.bind) {\n      sourceExpression.bind(flags, scope, this);\n    }\n\n    // since the interpolation already gets the whole value, we only need to let the first\n    // text binding do the update if there are multiple\n    if (this.isFirst) {\n      this.updateTarget(this.interpolation.evaluate(flags, scope, this.locator), flags);\n    }\n    if (this.mode & toView) {\n      sourceExpression.connect(flags, scope, this);\n    }\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (!(this.$state & State.isBound)) {\n      return;\n    }\n    this.$state &= ~State.isBound;\n\n    const sourceExpression = this.sourceExpression;\n    if (sourceExpression.unbind) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n\n    this.$scope = null;\n    this.unobserve(true);\n  }\n}\n","import { IIndexable, IServiceLocator, Reporter, Tracer } from '@aurelia/kernel';\nimport { IExpression } from '../ast';\nimport { LifecycleFlags, State } from '../flags';\nimport { IBinding, ILifecycle } from '../lifecycle';\nimport { IObservable, IScope } from '../observation';\nimport { IObserverLocator } from '../observation/observer-locator';\nimport { connectable, IConnectableBinding, IPartialConnectableBinding } from './connectable';\n\nconst slice = Array.prototype.slice;\n\nexport interface LetBinding extends IConnectableBinding {}\n\n@connectable()\nexport class LetBinding implements IPartialConnectableBinding {\n  public id: string;\n  public $nextBinding: IBinding;\n  public $prevBinding: IBinding;\n  public $state: State;\n  public $lifecycle: ILifecycle;\n  public $scope: IScope;\n\n  public locator: IServiceLocator;\n  public observerLocator: IObserverLocator;\n  public sourceExpression: IExpression;\n  public target: IObservable | null;\n  public targetProperty: string;\n\n  private readonly toViewModel: boolean;\n\n  constructor(sourceExpression: IExpression, targetProperty: string, observerLocator: IObserverLocator, locator: IServiceLocator, toViewModel: boolean = false) {\n    connectable.assignIdTo(this);\n    this.$nextBinding = null;\n    this.$prevBinding = null;\n    this.$state = State.none;\n    this.$lifecycle = locator.get(ILifecycle);\n    this.$scope = null;\n\n    this.locator = locator;\n    this.observerLocator = observerLocator;\n    this.sourceExpression = sourceExpression;\n    this.target = null;\n    this.targetProperty = targetProperty;\n\n    this.toViewModel = toViewModel;\n  }\n\n  public handleChange(_newValue: unknown, _previousValue: unknown, flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('LetBinding', 'handleChange', slice.call(arguments)); }\n    if (!(this.$state & State.isBound)) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n\n    if (flags & LifecycleFlags.updateTargetInstance) {\n      const { target, targetProperty } = this as {target: IIndexable; targetProperty: string};\n      const previousValue: unknown = target[targetProperty];\n      const newValue: unknown = this.sourceExpression.evaluate(flags, this.$scope, this.locator);\n      if (newValue !== previousValue) {\n        target[targetProperty] = newValue;\n      }\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n\n    throw Reporter.error(15, flags);\n  }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (Tracer.enabled) { Tracer.enter('LetBinding', '$bind', slice.call(arguments)); }\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        if (Tracer.enabled) { Tracer.leave(); }\n        return;\n      }\n      this.$unbind(flags | LifecycleFlags.fromBind);\n    }\n    // add isBinding flag\n    this.$state |= State.isBinding;\n\n    this.$scope = scope;\n    this.target = (this.toViewModel ? scope.bindingContext : scope.overrideContext) as IIndexable;\n\n    const sourceExpression = this.sourceExpression;\n    if (sourceExpression.bind) {\n      sourceExpression.bind(flags, scope, this);\n    }\n    // sourceExpression might have been changed during bind\n    this.target[this.targetProperty] = this.sourceExpression.evaluate(LifecycleFlags.fromBind, scope, this.locator);\n    this.sourceExpression.connect(flags, scope, this);\n\n    // add isBound flag and remove isBinding flag\n    this.$state |= State.isBound;\n    this.$state &= ~State.isBinding;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('LetBinding', '$unbind', slice.call(arguments)); }\n    if (!(this.$state & State.isBound)) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    const sourceExpression = this.sourceExpression;\n    if (sourceExpression.unbind) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n    this.$scope = null;\n    this.unobserve(true);\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n","import { IIndexable, IServiceLocator, Tracer } from '@aurelia/kernel';\nimport { IsBindingBehavior } from '../ast';\nimport { LifecycleFlags, State } from '../flags';\nimport { IBinding } from '../lifecycle';\nimport { IObservable, IScope } from '../observation';\nimport { hasBind, hasUnbind } from './ast';\nimport { IConnectableBinding } from './connectable';\n\nconst slice = Array.prototype.slice;\n\nexport interface Ref extends IConnectableBinding {}\nexport class Ref implements IBinding {\n  public $nextBinding: IBinding;\n  public $prevBinding: IBinding;\n  public $state: State;\n  public $scope: IScope;\n\n  public locator: IServiceLocator;\n  public sourceExpression: IsBindingBehavior;\n  public target: IObservable;\n\n  constructor(sourceExpression: IsBindingBehavior, target: IObservable, locator: IServiceLocator) {\n    this.$nextBinding = null;\n    this.$prevBinding = null;\n    this.$state = State.none;\n\n    this.locator = locator;\n    this.sourceExpression = sourceExpression;\n    this.target = target;\n  }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (Tracer.enabled) { Tracer.enter('Ref', '$bind', slice.call(arguments)); }\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        if (Tracer.enabled) { Tracer.leave(); }\n        return;\n      }\n\n      this.$unbind(flags | LifecycleFlags.fromBind);\n    }\n    // add isBinding flag\n    this.$state |= State.isBinding;\n\n    this.$scope = scope;\n\n    if (hasBind(this.sourceExpression)) {\n      this.sourceExpression.bind(flags, scope, this);\n    }\n\n    this.sourceExpression.assign(flags, this.$scope, this.locator, this.target);\n\n    // add isBound flag and remove isBinding flag\n    this.$state |= State.isBound;\n    this.$state &= ~State.isBinding;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Ref', '$unbind', slice.call(arguments)); }\n    if (!(this.$state & State.isBound)) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    if (this.sourceExpression.evaluate(flags, this.$scope, this.locator) === this.target) {\n      this.sourceExpression.assign(flags, this.$scope, this.locator, null);\n    }\n\n    const sourceExpression = this.sourceExpression;\n    if (hasUnbind(sourceExpression)) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n\n    this.$scope = null;\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public observeProperty(flags: LifecycleFlags, obj: IIndexable, propertyName: string): void {\n    return;\n  }\n\n  public handleChange(newValue: unknown, previousValue: unknown, flags: LifecycleFlags): void {\n    return;\n  }\n}\n","import { Tracer } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport { ILifecycle } from '../lifecycle';\nimport { IBindingTargetAccessor, MutationKind } from '../observation';\nimport { patchProperties } from './patch-properties';\nimport { subscriberCollection } from './subscriber-collection';\n\nconst slice = Array.prototype.slice;\n\ntype BindingTargetAccessor = IBindingTargetAccessor & {\n  lifecycle: ILifecycle;\n  currentFlags: LifecycleFlags;\n  oldValue?: unknown;\n  defaultValue: unknown;\n  $nextFlush?: BindingTargetAccessor;\n  flush(flags: LifecycleFlags): void;\n  setValueCore(value: unknown, flags: LifecycleFlags): void;\n};\n\nfunction setValue(this: BindingTargetAccessor, newValue: unknown, flags: LifecycleFlags): Promise<void> {\n  if (Tracer.enabled) { Tracer.enter(this['constructor'].name, 'setValue', slice.call(arguments)); }\n  const currentValue = this.currentValue;\n  newValue = newValue === null || newValue === undefined ? this.defaultValue : newValue;\n  if (currentValue !== newValue) {\n    this.oldValue = this.currentValue;\n    this.currentValue = newValue;\n    if ((flags & (LifecycleFlags.fromFlush | LifecycleFlags.fromBind)) &&\n      !(this.isDOMObserver && (flags & LifecycleFlags.doNotUpdateDOM))) {\n      this.setValueCore(newValue, flags);\n    } else {\n      this.currentFlags = flags;\n      if (Tracer.enabled) { Tracer.leave(); }\n      return this.lifecycle.enqueueFlush(this);\n    }\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n  return Promise.resolve();\n}\n\nfunction flush(this: BindingTargetAccessor, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter(this['constructor'].name, 'flush', slice.call(arguments)); }\n  if (this.isDOMObserver && (flags & LifecycleFlags.doNotUpdateDOM)) {\n    // re-queue the change so it will still propagate on flush when it's attached again\n    this.lifecycle.enqueueFlush(this).catch(error => { throw error; });\n    if (Tracer.enabled) { Tracer.leave(); }\n    return;\n  }\n  const currentValue = this.currentValue;\n  // we're doing this check because a value could be set multiple times before a flush, and the final value could be the same as the original value\n  // in which case the target doesn't need to be updated\n  if (this.oldValue !== currentValue) {\n    this.setValueCore(currentValue, this.currentFlags | flags | LifecycleFlags.updateTargetInstance);\n    this.oldValue = this.currentValue;\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\nfunction patch(this: BindingTargetAccessor, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter(this['constructor'].name, '$patch', slice.call(arguments)); }\n\n  const newValue = this.getValue();\n  if (this.currentValue !== newValue) {\n    this.setValueCore(newValue, this.currentFlags | flags | LifecycleFlags.updateTargetInstance);\n    this.currentValue = newValue;\n  }\n  patchProperties(newValue, flags);\n\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\nfunction dispose(this: BindingTargetAccessor): void {\n  this.currentValue = null;\n  this.oldValue = null;\n  this.defaultValue = null;\n\n  this.obj = null;\n  this.propertyKey = '';\n}\n\nexport function targetObserver(defaultValue: unknown = null): ClassDecorator {\n  // tslint:disable-next-line:ban-types // ClassDecorator expects it to be derived from Function\n  return function(target: Function): void {\n    subscriberCollection(MutationKind.instance)(target);\n    const proto = target.prototype as BindingTargetAccessor;\n\n    proto.$nextFlush = null;\n\n    proto.currentValue = defaultValue;\n    proto.oldValue = defaultValue;\n    proto.defaultValue = defaultValue;\n\n    proto.obj = null;\n    proto.propertyKey = '';\n\n    proto.$patch = proto.$patch || patch;\n    proto.setValue = proto.setValue || setValue;\n    proto.flush = proto.flush || flush;\n    proto.dispose = proto.dispose || dispose;\n  };\n}\n","import { Tracer } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport {\n  Collection,\n  CollectionKind,\n  CollectionObserver,\n  IBindingTargetObserver,\n  ICollectionObserver,\n  IndexMap,\n  IPatchable,\n  IPropertySubscriber,\n  MutationKind\n} from '../observation';\nimport { batchedSubscriberCollection, subscriberCollection } from './subscriber-collection';\nimport { targetObserver } from './target-observer';\n\nconst slice = Array.prototype.slice;\n\nfunction flush(this: CollectionObserver, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter(this['constructor'].name, 'flush', slice.call(arguments)); }\n  this.callBatchedSubscribers(this.indexMap, flags | this.persistentFlags);\n  if (!!this.lengthObserver) {\n    this.lengthObserver.$patch(LifecycleFlags.fromFlush | LifecycleFlags.updateTargetInstance | this.persistentFlags);\n  }\n  this.resetIndexMap();\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\nfunction dispose(this: CollectionObserver): void {\n  this.collection.$observer = undefined;\n  this.collection = null;\n  this.indexMap = null;\n}\n\nfunction resetIndexMapIndexed(this: ICollectionObserver<CollectionKind.indexed>): void {\n  const len = this.collection.length;\n  const indexMap: IndexMap = (this.indexMap = Array(len));\n  let i = 0;\n  while (i < len) {\n    indexMap[i] = i++;\n  }\n  indexMap.deletedItems = [];\n}\n\nfunction resetIndexMapKeyed(this: ICollectionObserver<CollectionKind.keyed>): void {\n  const len = this.collection.size;\n  const indexMap: IndexMap = (this.indexMap = Array(len));\n  let i = 0;\n  while (i < len) {\n    indexMap[i] = i++;\n  }\n  indexMap.deletedItems = [];\n}\n\nfunction getLengthObserver(this: CollectionObserver): CollectionLengthObserver {\n  return this.lengthObserver === undefined ? (this.lengthObserver = new CollectionLengthObserver(this as Collection&ICollectionObserver<CollectionKind>, this.lengthPropertyName)) : this.lengthObserver as CollectionLengthObserver;\n}\n\nexport function collectionObserver(kind: CollectionKind.array | CollectionKind.set | CollectionKind.map): ClassDecorator {\n  // tslint:disable-next-line:ban-types // ClassDecorator expects it to be derived from Function\n  return function(target: Function): void {\n    subscriberCollection(MutationKind.collection)(target);\n    batchedSubscriberCollection()(target);\n    const proto = target.prototype as CollectionObserver;\n\n    proto.$nextFlush = null;\n\n    proto.collection = null;\n    proto.indexMap = null;\n    proto.hasChanges = false;\n    proto.lengthPropertyName = kind & CollectionKind.indexed ? 'length' : 'size';\n    proto.collectionKind = kind;\n    proto.resetIndexMap = kind & CollectionKind.indexed ? resetIndexMapIndexed : resetIndexMapKeyed;\n    proto.flush = flush;\n    proto.dispose = dispose;\n    proto.getLengthObserver = getLengthObserver;\n\n    proto.subscribe = proto.subscribe || proto.addSubscriber;\n    proto.unsubscribe = proto.unsubscribe || proto.removeSubscriber;\n\n    proto.subscribeBatched = proto.subscribeBatched || proto.addBatchedSubscriber;\n    proto.unsubscribeBatched = proto.unsubscribeBatched || proto.removeBatchedSubscriber;\n  };\n}\n\nexport interface CollectionLengthObserver extends IBindingTargetObserver<Collection, string> {}\n\n@targetObserver()\nexport class CollectionLengthObserver implements CollectionLengthObserver, IPatchable {\n  public currentValue: number;\n\n  public obj: Collection;\n  public propertyKey: 'length' | 'size';\n\n  constructor(obj: Collection, propertyKey: 'length' | 'size') {\n    this.obj = obj;\n    this.propertyKey = propertyKey;\n\n    this.currentValue = obj[propertyKey];\n  }\n\n  public getValue(): number {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValueCore(newValue: number): void {\n    this.obj[this.propertyKey] = newValue;\n  }\n\n  public $patch(flags: LifecycleFlags): void {\n    const newValue = this.obj[this.propertyKey];\n    const oldValue = this.currentValue;\n    if (oldValue !== newValue) {\n      this.obj[this.propertyKey] = newValue;\n      this.currentValue = newValue;\n      this.callSubscribers(newValue, oldValue, flags | LifecycleFlags.updateTargetInstance);\n    }\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    this.removeSubscriber(subscriber);\n  }\n}\n","import { Tracer } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport { ILifecycle } from '../lifecycle';\nimport { CollectionKind, ICollectionObserver, IndexMap, IObservedArray } from '../observation';\nimport { collectionObserver } from './collection-observer';\nimport { patchProperties } from './patch-properties';\n\n// https://tc39.github.io/ecma262/#sec-sortcompare\nfunction sortCompare(x: unknown, y: unknown): number {\n  if (x === y) {\n    return 0;\n  }\n  x = x === null ? 'null' : (x as {}).toString();\n  y = y === null ? 'null' : (y as {}).toString();\n  return (x as {}) < (y as {}) ? -1 : 1;\n}\n\nfunction preSortCompare(x: unknown, y: unknown): number {\n  if (x === undefined) {\n    if (y === undefined) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n  if (y === undefined) {\n    return -1;\n  }\n  return 0;\n}\n\nfunction insertionSort(arr: IObservedArray, indexMap: IndexMap, from: number, to: number, compareFn: (a: unknown, b: unknown) => number): void {\n  let velement, ielement, vtmp, itmp, order;\n  let i, j;\n  for (i = from + 1; i < to; i++) {\n    velement = arr[i];\n    ielement = indexMap[i];\n    for (j = i - 1; j >= from; j--) {\n      vtmp = arr[j];\n      itmp = indexMap[j];\n      order = compareFn(vtmp, velement);\n      if (order > 0) {\n        arr[j + 1] = vtmp;\n        indexMap[j + 1] = itmp;\n      } else {\n        break;\n      }\n    }\n    arr[j + 1] = velement;\n    indexMap[j + 1] = ielement;\n  }\n}\n\n// tslint:disable-next-line:cognitive-complexity\nfunction quickSort(arr: IObservedArray, indexMap: IndexMap, from: number, to: number, compareFn: (a: unknown, b: unknown) => number): void {\n  let thirdIndex = 0, i = 0;\n  let v0, v1, v2;\n  let i0, i1, i2;\n  let c01, c02, c12;\n  let vtmp, itmp;\n  let vpivot, ipivot, lowEnd, highStart;\n  let velement, ielement, order, vtopElement;\n\n  // tslint:disable-next-line:no-constant-condition\n  while (true) {\n    if (to - from <= 10) {\n      insertionSort(arr, indexMap, from, to, compareFn);\n      return;\n    }\n\n    // tslint:disable:no-statements-same-line\n    thirdIndex = from + ((to - from) >> 1);\n    v0 = arr[from];                i0 = indexMap[from];\n    v1 = arr[to - 1];              i1 = indexMap[to - 1];\n    v2 = arr[thirdIndex];          i2 = indexMap[thirdIndex];\n    c01 = compareFn(v0, v1);\n    if (c01 > 0) {\n      vtmp = v0;                   itmp = i0;\n      v0 = v1;                     i0 = i1;\n      v1 = vtmp;                   i1 = itmp;\n    }\n    c02 = compareFn(v0, v2);\n    if (c02 >= 0) {\n      vtmp = v0;                   itmp = i0;\n      v0 = v2;                     i0 = i2;\n      v2 = v1;                     i2 = i1;\n      v1 = vtmp;                   i1 = itmp;\n    } else {\n      c12 = compareFn(v1, v2);\n      if (c12 > 0) {\n        vtmp = v1;                 itmp = i1;\n        v1 = v2;                   i1 = i2;\n        v2 = vtmp;                 i2 = itmp;\n      }\n    }\n    arr[from] = v0;                indexMap[from] = i0;\n    arr[to - 1] = v2;              indexMap[to - 1] = i2;\n    vpivot = v1;                   ipivot = i1;\n    lowEnd = from + 1;\n    highStart = to - 1;\n    arr[thirdIndex] = arr[lowEnd]; indexMap[thirdIndex] = indexMap[lowEnd];\n    arr[lowEnd] = vpivot;          indexMap[lowEnd] = ipivot;\n\n    partition: for (i = lowEnd + 1; i < highStart; i++) {\n      velement = arr[i];           ielement = indexMap[i];\n      order = compareFn(velement, vpivot);\n      if (order < 0) {\n        arr[i] = arr[lowEnd];      indexMap[i] = indexMap[lowEnd];\n        arr[lowEnd] = velement;    indexMap[lowEnd] = ielement;\n        lowEnd++;\n      } else if (order > 0) {\n        do {\n          highStart--;\n          // tslint:disable-next-line:triple-equals\n          if (highStart == i) {\n            break partition;\n          }\n          vtopElement = arr[highStart]; order = compareFn(vtopElement, vpivot);\n        } while (order > 0);\n        arr[i] = arr[highStart];   indexMap[i] = indexMap[highStart];\n        arr[highStart] = velement; indexMap[highStart] = ielement;\n        if (order < 0) {\n          velement = arr[i];       ielement = indexMap[i];\n          arr[i] = arr[lowEnd];    indexMap[i] = indexMap[lowEnd];\n          arr[lowEnd] = velement;  indexMap[lowEnd] = ielement;\n          lowEnd++;\n        }\n      }\n    }\n    // tslint:enable:no-statements-same-line\n\n    if (to - highStart < lowEnd - from) {\n      quickSort(arr, indexMap, highStart, to, compareFn);\n      to = lowEnd;\n    } else {\n      quickSort(arr, indexMap, from, lowEnd, compareFn);\n      from = highStart;\n    }\n  }\n}\n\nconst proto = Array.prototype;\n\nconst $push = proto.push;\nconst $unshift = proto.unshift;\nconst $pop = proto.pop;\nconst $shift = proto.shift;\nconst $splice = proto.splice;\nconst $reverse = proto.reverse;\nconst $sort = proto.sort;\n\nconst native = { push: $push, unshift: $unshift, pop: $pop, shift: $shift, splice: $splice, reverse: $reverse, sort: $sort };\nconst methods = ['push', 'unshift', 'pop', 'shift', 'splice', 'reverse', 'sort'];\n\nconst observe = {\n  // https://tc39.github.io/ecma262/#sec-array.prototype.push\n  push: function(this: IObservedArray): ReturnType<typeof Array.prototype.push> {\n    let $this = this;\n    if ($this.$raw !== undefined) {\n      $this = $this.$raw;\n    }\n    const o = $this.$observer;\n    if (o === undefined) {\n      return $push.apply($this, arguments);\n    }\n    const len = $this.length;\n    const argCount = arguments.length;\n    if (argCount === 0) {\n      return len;\n    }\n    $this.length = o.indexMap.length = len + argCount;\n    let i = len;\n    while (i < $this.length) {\n      $this[i] = arguments[i - len];\n      o.indexMap[i] = - 2;\n      i++;\n    }\n    o.callSubscribers('push', arguments, o.persistentFlags | LifecycleFlags.isCollectionMutation);\n    return $this.length;\n  },\n  // https://tc39.github.io/ecma262/#sec-array.prototype.unshift\n  unshift: function(this: IObservedArray): ReturnType<typeof Array.prototype.unshift>  {\n    let $this = this;\n    if ($this.$raw !== undefined) {\n      $this = $this.$raw;\n    }\n    const o = $this.$observer;\n    if (o === undefined) {\n      return $unshift.apply($this, arguments);\n    }\n    const argCount = arguments.length;\n    const inserts = new Array(argCount);\n    let i = 0;\n    while (i < argCount) {\n      inserts[i++] = - 2;\n    }\n    $unshift.apply(o.indexMap, inserts);\n    const len = $unshift.apply($this, arguments);\n    o.callSubscribers('unshift', arguments, o.persistentFlags | LifecycleFlags.isCollectionMutation);\n    return len;\n  },\n  // https://tc39.github.io/ecma262/#sec-array.prototype.pop\n  pop: function(this: IObservedArray): ReturnType<typeof Array.prototype.pop> {\n    let $this = this;\n    if ($this.$raw !== undefined) {\n      $this = $this.$raw;\n    }\n    const o = $this.$observer;\n    if (o === undefined) {\n      return $pop.call($this);\n    }\n    const indexMap = o.indexMap;\n    const element = $pop.call($this);\n    // only mark indices as deleted if they actually existed in the original array\n    const index = indexMap.length - 1;\n    if (indexMap[index] > -1) {\n      indexMap.deletedItems.push(indexMap[index]);\n    }\n    $pop.call(indexMap);\n    o.callSubscribers('pop', arguments, o.persistentFlags | LifecycleFlags.isCollectionMutation);\n    return element;\n  },\n  // https://tc39.github.io/ecma262/#sec-array.prototype.shift\n  shift: function(this: IObservedArray): ReturnType<typeof Array.prototype.shift> {\n    let $this = this;\n    if ($this.$raw !== undefined) {\n      $this = $this.$raw;\n    }\n    const o = $this.$observer;\n    if (o === undefined) {\n      return $shift.call($this);\n    }\n    const indexMap = o.indexMap;\n    const element = $shift.call($this);\n    // only mark indices as deleted if they actually existed in the original array\n    if (indexMap[0] > -1) {\n      indexMap.deletedItems.push(indexMap[0]);\n    }\n    $shift.call(indexMap);\n    o.callSubscribers('shift', arguments, o.persistentFlags | LifecycleFlags.isCollectionMutation);\n    return element;\n  },\n  // https://tc39.github.io/ecma262/#sec-array.prototype.splice\n  splice: function(this: IObservedArray, start: number, deleteCount?: number): ReturnType<typeof Array.prototype.splice> {\n    let $this = this;\n    if ($this.$raw !== undefined) {\n      $this = $this.$raw;\n    }\n    const o = $this.$observer;\n    if (o === undefined) {\n      return $splice.apply($this, arguments);\n    }\n    const indexMap = o.indexMap;\n    if (deleteCount > 0) {\n      let i = isNaN(start) ? 0 : start;\n      const to = i + deleteCount;\n      while (i < to) {\n        if (indexMap[i] > -1) {\n          indexMap.deletedItems.push(indexMap[i]);\n        }\n        i++;\n      }\n    }\n    const argCount = arguments.length;\n    if (argCount > 2) {\n      const itemCount = argCount - 2;\n      const inserts = new Array(itemCount);\n      let i = 0;\n      while (i < itemCount) {\n        inserts[i++] = - 2;\n      }\n      $splice.call(indexMap, start, deleteCount, ...inserts);\n    } else if (argCount === 2) {\n      $splice.call(indexMap, start, deleteCount);\n    }\n    const deleted = $splice.apply($this, arguments);\n    o.callSubscribers('splice', arguments, o.persistentFlags | LifecycleFlags.isCollectionMutation);\n    return deleted;\n  },\n  // https://tc39.github.io/ecma262/#sec-array.prototype.reverse\n  reverse: function(this: IObservedArray): ReturnType<typeof Array.prototype.reverse> {\n    let $this = this;\n    if ($this.$raw !== undefined) {\n      $this = $this.$raw;\n    }\n    const o = $this.$observer;\n    if (o === undefined) {\n      $reverse.call($this);\n      return this;\n    }\n    const len = $this.length;\n    const middle = (len / 2) | 0;\n    let lower = 0;\n    // tslint:disable:no-statements-same-line\n    while (lower !== middle) {\n      const upper = len - lower - 1;\n      const lowerValue = $this[lower];  const lowerIndex = o.indexMap[lower];\n      const upperValue = $this[upper];  const upperIndex = o.indexMap[upper];\n      $this[lower] = upperValue;        o.indexMap[lower] = upperIndex;\n      $this[upper] = lowerValue;        o.indexMap[upper] = lowerIndex;\n      lower++;\n    }\n    // tslint:enable:no-statements-same-line\n    o.callSubscribers('reverse', arguments, o.persistentFlags | LifecycleFlags.isCollectionMutation);\n    return this;\n  },\n  // https://tc39.github.io/ecma262/#sec-array.prototype.sort\n  // https://github.com/v8/v8/blob/master/src/js/array.js\n  sort: function(this: IObservedArray, compareFn?: (a: unknown, b: unknown) => number): IObservedArray {\n    let $this = this;\n    if ($this.$raw !== undefined) {\n      $this = $this.$raw;\n    }\n    const o = $this.$observer;\n    if (o === undefined) {\n      $sort.call($this, compareFn);\n      return this;\n    }\n    const len = $this.length;\n    if (len < 2) {\n      return this;\n    }\n    quickSort($this, o.indexMap, 0, len, preSortCompare);\n    let i = 0;\n    while (i < len) {\n      if ($this[i] === undefined) {\n        break;\n      }\n      i++;\n    }\n    if (compareFn === undefined || typeof compareFn !== 'function'/*spec says throw a TypeError, should we do that too?*/) {\n      compareFn = sortCompare;\n    }\n    quickSort($this, o.indexMap, 0, i, compareFn);\n    o.callSubscribers('sort', arguments, o.persistentFlags | LifecycleFlags.isCollectionMutation);\n    return this;\n  }\n};\n\nconst descriptorProps = {\n  writable: true,\n  enumerable: false,\n  configurable: true\n};\n\nconst def = Reflect.defineProperty;\n\nfor (const method of methods) {\n  def(observe[method], 'observing', { value: true, writable: false, configurable: false, enumerable: false });\n}\n\nexport function enableArrayObservation(): void {\n  for (const method of methods) {\n    if (proto[method].observing !== true) {\n      def(proto, method, { ...descriptorProps, value: observe[method] });\n    }\n  }\n}\n\nenableArrayObservation();\n\nexport function disableArrayObservation(): void {\n  for (const method of methods) {\n    if (proto[method].observing === true) {\n      def(proto, method, { ...descriptorProps, value: native[method] });\n    }\n  }\n}\n\nconst slice = Array.prototype.slice;\n\nexport interface ArrayObserver extends ICollectionObserver<CollectionKind.array> {}\n\n@collectionObserver(CollectionKind.array)\nexport class ArrayObserver implements ArrayObserver {\n  public resetIndexMap: () => void;\n\n  public collection: IObservedArray;\n  public readonly flags: LifecycleFlags;\n\n  constructor(flags: LifecycleFlags, lifecycle: ILifecycle, array: IObservedArray) {\n    if (Tracer.enabled) { Tracer.enter('ArrayObserver', 'constructor', slice.call(arguments)); }\n    this.lifecycle = lifecycle;\n    array.$observer = this;\n    this.collection = array;\n    this.flags = flags & LifecycleFlags.persistentBindingFlags;\n    this.resetIndexMap();\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public $patch(flags: LifecycleFlags): void {\n    const items = this.collection;\n    const len = items.length;\n    let i = 0;\n    for (; i < len; ++i) {\n      patchProperties(items[i], flags);\n    }\n  }\n}\n\nexport function getArrayObserver(flags: LifecycleFlags, lifecycle: ILifecycle, array: IObservedArray): ArrayObserver {\n  return (array.$observer as ArrayObserver) || new ArrayObserver(flags, lifecycle, array);\n}\n","import { Tracer } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport { ILifecycle } from '../lifecycle';\nimport { CollectionKind, ICollectionObserver, IObservedMap } from '../observation';\nimport { collectionObserver } from './collection-observer';\nimport { patchProperties } from './patch-properties';\n\nconst proto = Map.prototype;\n\nconst $set = proto.set;\nconst $clear = proto.clear;\nconst $delete = proto.delete;\n\nconst native = { set: $set, clear: $clear, delete: $delete };\nconst methods = ['set', 'clear', 'delete'];\n\n// note: we can't really do much with Map due to the internal data structure not being accessible so we're just using the native calls\n// fortunately, map/delete/clear are easy to reconstruct for the indexMap\n\nconst observe = {\n  // https://tc39.github.io/ecma262/#sec-map.prototype.map\n  set: function(this: IObservedMap, key: unknown, value: unknown): ReturnType<typeof $set> {\n    let $this = this;\n    if ($this.$raw !== undefined) {\n      $this = $this.$raw;\n    }\n    const o = $this.$observer;\n    if (o === undefined) {\n      $set.call($this, key, value);\n      return this;\n    }\n    const oldSize = $this.size;\n    $set.call($this, key, value);\n    const newSize = $this.size;\n    if (newSize === oldSize) {\n      let i = 0;\n      for (const entry of $this.entries()) {\n        if (entry[0] === key) {\n          if (entry[1] !== value) {\n            o.indexMap[i] = -2;\n          }\n          return this;\n        }\n        i++;\n      }\n      return this;\n    }\n    o.indexMap[oldSize] = -2;\n    o.callSubscribers('set', arguments, o.persistentFlags | LifecycleFlags.isCollectionMutation);\n    return this;\n  },\n  // https://tc39.github.io/ecma262/#sec-map.prototype.clear\n  clear: function(this: IObservedMap): ReturnType<typeof $clear>  {\n    let $this = this;\n    if ($this.$raw !== undefined) {\n      $this = $this.$raw;\n    }\n    const o = $this.$observer;\n    if (o === undefined) {\n      return $clear.call($this);\n    }\n    const size = $this.size;\n    if (size > 0) {\n      const indexMap = o.indexMap;\n      let i = 0;\n      for (const entry of $this.keys()) {\n        if (indexMap[i] > -1) {\n          indexMap.deletedItems.push(indexMap[i]);\n        }\n        i++;\n      }\n      $clear.call($this);\n      indexMap.length = 0;\n      o.callSubscribers('clear', arguments, o.persistentFlags | LifecycleFlags.isCollectionMutation);\n    }\n    return undefined;\n  },\n  // https://tc39.github.io/ecma262/#sec-map.prototype.delete\n  delete: function(this: IObservedMap, value: unknown): ReturnType<typeof $delete> {\n    let $this = this;\n    if ($this.$raw !== undefined) {\n      $this = $this.$raw;\n    }\n    const o = $this.$observer;\n    if (o === undefined) {\n      return $delete.call($this, value);\n    }\n    const size = $this.size;\n    if (size === 0) {\n      return false;\n    }\n    let i = 0;\n    const indexMap = o.indexMap;\n    for (const entry of $this.keys()) {\n      if (entry === value) {\n        if (indexMap[i] > -1) {\n          indexMap.deletedItems.push(indexMap[i]);\n        }\n        indexMap.splice(i, 1);\n        return $delete.call($this, value);\n      }\n      i++;\n    }\n    o.callSubscribers('delete', arguments, o.persistentFlags | LifecycleFlags.isCollectionMutation);\n    return false;\n  }\n};\n\nconst descriptorProps = {\n  writable: true,\n  enumerable: false,\n  configurable: true\n};\n\nconst def = Reflect.defineProperty;\n\nfor (const method of methods) {\n  def(observe[method], 'observing', { value: true, writable: false, configurable: false, enumerable: false });\n}\n\nexport function enableMapObservation(): void {\n  for (const method of methods) {\n    if (proto[method].observing !== true) {\n      def(proto, method, { ...descriptorProps, value: observe[method] });\n    }\n  }\n}\n\nenableMapObservation();\n\nexport function disableMapObservation(): void {\n  for (const method of methods) {\n    if (proto[method].observing === true) {\n      def(proto, method, { ...descriptorProps, value: native[method] });\n    }\n  }\n}\n\nconst slice = Array.prototype.slice;\n\nexport interface MapObserver extends ICollectionObserver<CollectionKind.map> {}\n\n@collectionObserver(CollectionKind.map)\nexport class MapObserver implements MapObserver {\n  public resetIndexMap: () => void;\n  public lifecycle: ILifecycle;\n\n  public collection: IObservedMap;\n  public readonly flags: LifecycleFlags;\n\n  constructor(flags: LifecycleFlags, lifecycle: ILifecycle, map: IObservedMap) {\n    if (Tracer.enabled) { Tracer.enter('MapObserver', 'constructor', slice.call(arguments)); }\n    this.lifecycle = lifecycle;\n    map.$observer = this;\n    this.collection = map;\n    this.flags = flags & LifecycleFlags.persistentBindingFlags;\n    this.resetIndexMap();\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public $patch(flags: LifecycleFlags): void {\n    this.collection.forEach((value, key) => {\n      patchProperties(value, flags);\n      patchProperties(key, flags);\n    });\n  }\n}\n\nexport function getMapObserver(flags: LifecycleFlags, lifecycle: ILifecycle, map: IObservedMap): MapObserver {\n  return (map.$observer as MapObserver) || new MapObserver(flags, lifecycle, map);\n}\n","import { Tracer } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport { ILifecycle } from '../lifecycle';\nimport { CollectionKind, ICollectionObserver, IObservedSet } from '../observation';\nimport { collectionObserver } from './collection-observer';\nimport { patchProperties } from './patch-properties';\n\nconst proto = Set.prototype;\n\nconst $add = proto.add;\nconst $clear = proto.clear;\nconst $delete = proto.delete;\n\nconst native = { add: $add, clear: $clear, delete: $delete };\nconst methods = ['add', 'clear', 'delete'];\n\n// note: we can't really do much with Set due to the internal data structure not being accessible so we're just using the native calls\n// fortunately, add/delete/clear are easy to reconstruct for the indexMap\n\nconst observe = {\n  // https://tc39.github.io/ecma262/#sec-set.prototype.add\n  add: function(this: IObservedSet, value: unknown): ReturnType<typeof $add> {\n    let $this = this;\n    if ($this.$raw !== undefined) {\n      $this = $this.$raw;\n    }\n    const o = $this.$observer;\n    if (o === undefined) {\n      $add.call($this, value);\n      return this;\n    }\n    const oldSize = $this.size;\n    $add.call($this, value);\n    const newSize = $this.size;\n    if (newSize === oldSize) {\n      return this;\n    }\n    o.indexMap[oldSize] = -2;\n    o.callSubscribers('add', arguments, o.persistentFlags | LifecycleFlags.isCollectionMutation);\n    return this;\n  },\n  // https://tc39.github.io/ecma262/#sec-set.prototype.clear\n  clear: function(this: IObservedSet): ReturnType<typeof $clear>  {\n    let $this = this;\n    if ($this.$raw !== undefined) {\n      $this = $this.$raw;\n    }\n    const o = $this.$observer;\n    if (o === undefined) {\n      return $clear.call($this);\n    }\n    const size = $this.size;\n    if (size > 0) {\n      const indexMap = o.indexMap;\n      let i = 0;\n      for (const entry of $this.keys()) {\n        if (indexMap[i] > -1) {\n          indexMap.deletedItems.push(indexMap[i]);\n        }\n        i++;\n      }\n      $clear.call($this);\n      indexMap.length = 0;\n      o.callSubscribers('clear', arguments, o.persistentFlags | LifecycleFlags.isCollectionMutation);\n    }\n    return undefined;\n  },\n  // https://tc39.github.io/ecma262/#sec-set.prototype.delete\n  delete: function(this: IObservedSet, value: unknown): ReturnType<typeof $delete> {\n    let $this = this;\n    if ($this.$raw !== undefined) {\n      $this = $this.$raw;\n    }\n    const o = $this.$observer;\n    if (o === undefined) {\n      return $delete.call($this, value);\n    }\n    const size = $this.size;\n    if (size === 0) {\n      return false;\n    }\n    let i = 0;\n    const indexMap = o.indexMap;\n    for (const entry of $this.keys()) {\n      if (entry === value) {\n        if (indexMap[i] > -1) {\n          indexMap.deletedItems.push(indexMap[i]);\n        }\n        indexMap.splice(i, 1);\n        return $delete.call($this, value);\n      }\n      i++;\n    }\n    o.callSubscribers('delete', arguments, o.persistentFlags | LifecycleFlags.isCollectionMutation);\n    return false;\n  }\n};\n\nconst descriptorProps = {\n  writable: true,\n  enumerable: false,\n  configurable: true\n};\n\nconst def = Reflect.defineProperty;\n\nfor (const method of methods) {\n  def(observe[method], 'observing', { value: true, writable: false, configurable: false, enumerable: false });\n}\n\nexport function enableSetObservation(): void {\n  for (const method of methods) {\n    if (proto[method].observing !== true) {\n      def(proto, method, { ...descriptorProps, value: observe[method] });\n    }\n  }\n}\n\nenableSetObservation();\n\nexport function disableSetObservation(): void {\n  for (const method of methods) {\n    if (proto[method].observing === true) {\n      def(proto, method, { ...descriptorProps, value: native[method] });\n    }\n  }\n}\n\nconst slice = Array.prototype.slice;\n\nexport interface SetObserver extends ICollectionObserver<CollectionKind.set> {}\n\n@collectionObserver(CollectionKind.set)\nexport class SetObserver implements SetObserver {\n  public resetIndexMap: () => void;\n\n  public collection: IObservedSet;\n  public readonly flags: LifecycleFlags;\n\n  constructor(flags: LifecycleFlags, lifecycle: ILifecycle, observedSet: IObservedSet) {\n    if (Tracer.enabled) { Tracer.enter('SetObserver', 'constructor', slice.call(arguments)); }\n    this.lifecycle = lifecycle;\n    observedSet.$observer = this;\n    this.collection = observedSet;\n    this.flags = flags & LifecycleFlags.persistentBindingFlags;\n    this.resetIndexMap();\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public $patch(flags: LifecycleFlags): void {\n    this.collection.forEach((value, key) => {\n      patchProperties(key, flags);\n    });\n  }\n}\n\nexport function getSetObserver(flags: LifecycleFlags, lifecycle: ILifecycle, observedSet: IObservedSet): SetObserver {\n  return (observedSet.$observer as SetObserver) || new SetObserver(flags, lifecycle, observedSet);\n}\n","import { Constructable, PLATFORM, Reporter, Tracer } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport { ILifecycle } from '../lifecycle';\nimport {\n  IBatchedSubscribable,\n  IBindingTargetObserver,\n  IObservable,\n  IPropertySubscriber,\n  ISubscribable,\n  MutationKind\n} from '../observation';\nimport { IDirtyChecker } from './dirty-checker';\nimport { IObserverLocator } from './observer-locator';\nimport { subscriberCollection } from './subscriber-collection';\n\nconst slice = Array.prototype.slice;\n\nexport interface ComputedOverrides {\n  // Indicates that a getter doesn't need to re-calculate its dependencies after the first observation.\n  static?: boolean;\n\n  // Indicates that the getter of a getter/setter pair can change its value based on side-effects outside the setter.\n  volatile?: boolean;\n}\n\nexport type ComputedLookup = { computed?: Record<string, ComputedOverrides> };\n\nexport function computed(config: ComputedOverrides): PropertyDecorator {\n  return function(target: Constructable & ComputedLookup, key: string): void {\n    (target.computed || (target.computed = {}))[key] = config;\n  };\n}\n\nconst computedOverrideDefaults: ComputedOverrides = { static: false, volatile: false };\n\n/* @internal */\nexport function createComputedObserver(\n  flags: LifecycleFlags,\n  observerLocator: IObserverLocator,\n  dirtyChecker: IDirtyChecker,\n  lifecycle: ILifecycle,\n  instance: IObservable & { constructor: IObservable & ComputedLookup },\n  propertyName: string,\n  descriptor: PropertyDescriptor): IBindingTargetObserver {\n\n  if (descriptor.configurable === false) {\n    return dirtyChecker.createProperty(instance, propertyName);\n  }\n\n  if (descriptor.get) {\n    const overrides = instance.constructor.computed && instance.constructor.computed[propertyName] || computedOverrideDefaults;\n\n    if (descriptor.set) {\n      if (overrides.volatile) {\n        return new GetterObserver(flags, overrides, instance, propertyName, descriptor, observerLocator, lifecycle);\n      }\n      return new CustomSetterObserver(instance, propertyName, descriptor);\n    }\n    return new GetterObserver(flags, overrides, instance, propertyName, descriptor, observerLocator, lifecycle);\n  }\n  throw Reporter.error(18, propertyName);\n}\n\nexport interface CustomSetterObserver extends IBindingTargetObserver { }\n\n// Used when the getter is dependent solely on changes that happen within the setter.\n@subscriberCollection(MutationKind.instance)\nexport class CustomSetterObserver implements CustomSetterObserver {\n  public readonly obj: IObservable;\n  public readonly propertyKey: string;\n  public currentValue: unknown;\n  public oldValue: unknown;\n\n  private readonly descriptor: PropertyDescriptor;\n  private observing: boolean;\n\n  constructor(obj: IObservable, propertyKey: string, descriptor: PropertyDescriptor) {\n    this.obj = obj;\n    this.propertyKey = propertyKey;\n    this.currentValue = this.oldValue = undefined;\n    this.descriptor = descriptor;\n    this.observing = false;\n  }\n\n  public setValue(newValue: unknown): void {\n    if (Tracer.enabled) { Tracer.enter('CustomSetterObserver', 'setValue', slice.call(arguments)); }\n    this.descriptor.set.call(this.obj, newValue);\n    if (this.currentValue !== newValue) {\n      this.oldValue = this.currentValue;\n      this.currentValue = newValue;\n      this.callSubscribers(newValue, this.oldValue, LifecycleFlags.updateTargetInstance);\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.observing) {\n      this.convertProperty();\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    this.removeSubscriber(subscriber);\n  }\n\n  public convertProperty(): void {\n    if (Tracer.enabled) { Tracer.enter('CustomSetterObserver', 'convertProperty', slice.call(arguments)); }\n    this.observing = true;\n    this.currentValue = this.obj[this.propertyKey];\n\n    const set = (newValue: unknown): void => { this.setValue(newValue); };\n    Reflect.defineProperty(this.obj, this.propertyKey, { set });\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\nexport interface GetterObserver extends IBindingTargetObserver { }\n\n// Used when there is no setter, and the getter is dependent on other properties of the object;\n// Used when there is a setter but the value of the getter can change based on properties set outside of the setter.\n/** @internal */\n@subscriberCollection(MutationKind.instance)\nexport class GetterObserver implements GetterObserver {\n  public readonly obj: IObservable;\n  public readonly propertyKey: string;\n  public currentValue: unknown;\n  public oldValue: unknown;\n\n  private readonly proxy: ProxyHandler<object>;\n  private readonly propertyDeps: ISubscribable<MutationKind.instance>[];\n  private readonly collectionDeps: IBatchedSubscribable<MutationKind.collection>[];\n  private readonly overrides: ComputedOverrides;\n  private readonly descriptor: PropertyDescriptor;\n  private subscriberCount: number;\n  private isCollecting: boolean;\n\n  constructor(flags: LifecycleFlags, overrides: ComputedOverrides, obj: IObservable, propertyKey: string, descriptor: PropertyDescriptor, observerLocator: IObserverLocator, lifecycle: ILifecycle) {\n    this.obj = obj;\n    this.propertyKey = propertyKey;\n    this.isCollecting = false;\n    this.currentValue = this.oldValue = undefined;\n\n    this.propertyDeps = [];\n    this.collectionDeps = [];\n    this.overrides = overrides;\n    this.subscriberCount = 0;\n    this.descriptor = descriptor;\n    this.proxy = new Proxy(obj, createGetterTraps(flags, observerLocator, this));\n\n    const get = (): unknown => this.getValue();\n    Reflect.defineProperty(obj, propertyKey, { get });\n  }\n\n  public addPropertyDep(subscribable: ISubscribable<MutationKind.instance>): void {\n    if (this.propertyDeps.indexOf(subscribable) === -1) {\n      this.propertyDeps.push(subscribable);\n    }\n  }\n\n  public addCollectionDep(subscribable: IBatchedSubscribable<MutationKind.collection>): void {\n    if (this.collectionDeps.indexOf(subscribable) === -1) {\n      this.collectionDeps.push(subscribable);\n    }\n  }\n\n  public getValue(): unknown {\n    if (Tracer.enabled) { Tracer.enter('GetterObserver', 'getValue', slice.call(arguments)); }\n    if (this.subscriberCount === 0 || this.isCollecting) {\n      this.currentValue = Reflect.apply(this.descriptor.get, this.proxy, PLATFORM.emptyArray);\n    } else {\n      this.currentValue = Reflect.apply(this.descriptor.get, this.obj, PLATFORM.emptyArray);\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n    return this.currentValue;\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    this.addSubscriber(subscriber);\n    if (++this.subscriberCount === 1) {\n      this.getValueAndCollectDependencies(true);\n    }\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    this.removeSubscriber(subscriber);\n    if (--this.subscriberCount === 0) {\n      this.unsubscribeAllDependencies();\n    }\n  }\n\n  public handleChange(): void {\n    const oldValue = this.currentValue;\n    const newValue = this.getValueAndCollectDependencies(false);\n    if (oldValue !== newValue) {\n      this.callSubscribers(newValue, oldValue, LifecycleFlags.updateTargetInstance);\n    }\n  }\n\n  public handleBatchedChange(): void {\n    const oldValue = this.currentValue;\n    const newValue = this.getValueAndCollectDependencies(false);\n    if (oldValue !== newValue) {\n      this.callSubscribers(newValue, oldValue, LifecycleFlags.fromFlush | LifecycleFlags.updateTargetInstance);\n    }\n  }\n\n  public getValueAndCollectDependencies(requireCollect: boolean): unknown {\n    if (Tracer.enabled) { Tracer.enter('GetterObserver', 'getValueAndCollectDependencies', slice.call(arguments)); }\n    const dynamicDependencies = !this.overrides.static || requireCollect;\n\n    if (dynamicDependencies) {\n      this.unsubscribeAllDependencies();\n      this.isCollecting = true;\n    }\n\n    this.currentValue = this.getValue();\n\n    if (dynamicDependencies) {\n      this.propertyDeps.forEach(x => { x.subscribe(this); });\n      this.collectionDeps.forEach(x => { x.subscribeBatched(this); });\n      this.isCollecting = false;\n    }\n\n    if (Tracer.enabled) { Tracer.leave(); }\n    return this.currentValue;\n  }\n\n  public doNotCollect(key: PropertyKey): boolean {\n    return !this.isCollecting || key === '$observers';\n  }\n\n  private unsubscribeAllDependencies(): void {\n    this.propertyDeps.forEach(x => { x.unsubscribe(this); });\n    this.propertyDeps.length = 0;\n    this.collectionDeps.forEach(x => { x.unsubscribeBatched(this); });\n    this.collectionDeps.length = 0;\n  }\n}\n\nconst toStringTag = Object.prototype.toString;\n\nfunction createGetterTraps(flags: LifecycleFlags, observerLocator: IObserverLocator, observer: GetterObserver): ProxyHandler<object> {\n  if (Tracer.enabled) { Tracer.enter('computed', 'createGetterTraps', slice.call(arguments)); }\n  const traps = {\n    get: function(target: object, key: PropertyKey, receiver?: unknown): unknown {\n      if (Tracer.enabled) { Tracer.enter('computed', 'get', slice.call(arguments)); }\n      if (observer.doNotCollect(key)) {\n        if (Tracer.enabled) { Tracer.leave(); }\n        return Reflect.get(target, key, receiver);\n      }\n\n      // The length and iterator properties need to be invoked on the original object (for Map and Set\n      // at least) or they will throw.\n      switch (toStringTag.call(target)) {\n        case '[object Array]':\n          observer.addCollectionDep(observerLocator.getArrayObserver(flags, target as unknown[]));\n          if (key === 'length') {\n            if (Tracer.enabled) { Tracer.leave(); }\n            return Reflect.get(target, key, target);\n          }\n        case '[object Map]':\n          observer.addCollectionDep(observerLocator.getMapObserver(flags, target as Map<unknown, unknown>));\n          if (key === 'size') {\n            if (Tracer.enabled) { Tracer.leave(); }\n            return Reflect.get(target, key, target);\n          }\n        case '[object Set]':\n          observer.addCollectionDep(observerLocator.getSetObserver(flags, target as Set<unknown>));\n          if (key === 'size') {\n            if (Tracer.enabled) { Tracer.leave(); }\n            return Reflect.get(target, key, target);\n          }\n        default:\n          observer.addPropertyDep(observerLocator.getObserver(flags, target, key as string) as IBindingTargetObserver);\n      }\n\n      if (Tracer.enabled) { Tracer.leave(); }\n      return proxyOrValue(flags, target, key, observerLocator, observer);\n    }\n  };\n  if (Tracer.enabled) { Tracer.leave(); }\n  return traps;\n}\n\nfunction proxyOrValue(flags: LifecycleFlags, target: object, key: PropertyKey, observerLocator: IObserverLocator, observer: GetterObserver): ProxyHandler<object> {\n  const value = Reflect.get(target, key, target);\n  if (typeof value === 'function') {\n    return target[key].bind(target);\n  }\n  if (typeof value !== 'object' || value === null) {\n    return value;\n  }\n  return new Proxy(value, createGetterTraps(flags, observerLocator, observer));\n}\n","import { DI, PLATFORM, Reporter, Tracer } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport { IBindingTargetObserver, IObservable, IPropertySubscriber } from '../observation';\nimport { propertyObserver } from './property-observer';\n\nexport interface IDirtyChecker {\n  createProperty(obj: IObservable, propertyName: string): IBindingTargetObserver;\n  addProperty(property: DirtyCheckProperty): void;\n  removeProperty(property: DirtyCheckProperty): void;\n}\n\nexport const IDirtyChecker = DI.createInterface<IDirtyChecker>('IDirtyChecker').withDefault(x => x.singleton(DirtyChecker));\n\nexport const DirtyCheckSettings = {\n  /**\n   * Default: `6`\n   *\n   * Adjust the global dirty check frequency.\n   * Measures in \"frames per check\", such that (given an FPS of 60):\n   * - A value of 1 will result in 60 dirty checks per second\n   * - A value of 6 will result in 10 dirty checks per second\n   */\n  framesPerCheck: 6,\n  /**\n   * Default: `false`\n   *\n   * Disable dirty-checking entirely. Properties that cannot be observed without dirty checking\n   * or an adapter, will simply not be observed.\n   */\n  disabled: false,\n  /**\n   * Default: `true`\n   *\n   * Log a warning message to the console if a property is being dirty-checked.\n   */\n  warn: true,\n  /**\n   * Default: `false`\n   *\n   * Throw an error if a property is being dirty-checked.\n   */\n  throw: false,\n  /**\n   * Resets all dirty checking settings to the framework's defaults.\n   */\n  resetToDefault(): void {\n    this.framesPerCheck = 6;\n    this.disabled = false;\n    this.warn = true;\n    this.throw = false;\n  }\n};\n\n/** @internal */\nexport class DirtyChecker {\n  private readonly tracked: DirtyCheckProperty[];\n\n  private elapsedFrames: number;\n\n  public constructor() {\n    this.elapsedFrames = 0;\n    this.tracked = [];\n  }\n\n  public createProperty(obj: IObservable, propertyName: string): DirtyCheckProperty {\n    if (DirtyCheckSettings.throw) {\n      throw Reporter.error(800); // TODO: create/organize error code\n    }\n    if (DirtyCheckSettings.warn) {\n      Reporter.write(801);\n    }\n    return new DirtyCheckProperty(this, obj, propertyName);\n  }\n\n  public addProperty(property: DirtyCheckProperty): void {\n    this.tracked.push(property);\n\n    if (this.tracked.length === 1) {\n      PLATFORM.ticker.add(this.check, this);\n    }\n  }\n\n  public removeProperty(property: DirtyCheckProperty): void {\n    this.tracked.splice(this.tracked.indexOf(property), 1);\n    if (this.tracked.length === 0) {\n      PLATFORM.ticker.remove(this.check, this);\n    }\n  }\n\n  public check(delta: number): void {\n    if (DirtyCheckSettings.disabled) {\n      return;\n    }\n    if (++this.elapsedFrames < DirtyCheckSettings.framesPerCheck) {\n      return;\n    }\n    this.elapsedFrames = 0;\n    const tracked = this.tracked;\n    const len = tracked.length;\n    let current: DirtyCheckProperty;\n    let i = 0;\n    for (; i < len; ++i) {\n      current = tracked[i];\n      if (current.isDirty()) {\n        current.flush(LifecycleFlags.fromTick);\n      }\n    }\n  }\n}\n\nconst slice = Array.prototype.slice;\n\nexport interface DirtyCheckProperty extends IBindingTargetObserver { }\n\n@propertyObserver()\nexport class DirtyCheckProperty implements DirtyCheckProperty {\n  public obj: IObservable;\n  public oldValue: unknown;\n  public propertyKey: string;\n\n  private readonly dirtyChecker: IDirtyChecker;\n\n  constructor(dirtyChecker: IDirtyChecker, obj: IObservable, propertyKey: string) {\n    if (Tracer.enabled) { Tracer.enter('DirtyCheckProperty', 'constructor', slice.call(arguments)); }\n    this.obj = obj;\n    this.propertyKey = propertyKey;\n\n    this.dirtyChecker = dirtyChecker;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public isDirty(): boolean {\n    return this.oldValue !== this.obj[this.propertyKey];\n  }\n\n  public flush(flags: LifecycleFlags): void {\n    const oldValue = this.oldValue;\n    const newValue = this.obj[this.propertyKey];\n\n    this.callSubscribers(newValue, oldValue, flags | LifecycleFlags.updateTargetInstance);\n\n    this.oldValue = newValue;\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.hasSubscribers()) {\n      this.oldValue = this.obj[this.propertyKey];\n      this.dirtyChecker.addProperty(this);\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    if (this.removeSubscriber(subscriber) && !this.hasSubscribers()) {\n      this.dirtyChecker.removeProperty(this);\n    }\n  }\n}\n","import { PLATFORM, Primitive, Tracer } from '@aurelia/kernel';\nimport { IAccessor, ISubscribable, MutationKind } from '../observation';\n\nconst slice = Array.prototype.slice;\n\nconst noop = PLATFORM.noop;\n\n// note: string.length is the only property of any primitive that is not a function,\n// so we can hardwire it to that and simply return undefined for anything else\n// note#2: a modified primitive constructor prototype would not work (and really, it shouldn't..)\nexport class PrimitiveObserver implements IAccessor, ISubscribable<MutationKind.instance> {\n  public getValue: () => undefined | number;\n  // removed the error reporter here because technically any primitive property that can get, can also set,\n  // but since that never serves any purpose (e.g. setting string.length doesn't throw but doesn't change the length either),\n  // we could best just leave this as a no-op and so don't need to store the propertyName\n  public setValue: () => void;\n  public subscribe: () => void;\n  public unsubscribe: () => void;\n  public dispose: () => void;\n  public $patch: () => void;\n\n  public doNotCache: boolean = true;\n  public obj: Primitive;\n\n  constructor(obj: Primitive, propertyKey: PropertyKey) {\n    if (Tracer.enabled) { Tracer.enter('PrimitiveObserver', 'constructor', slice.call(arguments)); }\n    // we don't need to store propertyName because only 'length' can return a useful value\n    if (propertyKey === 'length') {\n      // deliberately not checking for typeof string as users probably still want to know via an error that their string is undefined\n      this.obj = obj;\n      this.getValue = this.getStringLength;\n    } else {\n      this.getValue = this.returnUndefined;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  private getStringLength(): number {\n    return (this.obj as string).length;\n  }\n  private returnUndefined(): undefined {\n    return undefined;\n  }\n}\nPrimitiveObserver.prototype.setValue = noop;\nPrimitiveObserver.prototype.subscribe = noop;\nPrimitiveObserver.prototype.unsubscribe = noop;\nPrimitiveObserver.prototype.dispose = noop;\nPrimitiveObserver.prototype.$patch = noop;\n","import { Tracer } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport { IBindingTargetAccessor } from '../observation';\nimport { patchProperties, patchProperty } from './patch-properties';\n\nexport interface PropertyAccessor extends IBindingTargetAccessor<Record<string, unknown>, string> {}\nconst slice = Array.prototype.slice;\n\nexport class PropertyAccessor implements PropertyAccessor {\n  public obj: Record<string, unknown>;\n  public propertyKey: string;\n\n  constructor(obj: Record<string, unknown>, propertyKey: string) {\n    if (Tracer.enabled) { Tracer.enter('PropertyAccessor', 'constructor', slice.call(arguments)); }\n    this.obj = obj;\n    this.propertyKey = propertyKey;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public getValue(): unknown {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValue(value: unknown): void {\n    this.obj[this.propertyKey] = value;\n  }\n\n  public $patch(flags: LifecycleFlags): void {\n    patchProperty(this.obj, this.propertyKey, flags);\n  }\n}\n","import { DI, IContainer, InjectArray, IResolver, Primitive, Registration, Reporter } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport { ILifecycle } from '../lifecycle';\nimport {\n  AccessorOrObserver,\n  CollectionKind,\n  CollectionObserver,\n  IBindingContext,\n  IBindingTargetAccessor,\n  IBindingTargetObserver,\n  ICollectionObserver,\n  IObservable,\n  IObservedArray,\n  IObservedMap,\n  IObservedSet\n} from '../observation';\nimport { getArrayObserver } from './array-observer';\nimport { createComputedObserver } from './computed-observer';\nimport { IDirtyChecker } from './dirty-checker';\nimport { getMapObserver } from './map-observer';\nimport { PrimitiveObserver } from './primitive-observer';\nimport { PropertyAccessor } from './property-accessor';\nimport { ProxyObserver } from './proxy-observer';\nimport { getSetObserver } from './set-observer';\nimport { SetterObserver } from './setter-observer';\n\nconst toStringTag = Object.prototype.toString;\n\nexport interface IObjectObservationAdapter {\n  getObserver(flags: LifecycleFlags, object: unknown, propertyName: string, descriptor: PropertyDescriptor): IBindingTargetObserver;\n}\n\nexport interface IObserverLocator {\n  getObserver(flags: LifecycleFlags, obj: IObservable|IBindingContext, propertyName: string): AccessorOrObserver;\n  getAccessor(flags: LifecycleFlags, obj: IObservable, propertyName: string): IBindingTargetAccessor;\n  addAdapter(adapter: IObjectObservationAdapter): void;\n  getArrayObserver(flags: LifecycleFlags, observedArray: unknown[]): ICollectionObserver<CollectionKind.array>;\n  getMapObserver(flags: LifecycleFlags, observedMap: Map<unknown, unknown>): ICollectionObserver<CollectionKind.map>;\n  getSetObserver(flags: LifecycleFlags, observedSet: Set<unknown>): ICollectionObserver<CollectionKind.set>;\n}\n\nexport const IObserverLocator = DI.createInterface<IObserverLocator>('IObserverLocator').noDefault();\n\nexport interface ITargetObserverLocator {\n  getObserver(flags: LifecycleFlags, lifecycle: ILifecycle, observerLocator: IObserverLocator, obj: unknown, propertyName: string): IBindingTargetAccessor | IBindingTargetObserver;\n  overridesAccessor(flags: LifecycleFlags, obj: unknown, propertyName: string): boolean;\n  handles(flags: LifecycleFlags, obj: unknown): boolean;\n}\nexport const ITargetObserverLocator = DI.createInterface<ITargetObserverLocator>('ITargetObserverLocator').noDefault();\n\nexport interface ITargetAccessorLocator {\n  getAccessor(flags: LifecycleFlags, lifecycle: ILifecycle, obj: unknown, propertyName: string): IBindingTargetAccessor;\n  handles(flags: LifecycleFlags, obj: unknown): boolean;\n}\nexport const ITargetAccessorLocator = DI.createInterface<ITargetAccessorLocator>('ITargetAccessorLocator').noDefault();\n\nfunction getPropertyDescriptor(subject: object, name: string): PropertyDescriptor {\n  let pd = Object.getOwnPropertyDescriptor(subject, name);\n  let proto = Object.getPrototypeOf(subject);\n\n  while (pd === undefined && proto !== null) {\n    pd = Object.getOwnPropertyDescriptor(proto, name);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return pd;\n}\n\n/** @internal */\nexport class ObserverLocator implements IObserverLocator {\n  public static readonly inject: InjectArray = [ILifecycle, IDirtyChecker, ITargetObserverLocator, ITargetAccessorLocator];\n\n  private readonly adapters: IObjectObservationAdapter[];\n  private readonly dirtyChecker: IDirtyChecker;\n  private readonly lifecycle: ILifecycle;\n  private readonly targetObserverLocator: ITargetObserverLocator;\n  private readonly targetAccessorLocator: ITargetAccessorLocator;\n\n  constructor(\n    lifecycle: ILifecycle,\n    dirtyChecker: IDirtyChecker,\n    targetObserverLocator: ITargetObserverLocator,\n    targetAccessorLocator: ITargetAccessorLocator\n  ) {\n    this.adapters = [];\n    this.dirtyChecker = dirtyChecker;\n    this.lifecycle = lifecycle;\n    this.targetObserverLocator = targetObserverLocator;\n    this.targetAccessorLocator = targetAccessorLocator;\n  }\n\n  public static register(container: IContainer): IResolver<IObserverLocator> {\n    return Registration.singleton(IObserverLocator, this).register(container);\n  }\n\n  public getObserver(flags: LifecycleFlags, obj: IObservable|IBindingContext, propertyName: string): AccessorOrObserver {\n    if (flags & LifecycleFlags.proxyStrategy && typeof obj === 'object') {\n      return ProxyObserver.getOrCreate(obj, propertyName) as unknown as AccessorOrObserver; // TODO: fix typings (and ensure proper contracts ofc)\n    }\n    if (isBindingContext(obj)) {\n      return obj.getObservers(flags).getOrCreate(flags, obj, propertyName);\n    }\n    let observersLookup = obj.$observers;\n    let observer: AccessorOrObserver & { doNotCache?: boolean };\n\n    if (observersLookup && propertyName in observersLookup) {\n      return observersLookup[propertyName];\n    }\n\n    observer = this.createPropertyObserver(flags, obj, propertyName);\n\n    if (!observer.doNotCache) {\n      if (observersLookup === undefined) {\n        observersLookup = this.getOrCreateObserversLookup(obj);\n      }\n\n      observersLookup[propertyName] = observer;\n    }\n\n    return observer;\n  }\n\n  public addAdapter(adapter: IObjectObservationAdapter): void {\n    this.adapters.push(adapter);\n  }\n\n  public getAccessor(flags: LifecycleFlags, obj: IObservable, propertyName: string): IBindingTargetAccessor {\n    if (this.targetAccessorLocator.handles(flags, obj)) {\n      if (this.targetObserverLocator.overridesAccessor(flags, obj, propertyName)) {\n        return this.getObserver(flags, obj, propertyName);\n      }\n      return this.targetAccessorLocator.getAccessor(flags, this.lifecycle, obj, propertyName);\n    }\n\n    if (flags & LifecycleFlags.proxyStrategy) {\n      return ProxyObserver.getOrCreate(obj, propertyName) as unknown as AccessorOrObserver;\n    }\n    return new PropertyAccessor(obj, propertyName);\n  }\n\n  public getArrayObserver(flags: LifecycleFlags, observedArray: IObservedArray): ICollectionObserver<CollectionKind.array> {\n    return getArrayObserver(flags, this.lifecycle, observedArray);\n  }\n\n  public getMapObserver(flags: LifecycleFlags, observedMap: IObservedMap): ICollectionObserver<CollectionKind.map>  {\n    return getMapObserver(flags, this.lifecycle, observedMap);\n  }\n\n  public getSetObserver(flags: LifecycleFlags, observedSet: IObservedSet): ICollectionObserver<CollectionKind.set>  {\n    return getSetObserver(flags, this.lifecycle, observedSet);\n  }\n\n  private getOrCreateObserversLookup(obj: IObservable): Record<string, AccessorOrObserver | IBindingTargetObserver> {\n    return obj.$observers || this.createObserversLookup(obj);\n  }\n\n  private createObserversLookup(obj: IObservable): Record<string, IBindingTargetObserver> {\n    const value: Record<string, IBindingTargetObserver> = {};\n    if (!Reflect.defineProperty(obj, '$observers', {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: value\n    })) {\n      Reporter.write(0, obj);\n    }\n    return value;\n  }\n\n  private getAdapterObserver(flags: LifecycleFlags, obj: IObservable, propertyName: string, descriptor: PropertyDescriptor): IBindingTargetObserver | null {\n    for (let i = 0, ii = this.adapters.length; i < ii; i++) {\n      const adapter = this.adapters[i];\n      const observer = adapter.getObserver(flags, obj, propertyName, descriptor);\n      if (observer) {\n        return observer;\n      }\n    }\n    return null;\n  }\n\n  private createPropertyObserver(flags: LifecycleFlags, obj: IObservable, propertyName: string): AccessorOrObserver {\n    if (!(obj instanceof Object)) {\n      return new PrimitiveObserver(obj as unknown as Primitive, propertyName) as IBindingTargetAccessor;\n    }\n\n    let isNode = false;\n    if (this.targetObserverLocator.handles(flags, obj)) {\n      const observer = this.targetObserverLocator.getObserver(flags, this.lifecycle, this, obj, propertyName);\n      if (observer !== null) {\n        return observer;\n      }\n      if (observer !== null) {\n        return observer;\n      }\n      isNode = true;\n    }\n\n    const tag = toStringTag.call(obj);\n    switch (tag) {\n      case '[object Array]':\n        if (propertyName === 'length') {\n          return this.getArrayObserver(flags, obj as IObservedArray).getLengthObserver(flags);\n        }\n        return this.dirtyChecker.createProperty(obj, propertyName);\n      case '[object Map]':\n        if (propertyName === 'size') {\n          return this.getMapObserver(flags, obj as IObservedMap).getLengthObserver(flags);\n        }\n        return this.dirtyChecker.createProperty(obj, propertyName);\n      case '[object Set]':\n        if (propertyName === 'size') {\n          return this.getSetObserver(flags, obj as IObservedSet).getLengthObserver(flags);\n        }\n        return this.dirtyChecker.createProperty(obj, propertyName);\n    }\n\n    const descriptor = getPropertyDescriptor(obj, propertyName) as PropertyDescriptor & {\n      get: PropertyDescriptor['get'] & { getObserver(obj: IObservable): IBindingTargetObserver };\n    };\n\n    if (descriptor && (descriptor.get || descriptor.set)) {\n      if (descriptor.get && descriptor.get.getObserver) {\n        return descriptor.get.getObserver(obj);\n      }\n\n      // attempt to use an adapter before resorting to dirty checking.\n      const adapterObserver = this.getAdapterObserver(flags, obj, propertyName, descriptor);\n      if (adapterObserver) {\n        return adapterObserver;\n      }\n      if (isNode) {\n        // TODO: use MutationObserver\n        return this.dirtyChecker.createProperty(obj, propertyName);\n      }\n\n      return createComputedObserver(flags, this, this.dirtyChecker, this.lifecycle, obj, propertyName, descriptor);\n    }\n    return new SetterObserver(flags, obj, propertyName);\n  }\n}\n\ntype RepeatableCollection = IObservedMap | IObservedSet | IObservedArray | null | undefined | number;\n\nexport function getCollectionObserver(flags: LifecycleFlags, lifecycle: ILifecycle, collection: RepeatableCollection): CollectionObserver {\n  // If the collection is wrapped by a proxy then `$observer` will return the proxy observer instead of the collection observer, which is not what we want\n  // when we ask for getCollectionObserver\n  const rawCollection = collection instanceof Object ? ProxyObserver.getRawIfProxy(collection) : collection;\n  switch (toStringTag.call(collection)) {\n    case '[object Array]':\n      return getArrayObserver(flags, lifecycle, rawCollection as IObservedArray);\n    case '[object Map]':\n      return getMapObserver(flags, lifecycle, rawCollection as IObservedMap);\n    case '[object Set]':\n      return getSetObserver(flags, lifecycle, rawCollection as IObservedSet);\n  }\n  return null;\n}\n\nfunction isBindingContext(obj: unknown): obj is IBindingContext {\n  return (obj as IBindingContext).$synthetic === true;\n}\n","import { IIndexable, Tracer } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../flags';\nimport { IPropertyObserver } from '../observation';\nimport { propertyObserver } from './property-observer';\nimport { ProxyObserver } from './proxy-observer';\n\nconst slice = Array.prototype.slice;\n\nexport interface SelfObserver extends IPropertyObserver<IIndexable, string> {}\n\n@propertyObserver()\nexport class SelfObserver implements SelfObserver {\n  public readonly persistentFlags: LifecycleFlags;\n  public obj: object;\n  public propertyKey: string;\n  public currentValue: unknown;\n\n  private readonly callback: ((newValue: unknown, oldValue: unknown, flags: LifecycleFlags) => void) | null;\n\n  constructor(\n    flags: LifecycleFlags,\n    instance: object,\n    propertyName: string,\n    cbName: string\n  ) {\n    if (Tracer.enabled) { Tracer.enter('SelfObserver', 'constructor', slice.call(arguments)); }\n    this.persistentFlags = flags & LifecycleFlags.persistentBindingFlags;\n    if (ProxyObserver.isProxy(instance)) {\n      instance.$observer.subscribe(this, propertyName);\n      this.obj = instance.$raw;\n    } else {\n      this.obj = instance;\n    }\n    this.propertyKey = propertyName;\n    this.currentValue = this.obj[propertyName];\n    this.callback = this.obj[cbName] === undefined ? null : this.obj[cbName];\n    if (flags & LifecycleFlags.patchStrategy) {\n      this.getValue = this.getValueDirect;\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public handleChange(newValue: unknown, oldValue: unknown, flags: LifecycleFlags): void {\n    this.setValue(newValue, flags);\n  }\n\n  public getValue(): unknown {\n    return this.currentValue;\n  }\n  public getValueDirect(): unknown {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValue(newValue: unknown, flags: LifecycleFlags): void {\n    if (newValue !== this.currentValue || (flags & LifecycleFlags.patchStrategy) > 0) {\n      if ((flags & LifecycleFlags.fromBind) === 0) {\n        const oldValue = this.currentValue;\n        flags |= this.persistentFlags;\n        this.currentValue = newValue;\n        this.callSubscribers(newValue, oldValue, flags | LifecycleFlags.allowPublishRoundtrip);\n        if (this.callback !== null) {\n          this.callback.call(this.obj, newValue, oldValue, flags);\n        }\n      } else {\n        this.currentValue = newValue;\n      }\n    }\n  }\n  public $patch(flags: LifecycleFlags): void {\n    const oldValue = this.currentValue;\n    const newValue = this.obj[this.propertyKey];\n    flags |= this.persistentFlags;\n    this.currentValue = newValue;\n    this.callSubscribers(newValue, oldValue, flags);\n    if (this.callback !== null) {\n      this.callback.call(this.obj, newValue, oldValue, flags);\n    }\n  }\n}\n","import { IRegistry } from '@aurelia/kernel';\nimport { Binding } from '../../binding/binding';\nimport { BindingMode, LifecycleFlags } from '../../flags';\nimport { IScope } from '../../observation';\nimport { BindingBehaviorResource } from '../binding-behavior';\n\nconst { oneTime, toView, fromView, twoWay } = BindingMode;\n\nexport type WithMode = { mode: BindingMode; originalMode?: BindingMode };\n\nexport abstract class BindingModeBehavior {\n  private readonly mode: BindingMode;\n\n  constructor(mode: BindingMode) {\n    this.mode = mode;\n  }\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: Binding & WithMode): void {\n    binding.originalMode = binding.mode;\n    binding.mode = this.mode;\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: Binding & WithMode): void {\n    binding.mode = binding.originalMode;\n    binding.originalMode = null;\n  }\n}\n\nexport class OneTimeBindingBehavior extends BindingModeBehavior {\n  public static register: IRegistry['register'];\n\n  constructor() {\n    super(oneTime);\n  }\n}\nBindingBehaviorResource.define('oneTime', OneTimeBindingBehavior);\n\nexport class ToViewBindingBehavior extends BindingModeBehavior {\n  public static register: IRegistry['register'];\n\n  constructor() {\n    super(toView);\n  }\n}\nBindingBehaviorResource.define('toView', ToViewBindingBehavior);\n\nexport class FromViewBindingBehavior extends BindingModeBehavior {\n  public static register: IRegistry['register'];\n\n  constructor() {\n    super(fromView);\n  }\n}\nBindingBehaviorResource.define('fromView', FromViewBindingBehavior);\n\nexport class TwoWayBindingBehavior extends BindingModeBehavior {\n  public static register: IRegistry['register'];\n\n  constructor() {\n    super(twoWay);\n  }\n}\nBindingBehaviorResource.define('twoWay', TwoWayBindingBehavior);\n","import { IRegistry, PLATFORM } from '@aurelia/kernel';\nimport { Binding } from '../../binding/binding';\nimport { BindingMode, LifecycleFlags } from '../../flags';\nimport { IBinding } from '../../lifecycle';\nimport { IScope } from '../../observation';\nimport { BindingBehaviorResource } from '../binding-behavior';\n\nexport type DebounceableBinding = IBinding & {\n  debouncedMethod: ((newValue: unknown, oldValue: unknown, flags: LifecycleFlags) => void) & { originalName: string };\n  debounceState: {\n    callContextToDebounce: LifecycleFlags;\n    delay: number;\n    timeoutId: number;\n    oldValue: unknown;\n  };\n};\n\nconst unset = {};\n\n/** @internal */\nexport function debounceCallSource(this: DebounceableBinding, newValue: unknown, oldValue: unknown, flags: LifecycleFlags): void {\n  const state = this.debounceState;\n  PLATFORM.global.clearTimeout(state.timeoutId);\n  state.timeoutId = PLATFORM.global.setTimeout(() => { this.debouncedMethod(newValue, oldValue, flags); }, state.delay);\n}\n\n/** @internal */\nexport function debounceCall(this: DebounceableBinding, newValue: unknown, oldValue: unknown, flags: LifecycleFlags): void {\n  const state = this.debounceState;\n  PLATFORM.global.clearTimeout(state.timeoutId);\n  if (!(flags & state.callContextToDebounce)) {\n    state.oldValue = unset;\n    this.debouncedMethod(newValue, oldValue, flags);\n    return;\n  }\n  if (state.oldValue === unset) {\n    state.oldValue = oldValue;\n  }\n  const timeoutId = PLATFORM.global.setTimeout(\n    () => {\n      const ov = state.oldValue;\n      state.oldValue = unset;\n      this.debouncedMethod(newValue, ov, flags);\n    },\n    state.delay\n  );\n  state.timeoutId = timeoutId;\n}\n\nconst fromView = BindingMode.fromView;\n\nexport class DebounceBindingBehavior {\n  public static register: IRegistry['register'];\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: DebounceableBinding, delay: number = 200): void {\n    let methodToDebounce;\n    let callContextToDebounce;\n    let debouncer;\n\n    if (binding instanceof Binding) {\n      methodToDebounce = 'handleChange';\n      debouncer = debounceCall;\n      callContextToDebounce = binding.mode & fromView ? LifecycleFlags.updateSourceExpression : LifecycleFlags.updateTargetInstance;\n    } else {\n      methodToDebounce = 'callSource';\n      debouncer = debounceCallSource;\n      callContextToDebounce = LifecycleFlags.updateTargetInstance;\n    }\n\n    // stash the original method and it's name.\n    // note: a generic name like \"originalMethod\" is not used to avoid collisions\n    // with other binding behavior types.\n    binding.debouncedMethod = binding[methodToDebounce];\n    binding.debouncedMethod.originalName = methodToDebounce;\n\n    // replace the original method with the debouncing version.\n    binding[methodToDebounce] = debouncer;\n\n    // create the debounce state.\n    binding.debounceState = {\n      callContextToDebounce,\n      delay,\n      timeoutId: 0,\n      oldValue: unset\n    };\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: DebounceableBinding): void {\n    // restore the state of the binding.\n    const methodToRestore = binding.debouncedMethod.originalName;\n    binding[methodToRestore] = binding.debouncedMethod;\n    binding.debouncedMethod = null;\n    PLATFORM.global.clearTimeout(binding.debounceState.timeoutId);\n    binding.debounceState = null;\n  }\n}\nBindingBehaviorResource.define('debounce', DebounceBindingBehavior);\n","import { InjectArray, IRegistry, Reporter } from '@aurelia/kernel';\nimport { Binding } from '../../binding/binding';\nimport { LifecycleFlags } from '../../flags';\nimport { IScope } from '../../observation';\nimport { ISignaler } from '../../observation/signaler';\nimport { BindingBehaviorResource } from '../binding-behavior';\n\nexport type SignalableBinding = Binding & {\n  signal: string | string[];\n};\n\nexport class SignalBindingBehavior {\n  public static readonly inject: InjectArray = [ISignaler];\n\n  public static register: IRegistry['register'];\n\n  private readonly signaler: ISignaler;\n\n  constructor(signaler: ISignaler) {\n    this.signaler = signaler;\n  }\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: SignalableBinding, ...args: string[]): void {\n    if (!binding.updateTarget) {\n      throw Reporter.error(11);\n    }\n\n    if (arguments.length === 4) {\n      const name = args[0];\n      this.signaler.addSignalListener(name, binding);\n      binding.signal = name;\n    } else if (arguments.length > 4) {\n      const names = Array.prototype.slice.call(arguments, 3);\n      let i = names.length;\n\n      while (i--) {\n        const name = names[i];\n        this.signaler.addSignalListener(name, binding);\n      }\n\n      binding.signal = names;\n    } else {\n      throw Reporter.error(12);\n    }\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: SignalableBinding): void {\n    const name = binding.signal;\n    binding.signal = null;\n\n    if (Array.isArray(name)) {\n      const names = name;\n      let i = names.length;\n\n      while (i--) {\n        this.signaler.removeSignalListener(names[i], binding);\n      }\n    } else {\n      this.signaler.removeSignalListener(name, binding);\n    }\n  }\n}\nBindingBehaviorResource.define('signal', SignalBindingBehavior);\n","import { IRegistry, PLATFORM } from '@aurelia/kernel';\nimport { Binding } from '../../binding/binding';\nimport { BindingMode, LifecycleFlags } from '../../flags';\nimport { IBinding } from '../../lifecycle';\nimport { IScope } from '../../observation';\nimport { BindingBehaviorResource } from '../binding-behavior';\n\nexport type ThrottleableBinding = IBinding & {\n  throttledMethod: ((value: unknown) => unknown) & { originalName: string };\n  throttleState: {\n    delay: number;\n    timeoutId: number;\n    last: number;\n    newValue?: unknown;\n  };\n};\n\n/** @internal */\nexport function throttle(this: ThrottleableBinding, newValue: unknown): void {\n  const state = this.throttleState;\n  const elapsed = +new Date() - state.last;\n\n  if (elapsed >= state.delay) {\n    PLATFORM.global.clearTimeout(state.timeoutId);\n    state.timeoutId = -1;\n    state.last = +new Date();\n    this.throttledMethod(newValue);\n    return;\n  }\n\n  state.newValue = newValue;\n\n  if (state.timeoutId === -1) {\n    const timeoutId = PLATFORM.global.setTimeout(\n      () => {\n        state.timeoutId = -1;\n        state.last = +new Date();\n        this.throttledMethod(state.newValue);\n      },\n      state.delay - elapsed\n    );\n    state.timeoutId = timeoutId;\n  }\n}\n\nexport class ThrottleBindingBehavior {\n  public static register: IRegistry['register'];\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: ThrottleableBinding, delay: number = 200): void {\n    let methodToThrottle: string;\n\n    if (binding instanceof Binding) {\n      if (binding.mode === BindingMode.twoWay) {\n        methodToThrottle = 'updateSource';\n      } else {\n        methodToThrottle = 'updateTarget';\n      }\n    } else {\n      methodToThrottle = 'callSource';\n    }\n\n    // stash the original method and it's name.\n    // note: a generic name like \"originalMethod\" is not used to avoid collisions\n    // with other binding behavior types.\n    binding.throttledMethod = binding[methodToThrottle];\n    binding.throttledMethod.originalName = methodToThrottle;\n\n    // replace the original method with the throttling version.\n    binding[methodToThrottle] = throttle;\n\n    // create the throttle state.\n    binding.throttleState = {\n      delay: delay,\n      last: 0,\n      timeoutId: -1\n    };\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: ThrottleableBinding): void {\n    // restore the state of the binding.\n    const methodToRestore = binding.throttledMethod.originalName;\n    binding[methodToRestore] = binding.throttledMethod;\n    binding.throttledMethod = null;\n    PLATFORM.global.clearTimeout(binding.throttleState.timeoutId);\n    binding.throttleState = null;\n  }\n}\nBindingBehaviorResource.define('throttle', ThrottleBindingBehavior);\n","import { Constructable, PLATFORM, Reporter } from '@aurelia/kernel';\nimport { BindableSource, IBindableDescription } from '../definitions';\nimport { BindingMode } from '../flags';\n\n/**\n * Decorator: Specifies custom behavior for a bindable property.\n * @param config The overrides\n */\nexport function bindable(config?: BindableSource): BindableDecorator;\n/**\n * Decorator: Specifies a bindable property on a class.\n * @param prop The property name\n */\nexport function bindable(prop: string): ClassDecorator;\n/**\n * Decorator: Specifies a bindable property on a class.\n * @param target The class\n * @param prop The property name\n */\nexport function bindable<T extends InstanceType<Constructable & Partial<WithBindables>>>(target: T, prop: string): void;\nexport function bindable<T extends InstanceType<Constructable & Partial<WithBindables>>>(configOrTarget?: BindableSource | T, prop?: string): void | BindableDecorator | ClassDecorator {\n  let config: IBindableDescription;\n\n  const decorator = function decorate($target: T, $prop: string): void {\n    if (arguments.length > 1) {\n      // Non invocation:\n      // - @bindable\n      // Invocation with or w/o opts:\n      // - @bindable()\n      // - @bindable({...opts})\n      config.property = $prop;\n    }\n    Bindable.for($target.constructor as Partial<WithBindables>).add(config);\n  };\n  if (arguments.length > 1) {\n    // Non invocation:\n    // - @bindable\n    config = {};\n    decorator(configOrTarget as T, prop);\n    return;\n  } else if (typeof configOrTarget === 'string') {\n    // ClassDecorator\n    // - @bindable('bar')\n    // Direct call:\n    // - @bindable('bar')(Foo)\n    config = {};\n    return decorator as BindableDecorator;\n  }\n\n  // Invocation with or w/o opts:\n  // - @bindable()\n  // - @bindable({...opts})\n  config = (configOrTarget || {}) as IBindableDescription;\n  return decorator as BindableDecorator;\n}\n\ninterface IFluentBindableBuilder {\n  add(config: IBindableDescription): IFluentBindableBuilder;\n  add(propertyName: string): IFluentBindableBuilder;\n  get(): Record<string, IBindableDescription>;\n}\n\nexport const Bindable = {\n  for<T extends Partial<WithBindables>>(obj: T): IFluentBindableBuilder {\n    const builder: IFluentBindableBuilder = {\n      add(nameOrConfig: string | IBindableDescription): typeof builder {\n        let description: IBindableDescription;\n        if (nameOrConfig !== null && typeof nameOrConfig === 'object') {\n          description = nameOrConfig;\n        } else if (typeof nameOrConfig === 'string') {\n          description = {\n            property: nameOrConfig\n          };\n        }\n        const prop = description.property;\n        if (!prop) {\n          throw Reporter.error(0); // TODO: create error code (must provide a property name)\n        }\n        if (!description.attribute) {\n          description.attribute = PLATFORM.kebabCase(prop);\n        }\n        if (!description.callback) {\n          description.callback = `${prop}Changed`;\n        }\n        if (description.mode === undefined) {\n          description.mode = BindingMode.toView;\n        }\n        obj.bindables[prop] = description;\n        return this;\n      },\n      get(): Record<string, IBindableDescription> {\n        return obj.bindables as Record<string, IBindableDescription>;\n      }\n    };\n    if (obj.bindables === undefined) {\n      obj.bindables = {};\n    } else if (Array.isArray(obj.bindables)) {\n      const props = obj.bindables;\n      obj.bindables = {};\n      props.forEach(builder.add);\n    }\n    return builder;\n  }\n};\n\nexport type WithBindables = { bindables: Record<string, IBindableDescription> | string[] };\nexport type BindableDecorator = <T extends InstanceType<Constructable & Partial<WithBindables>>>\n  (target: T, prop: string) => void;\n","import {\n  Constructable,\n  DI,\n  Immutable,\n  IRegistry,\n  IResourceDefinition,\n  Omit,\n  PLATFORM,\n  ResourceDescription,\n  ResourcePartDescription,\n  Writable\n} from '@aurelia/kernel';\nimport { IForOfStatement, IInterpolationExpression, IsBindingBehavior } from './ast';\nimport { BindingMode, BindingStrategy, ensureValidStrategy } from './flags';\nimport { CustomElementHost, ICustomElement } from './resources/custom-element';\nimport { Bindable } from './templating/bindable';\n\n/** @internal */\nexport const customElementName = 'custom-element';\n/** @internal */\nexport function customElementKey(name: string): string {\n  return `${customElementName}:${name}`;\n}\n/** @internal */\nexport function customElementBehavior(node: unknown): ICustomElement | null {\n  return (node as CustomElementHost).$customElement === undefined ? null : (node as CustomElementHost).$customElement;\n}\n\n/** @internal */\nexport const customAttributeName = 'custom-attribute';\n/** @internal */\nexport function customAttributeKey(name: string): string {\n  return `${customAttributeName}:${name}`;\n}\n\nexport type IElementHydrationOptions = { parts?: Record<string, TemplateDefinition> };\n\nexport type BindableSource = Omit<IBindableDescription, 'property'>;\n\nexport interface IBindableDescription {\n  mode?: BindingMode;\n  callback?: string;\n  attribute?: string;\n  property?: string;\n}\n\n/**\n * TargetedInstructionType enum values become the property names for the associated renderers when they are injected\n * into the `Renderer`.\n *\n * Additional instruction types can be added as long as they are 2 characters long and do not clash with existing ones.\n *\n * By convention, the instruction types for a particular runtime start with the same first letter, and the second letter\n * starts counting from letter `a`. The standard runtime instruction types all start with the letter `r`.\n */\nexport const enum TargetedInstructionType {\n  hydrateElement = 'ra',\n  hydrateAttribute = 'rb',\n  hydrateTemplateController = 'rc',\n  hydrateLetElement = 'rd',\n  setProperty = 're',\n  interpolation = 'rf',\n  propertyBinding = 'rg',\n  callBinding = 'rh',\n  letBinding = 'ri',\n  refBinding = 'rj',\n  iteratorBinding = 'rk',\n}\n\nexport interface IBuildInstruction {\n  required: boolean;\n  compiler?: string;\n}\n\nexport interface ITemplateDefinition extends IResourceDefinition {\n  cache?: '*' | number;\n  template?: unknown;\n  instructions?: ITargetedInstruction[][];\n  dependencies?: IRegistry[];\n  build?: IBuildInstruction;\n  surrogates?: ITargetedInstruction[];\n  bindables?: Record<string, IBindableDescription> | string[];\n  containerless?: boolean;\n  shadowOptions?: { mode: 'open' | 'closed' };\n  hasSlots?: boolean;\n  strategy?: BindingStrategy;\n}\n\nexport type TemplateDefinition = ResourceDescription<ITemplateDefinition>;\n\nexport type TemplatePartDefinitions = Record<string, ResourcePartDescription<ITemplateDefinition>>;\nexport type BindableDefinitions = Record<string, Immutable<IBindableDescription>>;\n\nexport interface IAttributeDefinition extends IResourceDefinition {\n  defaultBindingMode?: BindingMode;\n  aliases?: string[];\n  isTemplateController?: boolean;\n  hasDynamicOptions?: boolean;\n  bindables?: Record<string, IBindableDescription> | string[];\n  strategy?: BindingStrategy;\n}\n\nexport type AttributeDefinition = Immutable<Required<IAttributeDefinition>> | null;\n\nexport type InstructionTypeName = string;\n\nexport const ITargetedInstruction = DI.createInterface<ITargetedInstruction>('createInterface').noDefault();\nexport interface ITargetedInstruction {\n  type: InstructionTypeName;\n}\n\nexport type NodeInstruction =\n  IHydrateElementInstruction |\n  IHydrateTemplateController |\n  IHydrateLetElementInstruction;\n\nexport type AttributeInstruction =\n  IInterpolationInstruction |\n  IPropertyBindingInstruction |\n  IIteratorBindingInstruction |\n  ICallBindingInstruction |\n  IRefBindingInstruction |\n  ISetPropertyInstruction |\n  ILetBindingInstruction |\n  IHydrateAttributeInstruction;\n\nexport type TargetedInstruction = NodeInstruction | AttributeInstruction;\n\n// TODO: further improve specificity and integrate with the definitions;\nexport type InstructionRow = [TargetedInstruction, ...AttributeInstruction[]];\n\nexport function isTargetedInstruction(value: unknown): value is TargetedInstruction {\n  const type = (value as { type?: string }).type;\n  return typeof type === 'string' && type.length === 2;\n}\n\nexport interface IInterpolationInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.interpolation;\n  from: string | IInterpolationExpression;\n  to: string;\n}\n\nexport interface IPropertyBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.propertyBinding;\n  mode: BindingMode;\n  from: string | IsBindingBehavior;\n  to: string;\n  oneTime?: boolean;\n}\n\nexport interface IIteratorBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.iteratorBinding;\n  from: string | IForOfStatement;\n  to: string;\n}\n\nexport interface ICallBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.callBinding;\n  from: string | IsBindingBehavior;\n  to: string;\n}\n\nexport interface IRefBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.refBinding;\n  from: string | IsBindingBehavior;\n}\n\nexport interface ISetPropertyInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.setProperty;\n  value: unknown;\n  to: string;\n}\n\nexport interface IHydrateElementInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.hydrateElement;\n  res: string;\n  instructions: ITargetedInstruction[];\n  parts?: Record<string, ITemplateDefinition>;\n}\n\nexport interface IHydrateAttributeInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.hydrateAttribute;\n  res: string;\n  instructions: ITargetedInstruction[];\n}\n\nexport interface IHydrateTemplateController extends ITargetedInstruction {\n  type: TargetedInstructionType.hydrateTemplateController;\n  res: string;\n  instructions: ITargetedInstruction[];\n  def: ITemplateDefinition;\n  link?: boolean;\n}\n\nexport interface IHydrateLetElementInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.hydrateLetElement;\n  instructions: ILetBindingInstruction[];\n  toViewModel: boolean;\n}\n\nexport interface ILetBindingInstruction extends ITargetedInstruction {\n  type: TargetedInstructionType.letBinding;\n  from: string | IsBindingBehavior | IInterpolationExpression;\n  to: string;\n}\n\n/** @internal */\nexport const buildRequired: IBuildInstruction = Object.freeze({\n  required: true,\n  compiler: 'default'\n});\n\nconst buildNotRequired: IBuildInstruction = Object.freeze({\n  required: false,\n  compiler: 'default'\n});\n\n// Note: this is a little perf thing; having one predefined class with the properties always\n// assigned in the same order ensures the browser can keep reusing the same generated hidden\n// class\nclass DefaultTemplateDefinition implements Required<ITemplateDefinition> {\n  public name: ITemplateDefinition['name'];\n  public cache: ITemplateDefinition['cache'];\n  public template: ITemplateDefinition['template'];\n  public instructions: ITemplateDefinition['instructions'];\n  public dependencies: ITemplateDefinition['dependencies'];\n  public build: ITemplateDefinition['build'];\n  public surrogates: ITemplateDefinition['surrogates'];\n  public bindables: ITemplateDefinition['bindables'];\n  public containerless: ITemplateDefinition['containerless'];\n  public shadowOptions: ITemplateDefinition['shadowOptions'];\n  public hasSlots: ITemplateDefinition['hasSlots'];\n  public strategy: ITemplateDefinition['strategy'];\n\n  constructor() {\n    this.name = 'unnamed';\n    this.template = null;\n    this.cache = 0;\n    this.build = buildNotRequired;\n    this.bindables = PLATFORM.emptyObject;\n    this.instructions = PLATFORM.emptyArray as this['instructions'];\n    this.dependencies = PLATFORM.emptyArray as this['dependencies'];\n    this.surrogates = PLATFORM.emptyArray as this['surrogates'];\n    this.containerless = false;\n    this.shadowOptions = null;\n    this.hasSlots = false;\n    this.strategy = BindingStrategy.getterSetter;\n  }\n}\n\nconst templateDefinitionAssignables = [\n  'name',\n  'template',\n  'cache',\n  'build',\n  'containerless',\n  'shadowOptions',\n  'hasSlots'\n];\n\nconst templateDefinitionArrays = [\n  'instructions',\n  'dependencies',\n  'surrogates'\n];\n\nexport type CustomElementConstructor = Constructable & {\n  containerless?: TemplateDefinition['containerless'];\n  shadowOptions?: TemplateDefinition['shadowOptions'];\n  bindables?: TemplateDefinition['bindables'];\n};\n\nexport function buildTemplateDefinition(\n  ctor: CustomElementConstructor,\n  name: string): TemplateDefinition;\nexport function buildTemplateDefinition(\n  ctor: null,\n  def: Immutable<ITemplateDefinition>): TemplateDefinition;\nexport function buildTemplateDefinition(\n  ctor: CustomElementConstructor | null,\n  nameOrDef: string | Immutable<ITemplateDefinition>): TemplateDefinition;\n// tslint:disable-next-line:parameters-max-number\nexport function buildTemplateDefinition(\n  ctor: CustomElementConstructor | null,\n  name: string | null,\n  template: unknown,\n  cache?: number | '*' | null,\n  build?: IBuildInstruction | boolean | null,\n  bindables?: Record<string, IBindableDescription> | null,\n  instructions?: ReadonlyArray<ReadonlyArray<ITargetedInstruction>> | null,\n  dependencies?: ReadonlyArray<unknown> | null,\n  surrogates?: ReadonlyArray<ITargetedInstruction> | null,\n  containerless?: boolean | null,\n  shadowOptions?: { mode: 'open' | 'closed' } | null,\n  hasSlots?: boolean | null,\n  strategy?: BindingStrategy | null): TemplateDefinition;\n// tslint:disable-next-line:parameters-max-number // TODO: Reduce complexity (currently at 64)\nexport function buildTemplateDefinition(\n  ctor: CustomElementConstructor | null,\n  nameOrDef: string | Immutable<ITemplateDefinition> | null,\n  template?: unknown | null,\n  cache?: number | '*' | null,\n  build?: IBuildInstruction | boolean | null,\n  bindables?: Record<string, IBindableDescription> | null,\n  instructions?: ReadonlyArray<ReadonlyArray<ITargetedInstruction>> | null,\n  dependencies?: ReadonlyArray<IRegistry> | null,\n  surrogates?: ReadonlyArray<ITargetedInstruction> | null,\n  containerless?: boolean | null,\n  shadowOptions?: { mode: 'open' | 'closed' } | null,\n  hasSlots?: boolean | null,\n  strategy?: BindingStrategy | null): TemplateDefinition {\n\n  const def = new DefaultTemplateDefinition();\n\n  // all cases fall through intentionally\n  const argLen = arguments.length;\n  switch (argLen) {\n    case 13: if (strategy !== null) def.strategy = ensureValidStrategy(strategy);\n    case 12: if (hasSlots !== null) def.hasSlots = hasSlots;\n    case 11: if (shadowOptions !== null) def.shadowOptions = shadowOptions;\n    case 10: if (containerless !== null) def.containerless = containerless;\n    case 9: if (surrogates !== null) def.surrogates = PLATFORM.toArray(surrogates);\n    case 8: if (dependencies !== null) def.dependencies = PLATFORM.toArray(dependencies);\n    case 7: if (instructions !== null) def.instructions = PLATFORM.toArray(instructions) as ITargetedInstruction[][];\n    case 6: if (bindables !== null) def.bindables = { ...bindables };\n    case 5: if (build !== null) def.build = build === true ? buildRequired : build === false ? buildNotRequired : { ...build };\n    case 4: if (cache !== null) def.cache = cache;\n    case 3: if (template !== null) def.template = template;\n    case 2:\n      if (ctor !== null) {\n        if (ctor['bindables']) {\n          def.bindables = Bindable.for(ctor as unknown as {}).get();\n        }\n        if (ctor['containerless']) {\n          def.containerless = ctor.containerless;\n        }\n        if (ctor['shadowOptions']) {\n          def.shadowOptions = ctor.shadowOptions as unknown as { mode: 'open' | 'closed' };\n        }\n      }\n      if (typeof nameOrDef === 'string') {\n        if (nameOrDef.length > 0) {\n          def.name = nameOrDef;\n        }\n      } else if (nameOrDef !== null) {\n        def.strategy = ensureValidStrategy(nameOrDef.strategy);\n        templateDefinitionAssignables.forEach(prop => {\n          if (nameOrDef[prop]) {\n            def[prop] = nameOrDef[prop];\n          }\n        });\n        templateDefinitionArrays.forEach(prop => {\n          if (nameOrDef[prop]) {\n            def[prop] = PLATFORM.toArray(nameOrDef[prop]);\n          }\n        });\n        if (nameOrDef['bindables']) {\n          if (def.bindables === PLATFORM.emptyObject) {\n            def.bindables = Bindable.for(nameOrDef as unknown as {}).get();\n          } else {\n            Object.assign(def.bindables, nameOrDef.bindables);\n          }\n        }\n      }\n  }\n\n  // special handling for invocations that quack like a @customElement decorator\n  if (argLen === 2 && ctor !== null && (typeof nameOrDef === 'string' || !('build' in nameOrDef))) {\n    def.build = buildRequired;\n  }\n\n  return def;\n}\n","import { Profiler, Tracer, Writable } from '@aurelia/kernel';\nimport { Hooks, LifecycleFlags, State } from '../flags';\nimport { IComponent, ILifecycleHooks, IMountableComponent, IRenderable, IView } from '../lifecycle';\nimport { ICustomElement } from '../resources/custom-element';\n\ninterface IAttachable extends IRenderable, ILifecycleHooks, IComponent {\n  constructor: {\n    description?: { name: string };\n    name: string;\n  };\n}\n\nconst slice = Array.prototype.slice;\n\nconst { enter, leave } = Profiler.createTimer('AttachLifecycle');\n\n/** @internal */\n// tslint:disable-next-line:no-ignored-initial-value\nexport function $attachAttribute(this: Writable<IAttachable>, flags: LifecycleFlags): void {\n  if (Profiler.enabled) { enter(); }\n  if (Tracer.enabled) { Tracer.enter(this.constructor.description && this.constructor.description.name || this.constructor.name, '$attach', slice.call(arguments)); }\n  if (this.$state & State.isAttached) {\n    if (Profiler.enabled) { leave(); }\n    if (Tracer.enabled) { Tracer.leave(); }\n    return;\n  }\n  const lifecycle = this.$lifecycle;\n  lifecycle.beginAttach();\n  // add isAttaching flag\n  this.$state |= State.isAttaching;\n  flags |= LifecycleFlags.fromAttach;\n\n  const hooks = this.$hooks;\n\n  if (hooks & Hooks.hasAttaching) {\n    this.attaching(flags);\n  }\n\n  // add isAttached flag, remove isAttaching flag\n  this.$state |= State.isAttached;\n  this.$state &= ~State.isAttaching;\n\n  if (hooks & Hooks.hasAttached) {\n    lifecycle.enqueueAttached(this as Required<typeof this>);\n  }\n  lifecycle.endAttach(flags);\n  if (Profiler.enabled) { leave(); }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\n// tslint:disable-next-line:no-ignored-initial-value\nexport function $attachElement(this: Writable<IAttachable & IMountableComponent>, flags: LifecycleFlags): void {\n  if (Profiler.enabled) { enter(); }\n  if (Tracer.enabled) { Tracer.enter(this.constructor.description && this.constructor.description.name || this.constructor.name, '$attach', slice.call(arguments)); }\n  if (this.$state & State.isAttached) {\n    if (Profiler.enabled) { leave(); }\n    if (Tracer.enabled) { Tracer.leave(); }\n    return;\n  }\n  const lifecycle = this.$lifecycle;\n  lifecycle.beginAttach();\n  // add isAttaching flag\n  this.$state |= State.isAttaching;\n  flags |= LifecycleFlags.fromAttach;\n\n  const hooks = this.$hooks;\n\n  if (hooks & Hooks.hasAttaching) {\n    this.attaching(flags);\n  }\n\n  let current = this.$componentHead;\n  while (current !== null) {\n    current.$attach(flags);\n    current = current.$nextComponent;\n  }\n\n  lifecycle.enqueueMount(this);\n\n  // add isAttached flag, remove isAttaching flag\n  this.$state |= State.isAttached;\n  this.$state &= ~State.isAttaching;\n\n  if (hooks & Hooks.hasAttached) {\n    lifecycle.enqueueAttached(this as Required<typeof this>);\n  }\n  lifecycle.endAttach(flags);\n  if (Profiler.enabled) { leave(); }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $attachView(this: Writable<IAttachable & IMountableComponent>, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter('IView', '$attach', slice.call(arguments)); }\n  if (this.$state & State.isAttached) {\n    if (Tracer.enabled) { Tracer.leave(); }\n    return;\n  }\n  // add isAttaching flag\n  this.$state |= State.isAttaching;\n  flags |= LifecycleFlags.fromAttach;\n\n  let current = this.$componentHead;\n  while (current !== null) {\n    current.$attach(flags);\n    current = current.$nextComponent;\n  }\n\n  this.$lifecycle.enqueueMount(this);\n\n  // add isAttached flag, remove isAttaching flag\n  this.$state |= State.isAttached;\n  this.$state &= ~State.isAttaching;\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\n// tslint:disable-next-line:no-ignored-initial-value\nexport function $detachAttribute(this: Writable<IAttachable>, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter(this.constructor.description && this.constructor.description.name || this.constructor.name, '$detach', slice.call(arguments)); }\n  if (this.$state & State.isAttached) {\n    const lifecycle = this.$lifecycle;\n    lifecycle.beginDetach();\n    // add isDetaching flag\n    this.$state |= State.isDetaching;\n    flags |= LifecycleFlags.fromDetach;\n\n    const hooks = this.$hooks;\n    if (hooks & Hooks.hasDetaching) {\n      this.detaching(flags);\n    }\n\n    // remove isAttached and isDetaching flags\n    this.$state &= ~(State.isAttached | State.isDetaching);\n\n    if (hooks & Hooks.hasDetached) {\n      lifecycle.enqueueDetached(this as Required<typeof this>);\n    }\n    lifecycle.endDetach(flags);\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\n// tslint:disable-next-line:no-ignored-initial-value\nexport function $detachElement(this: Writable<IAttachable & IMountableComponent>, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter(this.constructor.description && this.constructor.description.name || this.constructor.name, '$detach', slice.call(arguments)); }\n  if (this.$state & State.isAttached) {\n    const lifecycle = this.$lifecycle;\n    lifecycle.beginDetach();\n    // add isDetaching flag\n    this.$state |= State.isDetaching;\n    flags |= LifecycleFlags.fromDetach;\n\n    // Only unmount if either:\n    // - No parent view/element is queued for unmount yet, or\n    // - Aurelia is stopping (in which case all nodes need to return to their fragments for a clean mount on next start)\n    if (((flags & LifecycleFlags.parentUnmountQueued) ^ LifecycleFlags.parentUnmountQueued) | (flags & LifecycleFlags.fromStopTask)) {\n      lifecycle.enqueueUnmount(this);\n      flags |= LifecycleFlags.parentUnmountQueued;\n    }\n\n    const hooks = this.$hooks;\n    if (hooks & Hooks.hasDetaching) {\n      this.detaching(flags);\n    }\n\n    let current = this.$componentTail;\n    while (current !== null) {\n      current.$detach(flags);\n      current = current.$prevComponent;\n    }\n\n    // remove isAttached and isDetaching flags\n    this.$state &= ~(State.isAttached | State.isDetaching);\n\n    if (hooks & Hooks.hasDetached) {\n      lifecycle.enqueueDetached(this as Required<typeof this>);\n    }\n    lifecycle.endDetach(flags);\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $detachView(this: Writable<IAttachable & IMountableComponent>, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter('IView', '$detach', slice.call(arguments)); }\n  if (this.$state & State.isAttached) {\n    // add isDetaching flag\n    this.$state |= State.isDetaching;\n    flags |= LifecycleFlags.fromDetach;\n\n    // Only unmount if either:\n    // - No parent view/element is queued for unmount yet, or\n    // - Aurelia is stopping (in which case all nodes need to return to their fragments for a clean mount on next start)\n    if (((flags & LifecycleFlags.parentUnmountQueued) ^ LifecycleFlags.parentUnmountQueued) | (flags & LifecycleFlags.fromStopTask)) {\n      this.$lifecycle.enqueueUnmount(this);\n      flags |= LifecycleFlags.parentUnmountQueued;\n    }\n\n    let current = this.$componentTail;\n    while (current !== null) {\n      current.$detach(flags);\n      current = current.$prevComponent;\n    }\n\n    // remove isAttached and isDetaching flags\n    this.$state &= ~(State.isAttached | State.isDetaching);\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $cacheAttribute(this: Writable<IAttachable>, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter(this.constructor.description && this.constructor.description.name || this.constructor.name, '$cache', slice.call(arguments)); }\n  flags |= LifecycleFlags.fromCache;\n  if (this.$hooks & Hooks.hasCaching) {\n    this.caching(flags);\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $cacheElement(this: Writable<IAttachable>, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter(this.constructor.description && this.constructor.description.name || this.constructor.name, '$cache', slice.call(arguments)); }\n  flags |= LifecycleFlags.fromCache;\n  if (this.$hooks & Hooks.hasCaching) {\n    this.caching(flags);\n  }\n\n  let current = this.$componentTail;\n  while (current !== null) {\n    current.$cache(flags);\n    current = current.$prevComponent;\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $cacheView(this: Writable<IAttachable>, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter('IView', '$cache', slice.call(arguments)); }\n  flags |= LifecycleFlags.fromCache;\n  let current = this.$componentTail;\n  while (current !== null) {\n    current.$cache(flags);\n    current = current.$prevComponent;\n  }\n}\n\n/** @internal */\nexport function $mountElement(this: Writable<ICustomElement & IAttachable>, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter(this.constructor.description && this.constructor.description.name || this.constructor.name, '$mount', slice.call(arguments)); }\n  if (!(this.$state & State.isMounted)) {\n    this.$state |= State.isMounted;\n    this.$projector.project(this.$nodes);\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $unmountElement(this: Writable<ICustomElement & IAttachable>, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter(this.constructor.description && this.constructor.description.name || this.constructor.name, '$unmount', slice.call(arguments)); }\n  if (this.$state & State.isMounted) {\n    this.$state &= ~State.isMounted;\n    this.$projector.take(this.$nodes);\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $mountView(this: Writable<IView>, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter('IView', '$mount', slice.call(arguments)); }\n  if (!(this.$state & State.isMounted)) {\n    this.$state |= State.isMounted;\n    this.$nodes.insertBefore(this.location);\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $unmountView(this: Writable<IView>, flags: LifecycleFlags): boolean {\n  if (Tracer.enabled) { Tracer.enter('IView', '$unmount', slice.call(arguments)); }\n  if (this.$state & State.isMounted) {\n    this.$state &= ~State.isMounted;\n    this.$nodes.remove();\n\n    if (this.isFree) {\n      this.isFree = false;\n      if (this.cache.tryReturnToCache(this)) {\n        this.$state |= State.isCached;\n        if (Tracer.enabled) { Tracer.leave(); }\n        return true;\n      }\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n    return false;\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n  return false;\n}\n","import { Profiler, Tracer, Writable } from '@aurelia/kernel';\nimport { Hooks, LifecycleFlags, State } from '../flags';\nimport { IComponent, ILifecycleHooks, IRenderable } from '../lifecycle';\nimport { IPatchable, IScope } from '../observation';\nimport { patchProperties } from '../observation/patch-properties';\n\nconst slice = Array.prototype.slice;\n\nconst { enter, leave } = Profiler.createTimer('BindLifecycle');\n\ninterface IBindable extends IRenderable, ILifecycleHooks, IComponent {\n  constructor: {\n    description?: { name: string };\n    name: string;\n  };\n}\n\n/** @internal */\nexport function $bindAttribute(this: Writable<IBindable>, flags: LifecycleFlags, scope: IScope): void {\n  if (Profiler.enabled) { enter(); }\n  if (Tracer.enabled) { Tracer.enter(this.constructor.description && this.constructor.description.name || this.constructor.name, '$bind', slice.call(arguments)); }\n  flags |= LifecycleFlags.fromBind;\n\n  if (this.$state & State.isBound) {\n    if (this.$scope === scope) {\n      if (Profiler.enabled) { leave(); }\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n\n    this.$unbind(flags);\n  }\n  const lifecycle = this.$lifecycle;\n  lifecycle.beginBind();\n  // add isBinding flag\n  this.$state |= State.isBinding;\n\n  const hooks = this.$hooks;\n\n  if (hooks & Hooks.hasBound) {\n    lifecycle.enqueueBound(this);\n  }\n\n  this.$scope = scope;\n\n  if (hooks & Hooks.hasBinding) {\n    this.binding(flags);\n  }\n\n  // add isBound flag and remove isBinding flag\n  this.$state |= State.isBound;\n  this.$state &= ~State.isBinding;\n\n  lifecycle.endBind(flags);\n  if (Profiler.enabled) { leave(); }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $bindElement(this: Writable<IBindable>, flags: LifecycleFlags, parentScope: IScope | null): void {\n  if (Tracer.enabled) { Tracer.enter(this.constructor.description && this.constructor.description.name || this.constructor.name, '$bind', slice.call(arguments)); }\n  if (Profiler.enabled) { enter(); }\n  if (this.$state & State.isBound) {\n    if (Profiler.enabled) { leave(); }\n    if (Tracer.enabled) { Tracer.leave(); }\n    return;\n  }\n  const scope: Writable<IScope> = this.$scope;\n  scope.parentScope = parentScope;\n\n  const lifecycle = this.$lifecycle;\n  lifecycle.beginBind();\n  // add isBinding flag\n  this.$state |= State.isBinding;\n\n  const hooks = this.$hooks;\n  flags |= LifecycleFlags.fromBind;\n\n  if (hooks & Hooks.hasBound) {\n    lifecycle.enqueueBound(this);\n  }\n\n  let binding = this.$bindingHead;\n  while (binding !== null) {\n    binding.$bind(flags, scope);\n    binding = binding.$nextBinding;\n  }\n\n  if (hooks & Hooks.hasBinding) {\n    this.binding(flags);\n  }\n\n  let component = this.$componentHead;\n  while (component !== null) {\n    component.$bind(flags, scope);\n    component = component.$nextComponent;\n  }\n\n  // add isBound flag and remove isBinding flag\n  this.$state |= State.isBound;\n  this.$state &= ~State.isBinding;\n\n  lifecycle.endBind(flags);\n  if (Profiler.enabled) { leave(); }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $bindView(this: Writable<IBindable>, flags: LifecycleFlags, scope: IScope): void {\n  if (Tracer.enabled) { Tracer.enter('IView', '$bind', slice.call(arguments)); }\n  flags |= LifecycleFlags.fromBind;\n\n  if (this.$state & State.isBound) {\n    if (this.$scope === scope) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n\n    this.$unbind(flags);\n  }\n  // add isBinding flag\n  this.$state |= State.isBinding;\n\n  this.$scope = scope;\n\n  let binding = this.$bindingHead;\n  while (binding !== null) {\n    binding.$bind(flags, scope);\n    binding = binding.$nextBinding;\n  }\n\n  let component = this.$componentHead;\n  while (component !== null) {\n    component.$bind(flags, scope);\n    component = component.$nextComponent;\n  }\n\n  // add isBound flag and remove isBinding flag\n  this.$state |= State.isBound;\n  this.$state &= ~State.isBinding;\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $lockedBind(this: IBindable, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter('IView', 'lockedBind', slice.call(arguments)); }\n  flags |= LifecycleFlags.fromBind;\n\n  if (this.$state & State.isBound) {\n    if (Tracer.enabled) { Tracer.leave(); }\n    return;\n  }\n  // add isBinding flag\n  this.$state |= State.isBinding;\n\n  const scope = this.$scope;\n\n  let binding = this.$bindingHead;\n  while (binding !== null) {\n    binding.$bind(flags, scope);\n    binding = binding.$nextBinding;\n  }\n\n  let component = this.$componentHead;\n  while (component !== null) {\n    component.$bind(flags, scope);\n    component = component.$nextComponent;\n  }\n\n  // add isBound flag and remove isBinding flag\n  this.$state |= State.isBound;\n  this.$state &= ~State.isBinding;\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $unbindAttribute(this: Writable<IBindable>, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter(this.constructor.description && this.constructor.description.name || this.constructor.name, '$bind', slice.call(arguments)); }\n  if (this.$state & State.isBound) {\n    const lifecycle = this.$lifecycle;\n    lifecycle.beginUnbind();\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    const hooks = this.$hooks;\n    flags |= LifecycleFlags.fromUnbind;\n\n    if (hooks & Hooks.hasUnbound) {\n      lifecycle.enqueueUnbound(this);\n    }\n\n    if (hooks & Hooks.hasUnbinding) {\n      this.unbinding(flags);\n    }\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n\n    lifecycle.endUnbind(flags);\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $unbindElement(this: Writable<IBindable>, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter(this.constructor.description && this.constructor.description.name || this.constructor.name, '$bind', slice.call(arguments)); }\n  if (this.$state & State.isBound) {\n    const lifecycle = this.$lifecycle;\n    lifecycle.beginUnbind();\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    const hooks = this.$hooks;\n    flags |= LifecycleFlags.fromUnbind;\n\n    if (hooks & Hooks.hasUnbound) {\n      lifecycle.enqueueUnbound(this);\n    }\n\n    if (hooks & Hooks.hasUnbinding) {\n      this.unbinding(flags);\n    }\n\n    let component = this.$componentTail;\n    while (component !== null) {\n      component.$unbind(flags);\n      component = component.$prevComponent;\n    }\n\n    let binding = this.$bindingTail;\n    while (binding !== null) {\n      binding.$unbind(flags);\n      binding = binding.$prevBinding;\n    }\n\n    (this.$scope as Writable<IScope>).parentScope = null;\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n\n    lifecycle.endUnbind(flags);\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $unbindView(this: Writable<IBindable>, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter('IView', '$unbind', slice.call(arguments)); }\n  if (this.$state & State.isBound) {\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    flags |= LifecycleFlags.fromUnbind;\n\n    let component = this.$componentTail;\n    while (component !== null) {\n      component.$unbind(flags);\n      component = component.$prevComponent;\n    }\n\n    let binding = this.$bindingTail;\n    while (binding !== null) {\n      binding.$unbind(flags);\n      binding = binding.$prevBinding;\n    }\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n    this.$scope = null;\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\nexport function $lockedUnbind(this: IBindable, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter('IView', 'lockedUnbind', slice.call(arguments)); }\n  if (this.$state & State.isBound) {\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    flags |= LifecycleFlags.fromUnbind;\n\n    let component = this.$componentTail;\n    while (component !== null) {\n      component.$unbind(flags);\n      component = component.$prevComponent;\n    }\n\n    let binding = this.$bindingTail;\n    while (binding !== null) {\n      binding.$unbind(flags);\n      binding = binding.$prevBinding;\n    }\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n  }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\nexport function $patch(this: IBindable, flags: LifecycleFlags): void {\n  if (Tracer.enabled) { Tracer.enter(this.constructor.description && this.constructor.description.name || this.constructor.name, '$patch', slice.call(arguments)); }\n  if (Profiler.enabled) { enter(); }\n\n  patchProperties(this, flags);\n\n  let component = this.$componentHead;\n  while (component) {\n    component.$patch(flags);\n    component = component.$nextComponent;\n  }\n\n  let binding = this.$bindingHead;\n  while (binding) {\n    if ((binding as unknown as IPatchable).$patch !== undefined) {\n      (binding as unknown as IPatchable).$patch(flags);\n    }\n    binding = binding.$nextBinding;\n  }\n\n  if (Profiler.enabled) { leave(); }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n","import { DI, IContainer, IResolver, PLATFORM, Reporter } from '@aurelia/kernel';\n\nexport interface INode extends Object { }\n\nexport const INode = DI.createInterface<INode>('INode').noDefault();\n\nexport const IRenderLocation = DI.createInterface<IRenderLocation>('IRenderLocation').noDefault();\nexport interface IRenderLocation<T extends INode = INode> extends INode {\n  $start?: IRenderLocation<T>;\n  $nodes?: INodeSequence<T> | Readonly<{}>;\n}\n\n/**\n * Represents a DocumentFragment\n */\nexport interface INodeSequence<T extends INode = INode> extends INode {\n  /**\n   * The nodes of this sequence.\n   */\n  readonly childNodes: ArrayLike<T>;\n\n  readonly firstChild: T;\n\n  readonly lastChild: T;\n\n  /**\n   * Find all instruction targets in this sequence.\n   */\n  findTargets(): ArrayLike<T>;\n\n  /**\n   * Insert this sequence as a sibling before refNode\n   */\n  insertBefore(refNode: T | IRenderLocation<T>): void;\n\n  /**\n   * Append this sequence as a child to parent\n   */\n  appendTo(parent: T): void;\n\n  /**\n   * Remove this sequence from its parent.\n   */\n  remove(): void;\n}\n\nexport const IDOM = DI.createInterface<IDOM>('IDOM').noDefault();\n\nexport interface IDOM<T extends INode = INode> {\n  addEventListener(eventName: string, subscriber: unknown, publisher?: unknown, options?: unknown): void;\n  appendChild(parent: T, child: T): void;\n  cloneNode<TClone extends T>(node: TClone, deep?: boolean): TClone;\n  convertToRenderLocation(node: T): IRenderLocation<T>;\n  createDocumentFragment(markupOrNode?: string | T): T;\n  createElement(name: string): T;\n  createCustomEvent(eventType: string, options?: unknown): unknown;\n  dispatchEvent(evt: unknown): void;\n  createNodeObserver?(node: T, cb: (...args: unknown[]) => void, init: unknown): unknown;\n  createTemplate(markup?: string): T;\n  createTextNode(text: string): T;\n  insertBefore(nodeToInsert: T, referenceNode: T): void;\n  isMarker(node: unknown): node is T;\n  isNodeInstance(potentialNode: unknown): potentialNode is T;\n  isRenderLocation(node: unknown): node is IRenderLocation<T>;\n  makeTarget(node: T): void;\n  registerElementResolver(container: IContainer, resolver: IResolver): void;\n  remove(node: T): void;\n  removeEventListener(eventName: string, subscriber: unknown, publisher?: unknown, options?: unknown): void;\n  setAttribute(node: T, name: string, value: unknown): void;\n}\n\nconst ni = function(...args: unknown[]): unknown {\n  throw Reporter.error(1000); // TODO: create error code (not implemented exception)\n  // tslint:disable-next-line:no-any // this function doesn't need typing because it is never directly called\n} as any;\n\nconst niDOM: IDOM = {\n  addEventListener: ni,\n  appendChild: ni,\n  cloneNode: ni,\n  convertToRenderLocation: ni,\n  createDocumentFragment: ni,\n  createElement: ni,\n  createCustomEvent: ni,\n  dispatchEvent: ni,\n  createNodeObserver: ni,\n  createTemplate: ni,\n  createTextNode: ni,\n  insertBefore: ni,\n  isMarker: ni,\n  isNodeInstance: ni,\n  isRenderLocation: ni,\n  makeTarget: ni,\n  registerElementResolver: ni,\n  remove: ni,\n  removeEventListener: ni,\n  setAttribute: ni\n};\n\nexport const DOM: IDOM & {\n  readonly isInitialized: boolean;\n  initialize(dom: IDOM): void;\n  destroy(): void;\n} = {\n  ...niDOM,\n  get isInitialized(): boolean {\n    return Reflect.get(this, '$initialized') === true;\n  },\n  initialize(dom: IDOM): void {\n    if (this.isInitialized) {\n      throw Reporter.error(1001); // TODO: create error code (already initialized, check isInitialized property and call destroy() if you want to assign a different dom)\n    }\n    const descriptors: PropertyDescriptorMap = {};\n    const protos: IDOM[] = [dom];\n    let proto = Object.getPrototypeOf(dom);\n    while (proto && proto !== Object.prototype) {\n      protos.unshift(proto);\n      proto = Object.getPrototypeOf(proto);\n    }\n    for (proto of protos) {\n      Object.assign(descriptors, Object.getOwnPropertyDescriptors(proto));\n    }\n    const keys: string[] = [];\n    let key: string;\n    let descriptor: PropertyDescriptor;\n    for (key in descriptors) {\n      descriptor = descriptors[key];\n      if (descriptor.configurable && descriptor.writable) {\n        Reflect.defineProperty(this, key, descriptor);\n        keys.push(key);\n      }\n    }\n    Reflect.set(this, '$domKeys', keys);\n    Reflect.set(this, '$initialized', true);\n  },\n  destroy(): void {\n    if (!this.isInitialized) {\n      throw Reporter.error(1002); // TODO: create error code (already destroyed)\n    }\n    const keys = Reflect.get(this, '$domKeys') as string[];\n    keys.forEach(key => {\n      Reflect.deleteProperty(this, key);\n    });\n    Object.assign(this, niDOM);\n    Reflect.set(this, '$domKeys', PLATFORM.emptyArray);\n    Reflect.set(this, '$initialized', false);\n  }\n};\n\n// This is an implementation of INodeSequence that represents \"no DOM\" to render.\n// It's used in various places to avoid null and to encode\n// the explicit idea of \"no view\".\nconst emptySequence: INodeSequence = {\n  childNodes: PLATFORM.emptyArray,\n  firstChild: null,\n  lastChild: null,\n  findTargets(): ArrayLike<INode> { return PLATFORM.emptyArray; },\n  insertBefore(refNode: INode): void { /*do nothing*/ },\n  appendTo(parent: INode): void { /*do nothing*/ },\n  remove(): void { /*do nothing*/ }\n};\n\nexport const NodeSequence = {\n  empty: emptySequence\n};\n\nexport interface INodeSequenceFactory<T extends INode = INode> {\n  createNodeSequence(): INodeSequence<T>;\n}\n","import { Reporter, Tracer } from '@aurelia/kernel';\nimport { INode, INodeSequence, IRenderLocation } from '../dom';\nimport { LifecycleFlags, State } from '../flags';\nimport {\n  IBinding,\n  IComponent,\n  ILifecycle,\n  IMountableComponent,\n  IRenderContext,\n  IView,\n  IViewCache,\n  IViewFactory\n} from '../lifecycle';\nimport { IScope } from '../observation';\nimport { ITemplate } from '../rendering-engine';\nimport { $attachView, $cacheView, $detachView, $mountView, $unmountView } from './lifecycle-attach';\nimport { $bindView, $lockedBind, $lockedUnbind, $patch, $unbindView } from './lifecycle-bind';\n\nconst slice = Array.prototype.slice;\n\n/** @internal */\nexport interface View<T extends INode = INode> extends IView<T> {}\n\n/** @internal */\nexport class View<T extends INode = INode> implements IView<T> {\n  public $bindingHead: IBinding;\n  public $bindingTail: IBinding;\n\n  public $componentHead: IComponent;\n  public $componentTail: IComponent;\n\n  public $nextComponent: IComponent;\n  public $prevComponent: IComponent;\n  public $nextPatch: IComponent;\n\n  public $nextMount: IMountableComponent;\n  public $nextUnmount: IMountableComponent;\n\n  public $nextUnbindAfterDetach: IComponent;\n\n  public $state: State;\n  public $scope: IScope;\n  public $nodes: INodeSequence<T>;\n  public $context: IRenderContext<T>;\n  public cache: IViewCache<T>;\n  public location: IRenderLocation<T>;\n  public isFree: boolean;\n\n  public readonly $lifecycle: ILifecycle;\n\n  constructor($lifecycle: ILifecycle, cache: IViewCache<T>) {\n    this.$bindingHead = null;\n    this.$bindingTail = null;\n\n    this.$componentHead = null;\n    this.$componentTail = null;\n\n    this.$componentHead = null;\n    this.$componentTail = null;\n\n    this.$nextComponent = null;\n    this.$prevComponent = null;\n    this.$nextPatch = null;\n\n    this.$nextMount = null;\n    this.$nextUnmount = null;\n\n    this.$nextUnbindAfterDetach = null;\n\n    this.$state = State.none;\n    this.$scope = null;\n    this.isFree = false;\n\n    this.$lifecycle = $lifecycle;\n    this.cache = cache;\n  }\n\n  /**\n   * Reserves this `View` for mounting at a particular `IRenderLocation`.\n   * Also marks this `View` such that it cannot be returned to the cache until\n   * it is released again.\n   *\n   * @param location The RenderLocation before which the view will be appended to the DOM.\n   */\n  public hold(location: IRenderLocation<T>): void {\n    if (Tracer.enabled) { Tracer.enter('View', 'hold', slice.call(arguments)); }\n    this.isFree = false;\n    this.location = location;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  /**\n   * Marks this `View` such that it can be returned to the cache when it is unmounted.\n   *\n   * If this `View` is not currently attached, it will be unmounted immediately.\n   *\n   * @param flags The `LifecycleFlags` to pass to the unmount operation (only effective\n   * if the view is already in detached state).\n   *\n   * @returns Whether this `View` can/will be returned to cache\n   */\n  public release(flags: LifecycleFlags): boolean {\n    if (Tracer.enabled) { Tracer.enter('View', 'release', slice.call(arguments)); }\n    this.isFree = true;\n    if (this.$state & State.isAttached) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return this.cache.canReturnToCache(this);\n    }\n\n    if (Tracer.enabled) { Tracer.leave(); }\n    return !!this.$unmount(flags);\n  }\n\n  public lockScope(scope: IScope): void {\n    if (Tracer.enabled) { Tracer.enter('View', 'lockScope', slice.call(arguments)); }\n    this.$scope = scope;\n    this.$bind = $lockedBind;\n    this.$unbind = $lockedUnbind;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n}\n\n/** @internal */\nexport class ViewFactory<T extends INode = INode> implements IViewFactory<T> {\n  public static maxCacheSize: number = 0xFFFF;\n\n  public isCaching: boolean;\n  public name: string;\n\n  private cache: View<T>[];\n  private cacheSize: number;\n  private readonly lifecycle: ILifecycle;\n  private readonly template: ITemplate<T>;\n\n  constructor(name: string, template: ITemplate<T>, lifecycle: ILifecycle) {\n    this.isCaching = false;\n\n    this.cacheSize = -1;\n    this.cache = null;\n    this.lifecycle = lifecycle;\n    this.name = name;\n    this.template = template;\n  }\n\n  public setCacheSize(size: number | '*', doNotOverrideIfAlreadySet: boolean): void {\n    if (size) {\n      if (size === '*') {\n        size = ViewFactory.maxCacheSize;\n      } else if (typeof size === 'string') {\n        size = parseInt(size, 10);\n      }\n\n      if (this.cacheSize === -1 || !doNotOverrideIfAlreadySet) {\n        this.cacheSize = size;\n      }\n    }\n\n    if (this.cacheSize > 0) {\n      this.cache = [];\n    } else {\n      this.cache = null;\n    }\n\n    this.isCaching = this.cacheSize > 0;\n  }\n\n  public canReturnToCache(view: IView<T>): boolean {\n    return this.cache !== null && this.cache.length < this.cacheSize;\n  }\n\n  public tryReturnToCache(view: View<T>): boolean {\n    if (this.canReturnToCache(view)) {\n      view.$cache(LifecycleFlags.none);\n      this.cache.push(view);\n      return true;\n    }\n\n    return false;\n  }\n\n  public create(flags?: LifecycleFlags): IView<T> {\n    const cache = this.cache;\n    let view: View<T>;\n\n    if (cache !== null && cache.length > 0) {\n      view = cache.pop();\n      view.$state &= ~State.isCached;\n      return view;\n    }\n\n    view = new View<T>(this.lifecycle, this);\n    this.template.render(view, null, null, flags);\n    if (!view.$nodes) {\n      throw Reporter.error(90);\n    }\n    return view;\n  }\n}\n\n((proto: IView): void => {\n  proto.$bind = $bindView;\n  proto.$patch = $patch;\n  proto.$unbind = $unbindView;\n  proto.$attach = $attachView;\n  proto.$detach = $detachView;\n  proto.$cache = $cacheView;\n  proto.$mount = $mountView;\n  proto.$unmount = $unmountView;\n})(View.prototype);\n","import {\n  all,\n  DI,\n  IContainer,\n  IDisposable,\n  IIndexable,\n  Immutable,\n  ImmutableArray,\n  InjectArray,\n  IRegistry,\n  IResolver,\n  IResourceDescriptions,\n  IServiceLocator,\n  PLATFORM,\n  Reporter,\n  RuntimeCompilationResources,\n  Writable\n} from '@aurelia/kernel';\nimport {\n  BindableDefinitions,\n  buildTemplateDefinition,\n  customElementBehavior,\n  IBindableDescription,\n  InstructionTypeName,\n  ITargetedInstruction,\n  ITemplateDefinition,\n  TemplateDefinition,\n  TemplatePartDefinitions\n} from './definitions';\nimport { IDOM, INode, INodeSequenceFactory, IRenderLocation, NodeSequence } from './dom';\nimport { LifecycleFlags } from './flags';\nimport {\n  ILifecycle,\n  IRenderable,\n  IRenderContext,\n  IViewFactory\n} from './lifecycle';\nimport {\n  IAccessor,\n  IPropertySubscriber,\n  ISubscribable,\n  ISubscriberCollection,\n  MutationKind\n} from './observation';\nimport { ProxyObserver } from './observation/proxy-observer';\nimport { SelfObserver } from './observation/self-observer';\nimport { subscriberCollection } from './observation/subscriber-collection';\nimport { ICustomAttribute, ICustomAttributeType } from './resources/custom-attribute';\nimport { ICustomElement, ICustomElementType } from './resources/custom-element';\nimport { ViewFactory } from './templating/view';\n\nexport interface ITemplateCompiler {\n  readonly name: string;\n  compile(dom: IDOM, definition: ITemplateDefinition, resources: IResourceDescriptions, viewCompileFlags?: ViewCompileFlags): TemplateDefinition;\n}\n\nexport const ITemplateCompiler = DI.createInterface<ITemplateCompiler>('ITemplateCompiler').noDefault();\n\nexport enum ViewCompileFlags {\n  none        = 0b0_001,\n  surrogate   = 0b0_010,\n  shadowDOM   = 0b0_100,\n}\n\nexport interface ITemplateFactory<T extends INode = INode> {\n  create(parentRenderContext: IRenderContext<T>, definition: TemplateDefinition): ITemplate<T>;\n}\n\nexport const ITemplateFactory = DI.createInterface<ITemplateFactory>('ITemplateFactory').noDefault();\n\n// The basic template abstraction that allows consumers to create\n// instances of an INodeSequence on-demand. Templates are contextual in that they are, in the very least,\n// part of a particular application, with application-level resources, but they also may have their\n// own scoped resources or be part of another view (via a template controller) which provides a\n// context for the template.\nexport interface ITemplate<T extends INode = INode> {\n  readonly renderContext: IRenderContext<T>;\n  readonly dom: IDOM<T>;\n  render(renderable: IRenderable<T>, host?: T, parts?: Immutable<Record<string, ITemplateDefinition>>, flags?: LifecycleFlags): void;\n}\n\n// This is the main implementation of ITemplate.\n// It is used to create instances of IView based on a compiled TemplateDefinition.\n// TemplateDefinitions are hand-coded today, but will ultimately be the output of the\n// TemplateCompiler either through a JIT or AOT process.\n// Essentially, CompiledTemplate wraps up the small bit of code that is needed to take a TemplateDefinition\n// and create instances of it on demand.\nexport class CompiledTemplate<T extends INode = INode> implements ITemplate {\n  public readonly factory: INodeSequenceFactory<T>;\n  public readonly renderContext: IRenderContext<T>;\n  public readonly dom: IDOM<T>;\n\n  private readonly definition: TemplateDefinition;\n\n  constructor(dom: IDOM<T>, definition: TemplateDefinition, factory: INodeSequenceFactory<T>, renderContext: IRenderContext<T>) {\n    this.dom = dom;\n    this.definition = definition;\n    this.factory = factory;\n    this.renderContext = renderContext;\n  }\n\n  public render(renderable: IRenderable<T>, host?: T, parts?: TemplatePartDefinitions, flags: LifecycleFlags = LifecycleFlags.none): void {\n    const nodes = (renderable as Writable<IRenderable>).$nodes = this.factory.createNodeSequence();\n    (renderable as Writable<IRenderable>).$context = this.renderContext;\n    flags |= this.definition.strategy;\n    this.renderContext.render(flags, renderable, nodes.findTargets(), this.definition, host, parts);\n  }\n}\n\n// This is an implementation of ITemplate that always returns a node sequence representing \"no DOM\" to render.\n/** @internal */\nexport const noViewTemplate: ITemplate = {\n  renderContext: null,\n  dom: null,\n  render(renderable: IRenderable): void {\n    (renderable as Writable<IRenderable>).$nodes = NodeSequence.empty;\n    (renderable as Writable<IRenderable>).$context = null;\n  }\n};\n\nconst defaultCompilerName = 'default';\n\nexport interface IInstructionTypeClassifier<TType extends string = string> {\n  instructionType: TType;\n}\n\nexport interface IInstructionRenderer<TType extends InstructionTypeName = InstructionTypeName> extends Partial<IInstructionTypeClassifier<TType>> {\n  render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: unknown, instruction: ITargetedInstruction, ...rest: unknown[]): void;\n}\n\nexport const IInstructionRenderer = DI.createInterface<IInstructionRenderer>('IInstructionRenderer').noDefault();\n\nexport interface IRenderer {\n  instructionRenderers: Record<string, IInstructionRenderer>;\n  render(\n    flags: LifecycleFlags,\n    dom: IDOM,\n    context: IRenderContext,\n    renderable: IRenderable,\n    targets: ArrayLike<INode>,\n    templateDefinition: TemplateDefinition,\n    host?: INode,\n    parts?: TemplatePartDefinitions\n  ): void;\n}\n\nexport const IRenderer = DI.createInterface<IRenderer>('IRenderer').noDefault();\n\nexport interface IRenderingEngine {\n  getElementTemplate<T extends INode = INode>(\n    dom: IDOM<T>,\n    definition: TemplateDefinition,\n    parentContext: IServiceLocator,\n    componentType: ICustomElementType<T> | null\n  ): ITemplate<T>;\n\n  getViewFactory<T extends INode = INode>(\n    dom: IDOM<T>,\n    source: Immutable<ITemplateDefinition>,\n    parentContext: IRenderContext<T> | null\n  ): IViewFactory<T>;\n\n  applyRuntimeBehavior<T extends INode = INode>(flags: LifecycleFlags, Type: ICustomAttributeType<T>, instance: ICustomAttribute<T>): void;\n  applyRuntimeBehavior<T extends INode = INode>(flags: LifecycleFlags, Type: ICustomElementType<T>, instance: ICustomElement<T>): void;\n}\n\nexport const IRenderingEngine = DI.createInterface<IRenderingEngine>('IRenderingEngine').withDefault(x => x.singleton(RenderingEngine));\n\n/** @internal */\nexport class RenderingEngine implements IRenderingEngine {\n  public static readonly inject: InjectArray = [IContainer, ITemplateFactory, ILifecycle, all(ITemplateCompiler)];\n\n  private readonly behaviorLookup: Map<ICustomElementType | ICustomAttributeType, RuntimeBehavior>;\n  private readonly compilers: Record<string, ITemplateCompiler>;\n  private readonly container: IContainer;\n  private readonly templateFactory: ITemplateFactory;\n  private readonly viewFactoryLookup: Map<Immutable<ITemplateDefinition>, IViewFactory>;\n  private readonly lifecycle: ILifecycle;\n  private readonly templateLookup: Map<TemplateDefinition, ITemplate>;\n\n  constructor(container: IContainer, templateFactory: ITemplateFactory, lifecycle: ILifecycle, templateCompilers: ITemplateCompiler[]) {\n    this.behaviorLookup = new Map();\n    this.container = container;\n    this.templateFactory = templateFactory;\n    this.viewFactoryLookup = new Map();\n    this.lifecycle = lifecycle;\n    this.templateLookup = new Map();\n\n    this.compilers = templateCompilers.reduce(\n      (acc, item) => {\n        acc[item.name] = item;\n        return acc;\n      },\n      Object.create(null)\n    );\n  }\n\n  public getElementTemplate<T extends INode = INode>(\n    dom: IDOM<T>,\n    definition: TemplateDefinition,\n    parentContext: IRenderContext<T> | null,\n    componentType: ICustomElementType<T> | null\n  ): ITemplate<T> {\n    if (!definition) {\n      return null;\n    }\n\n    let found = this.templateLookup.get(definition);\n\n    if (!found) {\n      found = this.templateFromSource(dom, definition, parentContext, componentType);\n\n      this.templateLookup.set(definition, found);\n    }\n\n    return found as ITemplate<T>;\n  }\n\n  public getViewFactory<T extends INode = INode>(\n    dom: IDOM<T>,\n    definition: Immutable<ITemplateDefinition>,\n    parentContext: IRenderContext<T> | null\n  ): IViewFactory<T> {\n    if (!definition) {\n      return null;\n    }\n\n    let factory = this.viewFactoryLookup.get(definition);\n\n    if (!factory) {\n      const validSource = buildTemplateDefinition(null, definition);\n      const template = this.templateFromSource(dom, validSource, parentContext, null);\n      factory = new ViewFactory(validSource.name, template, this.lifecycle);\n      factory.setCacheSize(validSource.cache, true);\n      this.viewFactoryLookup.set(definition, factory);\n    }\n\n    return factory as IViewFactory<T>;\n  }\n\n  public applyRuntimeBehavior(flags: LifecycleFlags, Type: ICustomAttributeType | ICustomElementType, instance: ICustomAttribute | ICustomElement): void {\n    let found = this.behaviorLookup.get(Type);\n\n    if (!found) {\n      found = RuntimeBehavior.create(Type);\n      this.behaviorLookup.set(Type, found);\n    }\n\n    found.applyTo(flags, instance, this.lifecycle);\n  }\n\n  private templateFromSource(\n    dom: IDOM,\n    definition: TemplateDefinition,\n    parentContext: IRenderContext | null,\n    componentType: ICustomElementType | null\n  ): ITemplate {\n    if (parentContext === null) {\n      parentContext = this.container as ExposedContext;\n    }\n\n    if (definition.template !== null) {\n      const renderContext = createRenderContext(dom, parentContext, definition.dependencies, componentType) as ExposedContext;\n\n      if (definition.build.required) {\n        const compilerName = definition.build.compiler || defaultCompilerName;\n        const compiler = this.compilers[compilerName];\n\n        if (compiler === undefined) {\n          throw Reporter.error(20, compilerName);\n        }\n\n        definition = compiler.compile(dom, definition as ITemplateDefinition, new RuntimeCompilationResources(renderContext), ViewCompileFlags.surrogate);\n      }\n\n      return this.templateFactory.create(renderContext, definition);\n    }\n\n    return noViewTemplate;\n  }\n}\n\nexport function createRenderContext(\n  dom: IDOM,\n  parentRenderContext: IRenderContext,\n  dependencies: ImmutableArray<IRegistry>,\n  componentType: ICustomElementType | null\n): IRenderContext {\n  const context = parentRenderContext.createChild() as ExposedContext;\n  const renderableProvider = new InstanceProvider();\n  const elementProvider = new InstanceProvider();\n  const instructionProvider = new InstanceProvider<ITargetedInstruction>();\n  const factoryProvider = new ViewFactoryProvider();\n  const renderLocationProvider = new InstanceProvider<IRenderLocation>();\n  const renderer = context.get(IRenderer);\n\n  dom.registerElementResolver(context, elementProvider);\n\n  context.registerResolver(IViewFactory, factoryProvider);\n  context.registerResolver(IRenderable, renderableProvider);\n  context.registerResolver(ITargetedInstruction, instructionProvider);\n  context.registerResolver(IRenderLocation, renderLocationProvider);\n\n  if (dependencies) {\n    context.register(...dependencies);\n  }\n\n  //If the element has a view, support Recursive Components by adding self to own view template container.\n  if (componentType) {\n    componentType.register(context);\n  }\n\n  context.render = function(this: IRenderContext, flags: LifecycleFlags, renderable: IRenderable, targets: ArrayLike<INode>, templateDefinition: TemplateDefinition, host?: INode, parts?: TemplatePartDefinitions): void {\n    renderer.render(flags, dom, this, renderable, targets, templateDefinition, host, parts);\n  };\n\n  context.beginComponentOperation = function(renderable: IRenderable, target: INode, instruction: ITargetedInstruction, factory: IViewFactory | null, parts?: TemplatePartDefinitions, location?: IRenderLocation): IDisposable {\n    renderableProvider.prepare(renderable);\n    elementProvider.prepare(target);\n    instructionProvider.prepare(instruction);\n\n    if (factory) {\n      factoryProvider.prepare(factory, parts);\n    }\n\n    if (location) {\n      renderLocationProvider.prepare(location);\n    }\n\n    return context;\n  };\n\n  context.dispose = function (): void {\n    factoryProvider.dispose();\n    renderableProvider.dispose();\n    instructionProvider.dispose();\n    elementProvider.dispose();\n    renderLocationProvider.dispose();\n  };\n\n  return context;\n}\n\n/** @internal */\nexport class InstanceProvider<T> implements IResolver {\n  private instance: T | null;\n\n  constructor() {\n    this.instance = null;\n  }\n\n  public prepare(instance: T): void {\n    this.instance = instance;\n  }\n\n  public resolve(handler: IContainer, requestor: IContainer): T | null {\n    if (this.instance === undefined) { // unmet precondition: call prepare\n      throw Reporter.error(50); // TODO: organize error codes\n    }\n    return this.instance;\n  }\n\n  public dispose(): void {\n    this.instance = null;\n  }\n}\n\n/** @internal */\nexport class ViewFactoryProvider implements IResolver {\n  private factory: IViewFactory | null;\n  private replacements: TemplatePartDefinitions;\n\n  public prepare(factory: IViewFactory, parts: TemplatePartDefinitions): void {\n    this.factory = factory;\n    this.replacements = parts || PLATFORM.emptyObject;\n  }\n\n  public resolve(handler: IContainer, requestor: ExposedContext): IViewFactory {\n    const factory = this.factory;\n    if (factory === undefined || factory === null) { // unmet precondition: call prepare\n      throw Reporter.error(50); // TODO: organize error codes\n    }\n    if (!factory.name || !factory.name.length) { // unmet invariant: factory must have a name\n      throw Reporter.error(51); // TODO: organize error codes\n    }\n    const found = this.replacements[factory.name];\n    if (found) {\n      const renderingEngine = handler.get(IRenderingEngine);\n      const dom = handler.get(IDOM);\n      return renderingEngine.getViewFactory(dom, found, requestor);\n    }\n\n    return factory;\n  }\n\n  public dispose(): void {\n    this.factory = null;\n    this.replacements = PLATFORM.emptyObject;\n  }\n}\n\nexport interface IChildrenObserver extends\n  IAccessor,\n  ISubscribable<MutationKind.instance>,\n  ISubscriberCollection<MutationKind.instance> { }\n\n/** @internal */\n@subscriberCollection(MutationKind.instance)\nexport class ChildrenObserver implements Partial<IChildrenObserver> {\n  public hasChanges: boolean;\n\n  private readonly customElement: ICustomElement & { $childrenChanged?(): void };\n  private readonly lifecycle: ILifecycle;\n  private children: ICustomElement[];\n  private observing: boolean;\n\n  constructor(lifecycle: ILifecycle, customElement: ICustomElement & { $childrenChanged?(): void }) {\n    this.hasChanges = false;\n\n    this.children = null;\n    this.customElement = customElement;\n    this.lifecycle = lifecycle;\n    this.observing = false;\n  }\n\n  public getValue(): ICustomElement[] {\n    if (!this.observing) {\n      this.observing = true;\n      this.customElement.$projector.subscribeToChildrenChange(() => { this.onChildrenChanged(); });\n      this.children = findElements(this.customElement.$projector.children);\n    }\n\n    return this.children;\n  }\n\n  public setValue(newValue: unknown): void { /* do nothing */ }\n\n  public flush(this: ChildrenObserver & IChildrenObserver, flags: LifecycleFlags): void {\n    this.callSubscribers(this.children, undefined, flags | LifecycleFlags.updateTargetInstance);\n    this.hasChanges = false;\n  }\n\n  public subscribe(this: ChildrenObserver & IChildrenObserver, subscriber: IPropertySubscriber): void {\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(this: ChildrenObserver & IChildrenObserver, subscriber: IPropertySubscriber): void {\n    this.removeSubscriber(subscriber);\n  }\n\n  private onChildrenChanged(): void {\n    this.children = findElements(this.customElement.$projector.children);\n\n    if ('$childrenChanged' in this.customElement) {\n      this.customElement.$childrenChanged();\n    }\n\n    this.lifecycle.enqueueFlush(this).catch(error => { throw error; });\n    this.hasChanges = true;\n  }\n}\n\n/** @internal */\nexport function findElements(nodes: ArrayLike<unknown>): ICustomElement[] {\n  const components: ICustomElement[] = [];\n\n  for (let i = 0, ii = nodes.length; i < ii; ++i) {\n    const current = nodes[i];\n    const component = customElementBehavior(current);\n\n    if (component !== null) {\n      components.push(component);\n    }\n  }\n\n  return components;\n}\n\n/** @internal */\nexport class RuntimeBehavior {\n  public bindables: BindableDefinitions;\n\n  private constructor() {}\n\n  public static create(Component: ICustomElementType | ICustomAttributeType): RuntimeBehavior {\n    const behavior = new RuntimeBehavior();\n\n    behavior.bindables = Component.description.bindables as Record<string, IBindableDescription>;\n\n    return behavior;\n  }\n\n  public applyTo(flags: LifecycleFlags, instance: ICustomAttribute | ICustomElement, lifecycle: ILifecycle): void {\n    instance.$lifecycle = lifecycle;\n    if ('$projector' in instance) {\n      this.applyToElement(flags, lifecycle, instance);\n    } else {\n      this.applyToCore(flags, instance);\n    }\n  }\n\n  private applyToElement(flags: LifecycleFlags, lifecycle: ILifecycle, instance: ICustomElement): void {\n    const observers = this.applyToCore(flags, instance);\n\n    observers.$children = new ChildrenObserver(lifecycle, instance);\n\n    Reflect.defineProperty(instance, '$children', {\n      enumerable: false,\n      get: function (): unknown {\n        return this['$observers'].$children.getValue();\n      }\n    });\n  }\n\n  private applyToCore(flags: LifecycleFlags, instance: ICustomAttribute | ICustomElement): IIndexable {\n    const observers = {};\n    const bindables = this.bindables;\n    const observableNames = Object.getOwnPropertyNames(bindables);\n\n    if (flags & LifecycleFlags.proxyStrategy) {\n      for (let i = 0, ii = observableNames.length; i < ii; ++i) {\n        const name = observableNames[i];\n\n        observers[name] = new SelfObserver(\n          flags,\n          ProxyObserver.getOrCreate(instance).proxy,\n          name,\n          bindables[name].callback\n        );\n      }\n    } else {\n      for (let i = 0, ii = observableNames.length; i < ii; ++i) {\n        const name = observableNames[i];\n\n        observers[name] = new SelfObserver(\n          flags,\n          instance,\n          name,\n          bindables[name].callback\n        );\n\n        if (!(flags & LifecycleFlags.patchStrategy)) {\n          createGetterSetter(flags, instance, name);\n        }\n      }\n\n      Reflect.defineProperty(instance, '$observers', {\n        enumerable: false,\n        value: observers\n      });\n    }\n\n    return observers;\n  }\n}\n\nfunction createGetterSetter(flags: LifecycleFlags, instance: ICustomAttribute | ICustomElement, name: string): void {\n  Reflect.defineProperty(instance, name, {\n    enumerable: true,\n    get: function (): unknown { return this['$observers'][name].getValue(); },\n    set: function(value: unknown): void { this['$observers'][name].setValue(value, flags & LifecycleFlags.persistentBindingFlags); }\n  });\n}\n\n/** @internal */\nexport type ExposedContext = IRenderContext & IDisposable & IContainer;\n","import {\n  Class,\n  Constructable,\n  DI,\n  IContainer,\n  IResourceKind,\n  IResourceType,\n  IServiceLocator,\n  Registration,\n  Reporter,\n  Writable\n} from '@aurelia/kernel';\nimport {\n  buildTemplateDefinition,\n  customElementBehavior,\n  customElementKey,\n  customElementName,\n  IElementHydrationOptions,\n  ITemplateDefinition,\n  TemplateDefinition\n} from '../definitions';\nimport { IDOM, INode, INodeSequence, IRenderLocation } from '../dom';\nimport { Hooks, LifecycleFlags } from '../flags';\nimport {\n  ILifecycleHooks,\n  IMountableComponent,\n  IRenderable\n} from '../lifecycle';\nimport { IChangeTracker } from '../observation';\nimport {\n  $attachElement,\n  $cacheElement,\n  $detachElement,\n  $mountElement,\n  $unmountElement\n} from '../templating/lifecycle-attach';\nimport {\n  $bindElement,\n  $patch,\n  $unbindElement\n} from '../templating/lifecycle-bind';\nimport {\n  $hydrateElement,\n  ILifecycleRender\n} from '../templating/lifecycle-render';\n\nexport interface ICustomElementType<T extends INode = INode, C extends Constructable = Constructable> extends\n  IResourceType<ITemplateDefinition, InstanceType<C> & ICustomElement<T>>,\n  ICustomElementStaticProperties {\n  description: TemplateDefinition;\n}\n\nexport type CustomElementHost<T extends INode = INode> = IRenderLocation<T> & T & {\n  $customElement?: ICustomElement<T>;\n};\n\nexport interface IElementProjector<T extends INode = INode> {\n  readonly host: CustomElementHost<T>;\n  readonly children: ArrayLike<CustomElementHost<T>>;\n\n  provideEncapsulationSource(): T;\n  project(nodes: INodeSequence<T>): void;\n  take(nodes: INodeSequence<T>): void;\n\n  subscribeToChildrenChange(callback: () => void): void;\n}\n\nexport const IProjectorLocator = DI.createInterface<IProjectorLocator>('IProjectorLocator').noDefault();\n\nexport interface IProjectorLocator<T extends INode = INode> {\n  getElementProjector(dom: IDOM<T>, $component: ICustomElement<T>, host: CustomElementHost<T>, def: TemplateDefinition): IElementProjector<T>;\n}\n\nexport interface ICustomElementStaticProperties {\n  containerless?: TemplateDefinition['containerless'];\n  shadowOptions?: TemplateDefinition['shadowOptions'];\n  bindables?: TemplateDefinition['bindables'];\n  strategy?: TemplateDefinition['strategy'];\n}\n\nexport interface ICustomElement<T extends INode = INode> extends\n  Partial<IChangeTracker>,\n  ILifecycleHooks,\n  ILifecycleRender,\n  IMountableComponent,\n  IRenderable<T> {\n\n  readonly $projector: IElementProjector<T>;\n  readonly $host: CustomElementHost<T>;\n\n  $hydrate(flags: LifecycleFlags, parentContext: IServiceLocator, host: INode, options?: IElementHydrationOptions): void;\n}\n\nexport interface ICustomElementResource<T extends INode = INode> extends\n  IResourceKind<ITemplateDefinition, ICustomElement<T>, Class<ICustomElement<T>> & ICustomElementStaticProperties> {\n  behaviorFor(node: T): ICustomElement<T> | null;\n}\n\n/** @internal */\nexport function registerElement(this: ICustomElementType, container: IContainer): void {\n  const resourceKey = this.kind.keyFrom(this.description.name);\n  container.register(Registration.transient(resourceKey, this));\n}\n\n/**\n * Decorator: Indicates that the decorated class is a custom element.\n */\nexport function customElement(definition: ITemplateDefinition): ICustomElementDecorator;\nexport function customElement(name: string): ICustomElementDecorator;\nexport function customElement(nameOrDefinition: string | ITemplateDefinition): ICustomElementDecorator;\nexport function customElement(nameOrDefinition: string | ITemplateDefinition): ICustomElementDecorator {\n  return (target => CustomElementResource.define(nameOrDefinition, target)) as ICustomElementDecorator;\n}\n\nfunction isType<T>(this: ICustomElementResource, Type: T & Partial<ICustomElementType>): Type is T & ICustomElementType {\n  return Type.kind === this;\n}\n\nfunction define<N extends INode = INode, T extends Constructable = Constructable>(this: ICustomElementResource, definition: ITemplateDefinition, ctor?: T | null): T & ICustomElementType<N, T>;\nfunction define<N extends INode = INode, T extends Constructable = Constructable>(this: ICustomElementResource, name: string, ctor?: T | null): T & ICustomElementType<N, T>;\nfunction define<N extends INode = INode, T extends Constructable = Constructable>(this: ICustomElementResource, nameOrDefinition: string | ITemplateDefinition, ctor: T | null): T & ICustomElementType<N, T>;\nfunction define<N extends INode = INode, T extends Constructable = Constructable>(this: ICustomElementResource, nameOrDefinition: string | ITemplateDefinition, ctor: T | null = null): T & ICustomElementType<N, T> {\n  if (!nameOrDefinition) {\n    throw Reporter.error(70);\n  }\n  const Type = (ctor === null ? class HTMLOnlyElement { /* HTML Only */ } : ctor) as T & ICustomElementType<N, T>;\n  const WritableType = Type as Writable<ICustomElementType<N, T>>;\n  const description = buildTemplateDefinition(Type, nameOrDefinition);\n  const proto: Writable<ICustomElement> = Type.prototype;\n\n  WritableType.kind = CustomElementResource as ICustomElementResource;\n  Type.description = description;\n  Type.register = registerElement;\n\n  proto.$hydrate = $hydrateElement;\n  proto.$bind = $bindElement;\n  proto.$patch = $patch;\n  proto.$attach = $attachElement;\n  proto.$detach = $detachElement;\n  proto.$unbind = $unbindElement;\n  proto.$cache = $cacheElement;\n\n  proto.$prevComponent = null;\n  proto.$nextComponent = null;\n  proto.$nextPatch = null;\n\n  proto.$nextUnbindAfterDetach = null;\n\n  proto.$scope = null;\n  proto.$hooks = 0;\n\n  proto.$bindingHead = null;\n  proto.$bindingTail = null;\n  proto.$componentHead = null;\n  proto.$componentTail = null;\n\n  proto.$mount = $mountElement;\n  proto.$unmount = $unmountElement;\n\n  proto.$nextMount = null;\n  proto.$nextUnmount = null;\n\n  proto.$projector = null;\n\n  if ('flush' in proto) {\n    proto.$nextFlush = null;\n  }\n\n  if ('binding' in proto) proto.$hooks |= Hooks.hasBinding;\n  if ('bound' in proto) {\n    proto.$hooks |= Hooks.hasBound;\n    proto.$nextBound = null;\n  }\n\n  if ('unbinding' in proto) proto.$hooks |= Hooks.hasUnbinding;\n  if ('unbound' in proto) {\n    proto.$hooks |= Hooks.hasUnbound;\n    proto.$nextUnbound = null;\n  }\n\n  if ('render' in proto) proto.$hooks |= Hooks.hasRender;\n  if ('created' in proto) proto.$hooks |= Hooks.hasCreated;\n  if ('attaching' in proto) proto.$hooks |= Hooks.hasAttaching;\n  if ('attached' in proto) {\n    proto.$hooks |= Hooks.hasAttached;\n    proto.$nextAttached = null;\n  }\n  if ('detaching' in proto) proto.$hooks |= Hooks.hasDetaching;\n  if ('caching' in proto) proto.$hooks |= Hooks.hasCaching;\n  if ('detached' in proto) {\n    proto.$hooks |= Hooks.hasDetached;\n    proto.$nextDetached = null;\n  }\n\n  return Type;\n}\n\nexport const CustomElementResource = {\n  name: customElementName,\n  keyFrom: customElementKey,\n  isType,\n  behaviorFor: customElementBehavior as ICustomElementResource['behaviorFor'],\n  define\n};\n\n// tslint:enable:align\n\n// TODO\n// ## DefaultSlotProjector\n// An implementation of IElementProjector that can handle a subset of default\n// slot projection scenarios without needing real Shadow DOM.\n// ### Conditions\n// We can do a one-time, static composition of the content and view,\n// to emulate shadow DOM, if the following constraints are met:\n// * There must be exactly one slot and it must be a default slot.\n// * The default slot must not have any fallback content.\n// * The default slot must not have a custom element as its immediate parent or\n//   a slot attribute (re-projection).\n// ### Projection\n// The projector copies all content nodes to the slot's location.\n// The copy process should inject a comment node before and after the slotted\n// content, so that the bounds of the content can be clearly determined,\n// even if the slotted content has template controllers or string interpolation.\n// ### Encapsulation Source\n// Uses the same strategy as HostProjector.\n// ### Children\n// The projector adds a mutation observer to the parent node of the\n// slot comment. When direct children of that node change, the projector\n// will gather up all nodes between the start and end slot comments.\n\nexport interface ICustomElementDecorator {\n  // Using a type breaks syntax highlighting: https://github.com/Microsoft/TypeScript-TmLanguage/issues/481\n  // tslint:disable-next-line:callable-types\n  <T extends Constructable>(target: T): T & ICustomElementType<T>;\n}\n\ntype HasShadowOptions = Pick<ITemplateDefinition, 'shadowOptions'>;\n\nconst defaultShadowOptions = {\n  mode: 'open' as 'open' | 'closed'\n};\n\n/**\n * Decorator: Indicates that the custom element should render its view in ShadowDOM.\n */\nexport function useShadowDOM<T extends Constructable>(options?: HasShadowOptions['shadowOptions']): (target: T & HasShadowOptions) => T & Required<HasShadowOptions>;\n/**\n * Decorator: Indicates that the custom element should render its view in ShadowDOM.\n */\nexport function useShadowDOM<T extends Constructable>(target: T & HasShadowOptions): T & Required<HasShadowOptions>;\nexport function useShadowDOM<T extends Constructable>(targetOrOptions?: (T & HasShadowOptions) | HasShadowOptions['shadowOptions']): (T & Required<HasShadowOptions>) | ((target: T & HasShadowOptions) => (T & Required<HasShadowOptions>)) {\n  const options = typeof targetOrOptions === 'function' || !targetOrOptions\n    ? defaultShadowOptions\n    : targetOrOptions as HasShadowOptions['shadowOptions'];\n\n  function useShadowDOMDecorator(target: T & HasShadowOptions): T & Required<HasShadowOptions> {\n    target.shadowOptions = options;\n    return target as T & Required<HasShadowOptions>;\n  }\n\n  return typeof targetOrOptions === 'function' ? useShadowDOMDecorator(targetOrOptions) : useShadowDOMDecorator;\n}\n\ntype HasContainerless = Pick<ITemplateDefinition, 'containerless'>;\n\nfunction containerlessDecorator<T extends Constructable>(target: T & HasContainerless): T & Required<HasContainerless> {\n  target.containerless = true;\n  return target as T & Required<HasContainerless>;\n}\n\n/**\n * Decorator: Indicates that the custom element should be rendered without its element container.\n */\nexport function containerless(): typeof containerlessDecorator;\n/**\n * Decorator: Indicates that the custom element should be rendered without its element container.\n */\nexport function containerless<T extends Constructable>(target: T & HasContainerless): T & Required<HasContainerless>;\nexport function containerless<T extends Constructable>(target?: T & HasContainerless): T & Required<HasContainerless> | typeof containerlessDecorator {\n  return target === undefined ? containerlessDecorator : containerlessDecorator<T>(target);\n}\n","import { IServiceLocator, PLATFORM, Profiler, Tracer, Writable } from '@aurelia/kernel';\nimport { IElementHydrationOptions, TemplateDefinition } from '../definitions';\nimport { IDOM, INode } from '../dom';\nimport { Hooks, LifecycleFlags } from '../flags';\nimport { Scope } from '../observation/binding-context';\nimport { ProxyObserver } from '../observation/proxy-observer';\nimport { IRenderingEngine, ITemplate } from '../rendering-engine';\nimport { ICustomAttribute, ICustomAttributeType } from '../resources/custom-attribute';\nimport { ICustomElement, ICustomElementType, IProjectorLocator } from '../resources/custom-element';\n\nconst slice = Array.prototype.slice;\n\nconst { enter, leave } = Profiler.createTimer('RenderLifecycle');\n\nexport interface IElementTemplateProvider {\n  getElementTemplate(renderingEngine: IRenderingEngine, customElementType: ICustomElementType | null, parentContext: IServiceLocator): ITemplate;\n}\n\nexport interface ILifecycleRender {\n  /**\n   * Only applies to `@customElement`. This hook is not invoked for `@customAttribute`s\n   *\n   * Called during `$hydrate`, after `this.$scope` and `this.$projector` are set.\n   *\n   * If this hook is implemented, it will be used instead of `renderingEngine.getElementTemplate`.\n   * This allows you to completely override the default rendering behavior.\n   *\n   * It is the responsibility of the implementer to:\n   * - Populate `this.$bindables` with any Bindings, child Views, custom elements and custom attributes\n   * - Populate `this.$attachables` with any child Views, custom elements and custom attributes\n   * - Populate `this.$nodes` with the nodes that need to be appended to the host\n   * - Populate `this.$context` with the RenderContext / Container scoped to this instance\n   *\n   * @param host The DOM node that declares this custom element\n   * @param parts Replaceable parts, if any\n   *\n   * @returns Either an implementation of `IElementTemplateProvider`, or void\n   *\n   * @description\n   * This is the first \"hydrate\" lifecycle hook. It happens only once per instance (contrary to bind/attach\n   * which can happen many times per instance), though it can happen many times per type (once for each instance)\n   */\n  render?(flags: LifecycleFlags, host: INode, parts: Record<string, TemplateDefinition>, parentContext: IServiceLocator): IElementTemplateProvider | void;\n}\n\n/** @internal */\n// tslint:disable-next-line:no-ignored-initial-value\nexport function $hydrateAttribute(this: Writable<ICustomAttribute>, flags: LifecycleFlags, parentContext: IServiceLocator): void {\n  if (Profiler.enabled) { enter(); }\n  const Type = this.constructor as ICustomAttributeType;\n  if (Tracer.enabled) { Tracer.enter(Type.description.name, '$hydrate', slice.call(arguments)); }\n  const description = Type.description;\n\n  flags |= description.strategy;\n  const renderingEngine = parentContext.get(IRenderingEngine);\n\n  let bindingContext: typeof this;\n  if (flags & LifecycleFlags.proxyStrategy) {\n    bindingContext = ProxyObserver.getOrCreate(this).proxy;\n  } else {\n    bindingContext = this;\n  }\n\n  renderingEngine.applyRuntimeBehavior(flags, Type, this);\n\n  if (this.$hooks & Hooks.hasCreated) {\n    bindingContext.created(flags);\n  }\n  if (Profiler.enabled) { leave(); }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n/** @internal */\n// tslint:disable-next-line:no-ignored-initial-value\nexport function $hydrateElement(this: Writable<ICustomElement>, flags: LifecycleFlags, parentContext: IServiceLocator, host: INode, options: IElementHydrationOptions = PLATFORM.emptyObject): void {\n  if (Profiler.enabled) { enter(); }\n  const Type = this.constructor as ICustomElementType;\n  if (Tracer.enabled) { Tracer.enter(Type.description.name, '$hydrate', slice.call(arguments)); }\n  const description = Type.description;\n\n  flags |= description.strategy;\n  const projectorLocator = parentContext.get(IProjectorLocator);\n  const renderingEngine = parentContext.get(IRenderingEngine);\n  const dom = parentContext.get(IDOM);\n\n  let bindingContext: typeof this;\n  if (flags & LifecycleFlags.proxyStrategy) {\n    bindingContext = ProxyObserver.getOrCreate(this).proxy;\n  } else {\n    bindingContext = this;\n  }\n\n  this.$scope = Scope.create(flags, bindingContext, null);\n  this.$host = host;\n  this.$projector = projectorLocator.getElementProjector(dom, this, host, description);\n\n  renderingEngine.applyRuntimeBehavior(flags, Type, this);\n\n  if (this.$hooks & Hooks.hasRender) {\n    const result = this.render(flags, host, options.parts, parentContext);\n\n    if (result && 'getElementTemplate' in result) {\n      const template = result.getElementTemplate(renderingEngine, Type, parentContext);\n      template.render(this, host, options.parts);\n    }\n  } else {\n    const template = renderingEngine.getElementTemplate(dom, description, parentContext, Type);\n    template.render(this, host, options.parts);\n  }\n\n  if (this.$hooks & Hooks.hasCreated) {\n    bindingContext.created(flags);\n  }\n  if (Profiler.enabled) { leave(); }\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n","import {\n  Class,\n  Constructable,\n  IContainer,\n  Immutable,\n  IResourceKind,\n  IResourceType,\n  IServiceLocator,\n  Omit,\n  PLATFORM,\n  Registration,\n  ResourceDescription,\n  Writable\n} from '@aurelia/kernel';\nimport {\n  customAttributeKey,\n  customAttributeName,\n  IAttributeDefinition\n} from '../definitions';\nimport { INode } from '../dom';\nimport { BindingMode, ensureValidStrategy, Hooks, LifecycleFlags } from '../flags';\nimport {\n  IComponent,\n  ILifecycleHooks,\n  IRenderable\n} from '../lifecycle';\nimport { IChangeTracker } from '../observation';\nimport { Bindable } from '../templating/bindable';\nimport {\n  $attachAttribute,\n  $cacheAttribute,\n  $detachAttribute\n} from '../templating/lifecycle-attach';\nimport {\n  $bindAttribute,\n  $patch,\n  $unbindAttribute\n} from '../templating/lifecycle-bind';\nimport { $hydrateAttribute } from '../templating/lifecycle-render';\n\ntype CustomAttributeStaticProperties = Pick<Immutable<Required<IAttributeDefinition>>, 'bindables'>;\n\nexport type CustomAttributeConstructor = Constructable & CustomAttributeStaticProperties;\n\nexport interface ICustomAttributeType<T extends INode = INode, C extends Constructable = Constructable> extends\n  IResourceType<IAttributeDefinition, InstanceType<C> & ICustomAttribute<T>>,\n  CustomAttributeStaticProperties { }\n\nexport interface ICustomAttribute<T extends INode = INode> extends\n  Partial<IChangeTracker>,\n  ILifecycleHooks,\n  IComponent,\n  IRenderable<T> {\n\n  $hydrate(flags: LifecycleFlags, parentContext: IServiceLocator): void;\n}\n\nexport interface ICustomAttributeResource<T extends INode = INode> extends\n  IResourceKind<IAttributeDefinition, ICustomAttribute<T>, Class<ICustomAttribute<T>> & CustomAttributeStaticProperties> {\n}\n\n/** @internal */\nexport function registerAttribute(this: ICustomAttributeType, container: IContainer): void {\n  const description = this.description;\n  const resourceKey = this.kind.keyFrom(description.name);\n  const aliases = description.aliases;\n\n  container.register(Registration.transient(resourceKey, this));\n\n  for (let i = 0, ii = aliases.length; i < ii; ++i) {\n    const aliasKey = this.kind.keyFrom(aliases[i]);\n    container.register(Registration.alias(resourceKey, aliasKey));\n  }\n}\n\n/**\n * Decorator: Indicates that the decorated class is a custom attribute.\n */\nexport function customAttribute(definition: IAttributeDefinition): CustomAttributeDecorator;\nexport function customAttribute(name: string): CustomAttributeDecorator;\nexport function customAttribute(nameOrDefinition: string | IAttributeDefinition): CustomAttributeDecorator;\nexport function customAttribute(nameOrDefinition: string | IAttributeDefinition): CustomAttributeDecorator {\n  return target => CustomAttributeResource.define(nameOrDefinition, target);\n}\n\n/**\n * Decorator: Applied to custom attributes. Indicates that whatever element the\n * attribute is placed on should be converted into a template and that this\n * attribute controls the instantiation of the template.\n */\nexport function templateController(definition: IAttributeDefinition): CustomAttributeDecorator;\nexport function templateController(name: string): CustomAttributeDecorator;\nexport function templateController(nameOrDefinition: string | Omit<IAttributeDefinition, 'isTemplateController'>): CustomAttributeDecorator;\nexport function templateController(nameOrDefinition: string | Omit<IAttributeDefinition, 'isTemplateController'>): CustomAttributeDecorator {\n  return target => CustomAttributeResource.define(\n    typeof nameOrDefinition === 'string'\n    ? { isTemplateController: true , name: nameOrDefinition }\n    : { isTemplateController: true, ...nameOrDefinition },\n    target);\n}\n\ntype HasDynamicOptions = Pick<IAttributeDefinition, 'hasDynamicOptions'>;\n\nfunction dynamicOptionsDecorator<T extends Constructable>(target: T & HasDynamicOptions): T & Required<HasDynamicOptions> {\n  target.hasDynamicOptions = true;\n  return target as T & Required<HasDynamicOptions>;\n}\n\n/**\n * Decorator: Indicates that the custom attributes has dynamic options.\n */\nexport function dynamicOptions(): typeof dynamicOptionsDecorator;\n/**\n * Decorator: Indicates that the custom attributes has dynamic options.\n */\nexport function dynamicOptions<T extends Constructable>(target: T & HasDynamicOptions): T & Required<HasDynamicOptions>;\nexport function dynamicOptions<T extends Constructable>(target?: T & HasDynamicOptions): T & Required<HasDynamicOptions> | typeof dynamicOptionsDecorator {\n  return target === undefined ? dynamicOptionsDecorator : dynamicOptionsDecorator<T>(target);\n}\n\nfunction isType<T>(this: ICustomAttributeResource, Type: T & Partial<ICustomAttributeType>): Type is T & ICustomAttributeType {\n  return Type.kind === this;\n}\n\nfunction define<N extends INode = INode, T extends Constructable = Constructable>(this: ICustomAttributeResource, definition: IAttributeDefinition, ctor: T): T & ICustomAttributeType<N, T>;\nfunction define<N extends INode = INode, T extends Constructable = Constructable>(this: ICustomAttributeResource, name: string, ctor: T): T & ICustomAttributeType<N, T>;\nfunction define<N extends INode = INode, T extends Constructable = Constructable>(this: ICustomAttributeResource, nameOrDefinition: string | IAttributeDefinition, ctor: T): T & ICustomAttributeType<N, T>;\nfunction define<N extends INode = INode, T extends Constructable = Constructable>(this: ICustomAttributeResource, nameOrDefinition: string | IAttributeDefinition, ctor: T): T & ICustomAttributeType<N, T> {\n  const Type = ctor as T & ICustomAttributeType<N, T>;\n  const WritableType = Type as T & Writable<ICustomAttributeType<N, T>>;\n  const description = createCustomAttributeDescription(typeof nameOrDefinition === 'string' ? { name: nameOrDefinition } : nameOrDefinition, Type);\n  const proto: Writable<ICustomAttribute> = Type.prototype;\n\n  WritableType.kind = CustomAttributeResource as ICustomAttributeResource;\n  WritableType.description = description;\n  Type.register = registerAttribute;\n\n  proto.$hydrate = $hydrateAttribute;\n  proto.$bind = $bindAttribute;\n  proto.$patch = $patch;\n  proto.$attach = $attachAttribute;\n  proto.$detach = $detachAttribute;\n  proto.$unbind = $unbindAttribute;\n  proto.$cache = $cacheAttribute;\n\n  proto.$prevComponent = null;\n  proto.$nextComponent = null;\n  proto.$nextPatch = null;\n\n  proto.$nextUnbindAfterDetach = null;\n\n  proto.$scope = null;\n  proto.$hooks = 0;\n  proto.$state = 0;\n\n  if ('flush' in proto) {\n    proto.$nextFlush = null;\n  }\n\n  if ('binding' in proto) proto.$hooks |= Hooks.hasBinding;\n  if ('bound' in proto) {\n    proto.$hooks |= Hooks.hasBound;\n    proto.$nextBound = null;\n  }\n\n  if ('unbinding' in proto) proto.$hooks |= Hooks.hasUnbinding;\n  if ('unbound' in proto) {\n    proto.$hooks |= Hooks.hasUnbound;\n    proto.$nextUnbound = null;\n  }\n\n  if ('created' in proto) proto.$hooks |= Hooks.hasCreated;\n  if ('attaching' in proto) proto.$hooks |= Hooks.hasAttaching;\n  if ('attached' in proto) {\n    proto.$hooks |= Hooks.hasAttached;\n    proto.$nextAttached = null;\n  }\n  if ('detaching' in proto) proto.$hooks |= Hooks.hasDetaching;\n  if ('caching' in proto) proto.$hooks |= Hooks.hasCaching;\n  if ('detached' in proto) {\n    proto.$hooks |= Hooks.hasDetached;\n    proto.$nextDetached = null;\n  }\n\n  return Type;\n}\n\nexport const CustomAttributeResource = {\n  name: customAttributeName,\n  keyFrom: customAttributeKey,\n  isType,\n  define\n};\n\n/** @internal */\nexport function createCustomAttributeDescription(def: IAttributeDefinition, Type: ICustomAttributeType): ResourceDescription<IAttributeDefinition> {\n  const aliases = def. aliases;\n  const defaultBindingMode = def.defaultBindingMode;\n  return {\n    name: def.name,\n    aliases: aliases === undefined || aliases === null ? PLATFORM.emptyArray : aliases,\n    defaultBindingMode: defaultBindingMode === undefined || defaultBindingMode === null ? BindingMode.toView : defaultBindingMode,\n    hasDynamicOptions: def.hasDynamicOptions === undefined ? false : def.hasDynamicOptions,\n    isTemplateController: def.isTemplateController === undefined ? false : def.isTemplateController,\n    bindables: { ...Bindable.for(Type as unknown as {}).get(), ...Bindable.for(def).get() },\n    strategy: ensureValidStrategy(def.strategy)\n  };\n}\n\nexport type CustomAttributeDecorator = <T extends Constructable>(target: T) => T & ICustomAttributeType<T>;\n","import { InjectArray, InterfaceSymbol, IRegistry } from '@aurelia/kernel';\nimport { AttributeDefinition, IAttributeDefinition } from '../../definitions';\nimport { INode, IRenderLocation } from '../../dom';\nimport { LifecycleFlags, State } from '../../flags';\nimport { CompositionCoordinator, IView, IViewFactory } from '../../lifecycle';\nimport { ProxyObserver } from '../../observation/proxy-observer';\nimport { bindable } from '../../templating/bindable';\nimport { CustomAttributeResource, ICustomAttribute, ICustomAttributeResource } from '../custom-attribute';\n\nexport interface If<T extends INode = INode> extends ICustomAttribute<T> {}\nexport class If<T extends INode = INode> implements If<T> {\n  public static readonly inject: InjectArray = [IViewFactory, IRenderLocation, CompositionCoordinator];\n\n  public static readonly register: IRegistry['register'];\n  public static readonly bindables: IAttributeDefinition['bindables'];\n  public static readonly kind: ICustomAttributeResource;\n  public static readonly description: AttributeDefinition;\n\n  @bindable public value: boolean;\n\n  public elseFactory: IViewFactory<T> | null;\n  public elseView: IView<T> | null;\n  public ifFactory: IViewFactory<T>;\n  public ifView: IView<T> | null;\n  public location: IRenderLocation<T>;\n  public coordinator: CompositionCoordinator;\n  private persistentFlags: LifecycleFlags;\n\n  constructor(\n    ifFactory: IViewFactory<T>,\n    location: IRenderLocation<T>,\n    coordinator: CompositionCoordinator\n  ) {\n    this.value = false;\n\n    this.coordinator = coordinator;\n    this.elseFactory = null;\n    this.elseView = null;\n    this.ifFactory = ifFactory;\n    this.ifView = null;\n    this.location = location;\n    this.persistentFlags = LifecycleFlags.none;\n  }\n\n  public binding(flags: LifecycleFlags): void {\n    this.persistentFlags = flags & LifecycleFlags.persistentBindingFlags;\n    const view = this.updateView(flags);\n    this.coordinator.compose(view, flags);\n    this.coordinator.binding(flags, this.$scope);\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    this.coordinator.attaching(flags);\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    this.coordinator.detaching(flags);\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    this.coordinator.unbinding(flags);\n  }\n\n  public caching(flags: LifecycleFlags): void {\n    if (this.ifView !== null && this.ifView.release(flags)) {\n      this.ifView = null;\n    }\n\n    if (this.elseView !== null && this.elseView.release(flags)) {\n      this.elseView = null;\n    }\n\n    this.coordinator.caching(flags);\n  }\n\n  public valueChanged(newValue: boolean, oldValue: boolean, flags: LifecycleFlags): void {\n    if (this.$state & (State.isBound | State.isBinding)) {\n      flags |= this.persistentFlags;\n      const $this = ProxyObserver.getRawIfProxy(this);\n      if (flags & LifecycleFlags.fromFlush) {\n        const view = $this.updateView(flags);\n        $this.coordinator.compose(view, flags);\n      } else {\n        $this.$lifecycle.enqueueFlush($this).catch(error => { throw error; });\n      }\n    }\n  }\n\n  public flush(flags: LifecycleFlags): void {\n    flags |= this.persistentFlags;\n    const $this = ProxyObserver.getRawIfProxy(this);\n    const view = $this.updateView(flags);\n    $this.coordinator.compose(view, flags);\n  }\n\n  /** @internal */\n  public updateView(flags: LifecycleFlags): IView<T> | null {\n    let view: IView<T> | null;\n\n    if (this.value) {\n      view = this.ifView = this.ensureView(this.ifView, this.ifFactory, flags);\n    } else if (this.elseFactory !== null) {\n      view = this.elseView  = this.ensureView(this.elseView, this.elseFactory, flags);\n    } else {\n      view = null;\n    }\n\n    return view;\n  }\n\n  /** @internal */\n  public ensureView(view: IView<T> | null, factory: IViewFactory<T>, flags: LifecycleFlags): IView<T> {\n    if (view === null) {\n      view = factory.create(flags);\n    }\n\n    view.hold(this.location);\n\n    return view;\n  }\n}\nCustomAttributeResource.define({ name: 'if', isTemplateController: true }, If);\n\nexport interface Else<T extends INode = INode> extends ICustomAttribute<T> {}\nexport class Else<T extends INode = INode> implements Else<T> {\n  public static readonly inject: InjectArray = [IViewFactory];\n\n  public static readonly register: IRegistry['register'];\n  public static readonly bindables: IAttributeDefinition['bindables'];\n  public static readonly kind: ICustomAttributeResource;\n  public static readonly description: AttributeDefinition;\n\n  private readonly factory: IViewFactory<T>;\n\n  constructor(factory: IViewFactory<T>) {\n    this.factory = factory;\n  }\n\n  public link(ifBehavior: If<T>): void {\n    ifBehavior.elseFactory = this.factory;\n  }\n}\nCustomAttributeResource.define({ name: 'else', isTemplateController: true }, Else);\n","import { InjectArray, IRegistry } from '@aurelia/kernel';\nimport { ForOfStatement } from '../../binding/ast';\nimport { Binding } from '../../binding/binding';\nimport { AttributeDefinition, IAttributeDefinition } from '../../definitions';\nimport { INode, IRenderLocation } from '../../dom';\nimport { LifecycleFlags, State } from '../../flags';\nimport { IMountableComponent, IRenderable, IView, IViewFactory } from '../../lifecycle';\nimport { CollectionObserver, IBatchedCollectionSubscriber, IndexMap, IObservedArray, IScope, ObservedCollection } from '../../observation';\nimport { BindingContext, BindingContextValue, Scope } from '../../observation/binding-context';\nimport { getCollectionObserver } from '../../observation/observer-locator';\nimport { ProxyObserver } from '../../observation/proxy-observer';\nimport { bindable } from '../../templating/bindable';\nimport { CustomAttributeResource, ICustomAttribute, ICustomAttributeResource } from '../custom-attribute';\n\nexport interface Repeat<C extends ObservedCollection, T extends INode = INode> extends ICustomAttribute<T>, IBatchedCollectionSubscriber {}\nexport class Repeat<C extends ObservedCollection = IObservedArray, T extends INode = INode> implements Repeat<C, T> {\n  public static readonly inject: InjectArray = [IRenderLocation, IRenderable, IViewFactory];\n\n  public static readonly register: IRegistry['register'];\n  public static readonly bindables: IAttributeDefinition['bindables'];\n  public static readonly kind: ICustomAttributeResource;\n  public static readonly description: AttributeDefinition;\n\n  @bindable public items: C;\n\n  public $scope: IScope;\n\n  public forOf: ForOfStatement;\n  public hasPendingInstanceMutation: boolean;\n  public local: string;\n  public location: IRenderLocation<T>;\n  public observer: CollectionObserver | null;\n  public renderable: IRenderable<T>;\n  public factory: IViewFactory<T>;\n  public views: IView<T>[];\n  public key: string | null;\n  public keyed: boolean;\n  private persistentFlags: LifecycleFlags;\n\n  constructor(\n    location: IRenderLocation<T>,\n    renderable: IRenderable<T>,\n    factory: IViewFactory<T>\n  ) {\n    this.factory = factory;\n    this.hasPendingInstanceMutation = false;\n    this.location = location;\n    this.observer = null;\n    this.renderable = renderable;\n    this.views = [];\n    this.key = null;\n    this.keyed = false;\n  }\n\n  public binding(flags: LifecycleFlags): void {\n    this.persistentFlags = flags & LifecycleFlags.persistentBindingFlags;\n    this.checkCollectionObserver(flags);\n    let current = this.renderable.$bindingHead as Binding;\n    while (current !== null) {\n      if (ProxyObserver.getRawIfProxy(current.target) === ProxyObserver.getRawIfProxy(this) && current.targetProperty === 'items') {\n        this.forOf = current.sourceExpression as ForOfStatement;\n        break;\n      }\n      current = current.$nextBinding as Binding;\n    }\n    this.local = this.forOf.declaration.evaluate(flags, this.$scope, null) as string;\n\n    if (this.keyed || (flags & LifecycleFlags.keyedStrategy) > 0) {\n      this.processViewsKeyed(null, flags);\n    } else {\n      this.processViewsNonKeyed(null, flags);\n    }\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    const { views, location } = this;\n    let view: IView;\n    for (let i = 0, ii = views.length; i < ii; ++i) {\n      view = views[i];\n      view.hold(location);\n      view.$attach(flags);\n    }\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    const { views } = this;\n    let view: IView;\n    for (let i = 0, ii = views.length; i < ii; ++i) {\n      view = views[i];\n      view.$detach(flags);\n      view.release(flags);\n    }\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    this.checkCollectionObserver(flags);\n\n    const { views } = this;\n    let view: IView;\n    for (let i = 0, ii = views.length; i < ii; ++i) {\n      view = views[i];\n      view.$unbind(flags);\n    }\n  }\n\n  // called by SetterObserver (sync)\n  public itemsChanged(newValue: C, oldValue: C, flags: LifecycleFlags): void {\n    flags |= this.persistentFlags;\n    const $this = ProxyObserver.getRawIfProxy(this);\n    $this.checkCollectionObserver(flags);\n    flags |= LifecycleFlags.updateTargetInstance;\n    if ($this.keyed || (flags & LifecycleFlags.keyedStrategy) > 0) {\n      $this.processViewsKeyed(null, flags);\n    } else {\n      $this.processViewsNonKeyed(null, flags);\n    }\n  }\n\n  // called by a CollectionObserver (async)\n  public handleBatchedChange(indexMap: number[] | null, flags: LifecycleFlags): void {\n    flags |= this.persistentFlags;\n    const $this = ProxyObserver.getRawIfProxy(this);\n    flags |= (LifecycleFlags.fromFlush | LifecycleFlags.updateTargetInstance);\n    if ($this.keyed || (flags & LifecycleFlags.keyedStrategy) > 0) {\n      $this.processViewsKeyed(indexMap, flags);\n    } else {\n      $this.processViewsNonKeyed(indexMap, flags);\n    }\n  }\n\n  // if the indexMap === null, it is an instance mutation, otherwise it's an items mutation\n  // TODO: Reduce complexity (currently at 46)\n  private processViewsNonKeyed(indexMap: number[] | null, flags: LifecycleFlags): void {\n    const { views, $lifecycle } = this;\n    let view: IView;\n    if (this.$state & (State.isBound | State.isBinding)) {\n      const { local, $scope, factory, forOf, items } = this;\n      const oldLength = views.length;\n      const newLength = forOf.count(flags, items);\n      if (oldLength < newLength) {\n        views.length = newLength;\n        for (let i = oldLength; i < newLength; ++i) {\n          views[i] = factory.create(flags);\n        }\n      } else if (newLength < oldLength) {\n        $lifecycle.beginDetach();\n        for (let i = newLength; i < oldLength; ++i) {\n          view = views[i];\n          view.release(flags);\n          view.$detach(flags);\n        }\n        $lifecycle.endDetach(flags);\n        $lifecycle.beginUnbind();\n        for (let i = newLength; i < oldLength; ++i) {\n          view = views[i];\n          view.$unbind(flags);\n        }\n        $lifecycle.endUnbind(flags);\n        views.length = newLength;\n        if (newLength === 0) {\n          return;\n        }\n      } else if (newLength === 0) {\n        return;\n      }\n\n      $lifecycle.beginBind();\n      if (indexMap === null) {\n        forOf.iterate(flags, items, (arr, i, item: BindingContextValue) => {\n          view = views[i];\n          if (!!view.$scope && view.$scope.bindingContext[local] === item) {\n            view.$bind(flags, Scope.fromParent(flags, $scope, view.$scope.bindingContext));\n          } else {\n            view.$bind(flags, Scope.fromParent(flags, $scope, BindingContext.create(flags, local, item)));\n          }\n        });\n      } else {\n        forOf.iterate(flags, items, (arr, i, item: BindingContextValue) => {\n          view = views[i];\n          if (!!view.$scope && (indexMap[i] === i || view.$scope.bindingContext[local] === item)) {\n            view.$bind(flags, Scope.fromParent(flags, $scope, view.$scope.bindingContext));\n          } else {\n            view.$bind(flags, Scope.fromParent(flags, $scope, BindingContext.create(flags, local, item)));\n          }\n        });\n      }\n      $lifecycle.endBind(flags);\n    }\n\n    if (this.$state & (State.isAttached | State.isAttaching)) {\n      const { location } = this;\n      $lifecycle.beginAttach();\n      if (indexMap === null) {\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n          view = views[i];\n          view.hold(location);\n          view.$attach(flags);\n        }\n      } else {\n        for (let i = 0, ii = views.length; i < ii; ++i) {\n          if (indexMap[i] !== i) {\n            view = views[i];\n            view.hold(location);\n            view.$attach(flags);\n          }\n        }\n      }\n      $lifecycle.endAttach(flags);\n    }\n  }\n\n  private processViewsKeyed(indexMap: IndexMap | null, flags: LifecycleFlags): void {\n    const { $lifecycle, local, $scope, factory, forOf, items } = this;\n    let views = this.views;\n    if (indexMap === null) {\n      if (this.$state & (State.isBound | State.isBinding)) {\n        $lifecycle.beginDetach();\n        const oldLength = views.length;\n        let view: IView;\n        for (let i = 0; i < oldLength; ++i) {\n          view = views[i];\n          view.release(flags);\n          view.$detach(flags);\n        }\n        $lifecycle.endDetach(flags);\n        $lifecycle.beginUnbind();\n        for (let i = 0; i < oldLength; ++i) {\n          view = views[i];\n          view.$unbind(flags);\n        }\n        $lifecycle.endUnbind(flags);\n\n        const newLen = forOf.count(flags, items);\n        views = this.views = Array(newLen);\n\n        $lifecycle.beginBind();\n        forOf.iterate(flags, items, (arr, i, item: BindingContextValue) => {\n          view = views[i] = factory.create(flags);\n          view.$bind(flags, Scope.fromParent(flags, $scope, BindingContext.create(flags, local, item)));\n        });\n        $lifecycle.endBind(flags);\n      }\n\n      if (this.$state & (State.isAttached | State.isAttaching)) {\n        const { location } = this;\n        $lifecycle.beginAttach();\n        let view: IView;\n        const len = views.length;\n        for (let i = 0; i < len; ++i) {\n          view = views[i];\n          view.hold(location);\n          view.$attach(flags);\n        }\n        $lifecycle.endAttach(flags);\n      }\n    } else {\n      const mapLen = indexMap.length;\n      let view: IView<T>;\n      const deleted = indexMap.deletedItems;\n      const deletedLen = deleted.length;\n      let i = 0;\n      if (this.$state & (State.isBound | State.isBinding)) {\n        // first detach+unbind+(remove from array) the deleted view indices\n        if (deletedLen > 0) {\n          $lifecycle.beginDetach();\n          i = 0;\n          for (; i < deletedLen; ++i) {\n            view = views[deleted[i]];\n            view.release(flags);\n            view.$detach(flags);\n          }\n          $lifecycle.endDetach(flags);\n          $lifecycle.beginUnbind();\n          for (i = 0; i < deletedLen; ++i) {\n            view = views[deleted[i]];\n            view.$unbind(flags);\n          }\n          $lifecycle.endUnbind(flags);\n          i = 0;\n          let j = 0;\n          let k = 0;\n          // tslint:disable-next-line:no-alphabetical-sort // alphabetical (numeric) sort is intentional\n          deleted.sort();\n          for (; i < deletedLen; ++i) {\n            j = deleted[i] - i;\n            views.splice(j, 1);\n            k = 0;\n            for (; k < mapLen; ++k) {\n              if (indexMap[k] >= j) {\n                --indexMap[k];\n              }\n            }\n          }\n        }\n\n        // then insert new views at the \"added\" indices to bring the views array in aligment with indexMap size\n        $lifecycle.beginBind();\n        i = 0;\n        for (; i < mapLen; ++i) {\n          if (indexMap[i] === -2) {\n            view = factory.create(flags);\n            view.$bind(flags, Scope.fromParent(flags, $scope, BindingContext.create(flags, local, items[i])));\n            views.splice(i, 0, view);\n          }\n        }\n        $lifecycle.endBind(flags);\n        if (views.length !== mapLen) {\n          // TODO: create error code and use reporter with more informative message\n          throw new Error(`viewsLen=${views.length}, mapLen=${mapLen}`);\n        }\n      }\n\n      if (this.$state & (State.isAttached | State.isAttaching)) {\n        const { location } = this;\n        // this algorithm retrieves the indices of the longest increasing subsequence of items in the repeater\n        // the items on those indices are not moved; this minimizes the number of DOM operations that need to be performed\n        const seq = longestIncreasingSubsequence(indexMap);\n        const seqLen = seq.length;\n        $lifecycle.beginDetach();\n        $lifecycle.beginAttach();\n        const operation: Partial<IMountableComponent> = {\n          $mount(): void {\n            let next = location;\n            let j = seqLen - 1;\n            i = indexMap.length - 1;\n            for (; i >= 0; --i) {\n              if (indexMap[i] === -2) {\n                view = views[i];\n\n                view.$state |= State.isAttaching;\n\n                let current = view.$componentHead;\n                while (current !== null) {\n                  current.$attach(flags | LifecycleFlags.fromAttach);\n                  current = current.$nextComponent;\n                }\n\n                view.$nodes.insertBefore(next);\n\n                view.$state |= (State.isMounted | State.isAttached);\n                view.$state &= ~State.isAttaching;\n                next = view.$nodes.firstChild;\n              } else if (j < 0 || seqLen === 1 || i !== seq[j]) {\n                view = views[indexMap[i]];\n                view.$state |= State.isDetaching;\n\n                let current = view.$componentTail;\n                while (current !== null) {\n                  current.$detach(flags | LifecycleFlags.fromDetach);\n                  current = current.$prevComponent;\n                }\n                view.$nodes.remove();\n\n                view.$state &= ~(State.isAttached | State.isDetaching | State.isMounted);\n\n                view.$state |= State.isAttaching;\n\n                current = view.$componentHead;\n                while (current !== null) {\n                  current.$attach(flags | LifecycleFlags.fromAttach);\n                  current = current.$nextComponent;\n                }\n\n                view.$nodes.insertBefore(next);\n\n                view.$state |= (State.isMounted | State.isAttached);\n                view.$state &= ~State.isAttaching;\n\n                next = view.$nodes.firstChild;\n              } else {\n                view = views[i];\n                next = view.$nodes.firstChild;\n                --j;\n              }\n            }\n          },\n          $nextMount: null\n        };\n\n        $lifecycle.enqueueMount(operation as IMountableComponent);\n\n        $lifecycle.endDetach(flags);\n        $lifecycle.endAttach(flags);\n      }\n    }\n  }\n\n  private checkCollectionObserver(flags: LifecycleFlags): void {\n    const $this = ProxyObserver.getRawIfProxy(this);\n    const oldObserver = $this.observer;\n    if ($this.$state & (State.isBound | State.isBinding)) {\n      const newObserver = $this.observer = getCollectionObserver(flags, $this.$lifecycle, $this.items);\n      if (oldObserver !== newObserver && oldObserver) {\n        oldObserver.unsubscribeBatched($this);\n      }\n      if (newObserver) {\n        newObserver.subscribeBatched($this);\n      }\n    } else if (oldObserver) {\n      oldObserver.unsubscribeBatched($this);\n    }\n  }\n}\nCustomAttributeResource.define({ name: 'repeat', isTemplateController: true }, Repeat);\n\ntype UintArray = Uint8Array | Uint16Array | Uint32Array;\nlet prevIndices: UintArray;\nlet tailIndices: UintArray;\nlet maxLen = 0;\n\n// Based on inferno's lis_algorithm @ https://github.com/infernojs/inferno/blob/master/packages/inferno/src/DOM/patching.ts#L732\n// with some tweaks to make it just a bit faster + account for IndexMap (and some names changes for readability)\n/** @internal */\nexport function longestIncreasingSubsequence(indexMap: IndexMap): Uint8Array | Uint16Array | Uint32Array {\n  const len = indexMap.length;\n  const origLen = len + indexMap.deletedItems.length;\n  const TArr = origLen < 0xFF ? Uint8Array : origLen < 0xFFFF ? Uint16Array : Uint32Array;\n\n  if (len > maxLen) {\n    maxLen = len;\n    prevIndices = new TArr(len);\n    tailIndices = new TArr(len);\n  }\n\n  let cursor = 0;\n  let cur = 0;\n  let prev = 0;\n  let i = 0;\n  let j = 0;\n  let low = 0;\n  let high = 0;\n  let mid = 0;\n\n  for (; i < len; i++) {\n    cur = indexMap[i];\n    if (cur !== -2) {\n      j = prevIndices[cursor];\n\n      prev = indexMap[j];\n      if (prev !== -2 && prev < cur) {\n        tailIndices[i] = j;\n        prevIndices[++cursor] = i;\n        continue;\n      }\n\n      low = 0;\n      high = cursor;\n\n      while (low < high) {\n        mid = (low + high) >> 1;\n        prev = indexMap[prevIndices[mid]];\n        if (prev !== -2 && prev < cur) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n\n      prev = indexMap[prevIndices[low]];\n      if (cur < prev || prev === -2) {\n        if (low > 0) {\n          prevIndices[i] = prevIndices[low - 1];\n        }\n        prevIndices[low] = i;\n      }\n    }\n  }\n  i = ++cursor;\n  const result = new TArr(i);\n  cur = prevIndices[cursor - 1];\n\n  while (cursor-- > 0) {\n    result[cursor] = cur;\n    cur = tailIndices[cur];\n  }\n  while (i-- > 0) prevIndices[i] = 0;\n  return result;\n}\n","import { InjectArray, IRegistry } from '@aurelia/kernel';\nimport { AttributeDefinition, IAttributeDefinition } from '../../definitions';\nimport { INode, IRenderLocation } from '../../dom';\nimport { LifecycleFlags } from '../../flags';\nimport { IView, IViewFactory } from '../../lifecycle';\nimport { CustomAttributeResource, ICustomAttribute, ICustomAttributeResource } from '../custom-attribute';\n\nexport interface Replaceable<T extends INode = INode> extends ICustomAttribute<T> {}\nexport class Replaceable<T extends INode = INode> implements Replaceable<T> {\n  public static readonly inject: InjectArray = [IViewFactory, IRenderLocation];\n\n  public static readonly register: IRegistry['register'];\n  public static readonly bindables: IAttributeDefinition['bindables'];\n  public static readonly kind: ICustomAttributeResource;\n  public static readonly description: AttributeDefinition;\n\n  private readonly currentView: IView<T>;\n  private readonly factory: IViewFactory<T>;\n\n  constructor(\n    factory: IViewFactory<T>,\n    location: IRenderLocation<T>\n  ) {\n    this.factory = factory;\n\n    this.currentView = this.factory.create();\n    this.currentView.hold(location);\n  }\n\n  public binding(flags: LifecycleFlags): void {\n    this.currentView.$bind(flags | LifecycleFlags.allowParentScopeTraversal, this.$scope);\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    this.currentView.$attach(flags);\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    this.currentView.$detach(flags);\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    this.currentView.$unbind(flags);\n  }\n}\nCustomAttributeResource.define({ name: 'replaceable', isTemplateController: true }, Replaceable);\n","import { InjectArray, IRegistry } from '@aurelia/kernel';\nimport { AttributeDefinition, IAttributeDefinition } from '../../definitions';\nimport { INode, IRenderLocation } from '../../dom';\nimport { LifecycleFlags, State } from '../../flags';\nimport { IBinding, IView, IViewFactory } from '../../lifecycle';\nimport { IBindingContext } from '../../observation';\nimport { Scope } from '../../observation/binding-context';\nimport { bindable } from '../../templating/bindable';\nimport { CustomAttributeResource, ICustomAttribute, ICustomAttributeResource } from '../custom-attribute';\n\nexport interface With<T extends INode = INode> extends ICustomAttribute<T> {}\nexport class With<T extends INode = INode> implements With<T>  {\n  public static readonly inject: InjectArray = [IViewFactory, IRenderLocation];\n\n  public static readonly register: IRegistry['register'];\n  public static readonly bindables: IAttributeDefinition['bindables'];\n  public static readonly kind: ICustomAttributeResource;\n  public static readonly description: AttributeDefinition;\n\n  // TODO: this type is incorrect (it can be any user-provided object), need to fix and double check Scope.\n  @bindable public value: IBinding | IBindingContext;\n\n  private readonly currentView: IView<T>;\n  private readonly factory: IViewFactory<T>;\n\n  constructor(\n    factory: IViewFactory<T>,\n    location: IRenderLocation<T>\n  ) {\n    this.value = null;\n\n    this.factory = factory;\n    this.currentView = this.factory.create();\n    this.currentView.hold(location);\n  }\n\n  public valueChanged(this: With): void {\n    if (this.$state & (State.isBound | State.isBinding)) {\n      this.bindChild(LifecycleFlags.fromBind);\n    }\n  }\n\n  public binding(flags: LifecycleFlags): void {\n    this.bindChild(flags);\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    this.currentView.$attach(flags);\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    this.currentView.$detach(flags);\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    this.currentView.$unbind(flags);\n  }\n\n  private bindChild(flags: LifecycleFlags): void {\n    const scope = Scope.fromParent(flags, this.$scope, this.value);\n    this.currentView.$bind(flags, scope);\n  }\n}\nCustomAttributeResource.define({ name: 'with', isTemplateController: true }, With);\n","import { DI, InjectArray, IRegistry } from '@aurelia/kernel';\nimport { ValueConverterResource } from '../value-converter';\n\nconst SCRIPT_REGEX = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi;\n\nexport interface ISanitizer {\n /**\n  * Sanitizes the provided input.\n  * @param input The input to be sanitized.\n  */\n  sanitize(input: string): string;\n}\n\nexport const ISanitizer = DI.createInterface<ISanitizer>('ISanitizer').withDefault(x => x.singleton(class {\n    public sanitize(input: string): string {\n      return input.replace(SCRIPT_REGEX, '');\n    }\n  })\n);\n\n/**\n * Simple html sanitization converter to preserve whitelisted elements and attributes on a bound property containing html.\n */\nexport class SanitizeValueConverter {\n  public static readonly inject: InjectArray = [ISanitizer];\n\n  public static register: IRegistry['register'];\n\n  private readonly sanitizer: ISanitizer;\n\n  constructor(sanitizer: ISanitizer) {\n    this.sanitizer = sanitizer;\n  }\n\n /**\n  * Process the provided markup that flows to the view.\n  * @param untrustedMarkup The untrusted markup to be sanitized.\n  */\n  public toView(untrustedMarkup: string): string|null {\n    if (untrustedMarkup === null || untrustedMarkup === undefined) {\n      return null;\n    }\n\n    return this.sanitizer.sanitize(untrustedMarkup);\n  }\n}\nValueConverterResource.define('sanitize', SanitizeValueConverter);\n","import { DI, IContainer, IRegistry, PLATFORM, Profiler, Registration, Reporter } from '@aurelia/kernel';\nimport { IDOM, INode } from './dom';\nimport { BindingStrategy, LifecycleFlags } from './flags';\nimport { ProxyObserver } from './observation/proxy-observer';\nimport { ExposedContext } from './rendering-engine';\nimport { CustomElementResource, ICustomElement, ICustomElementType } from './resources/custom-element';\n\nconst { enter: enterStart, leave: leaveStart } = Profiler.createTimer('Aurelia.start');\nconst { enter: enterStop, leave: leaveStop } = Profiler.createTimer('Aurelia.stop');\n\nexport interface ISinglePageApp<THost extends INode = INode> {\n  strategy?: BindingStrategy;\n  dom?: IDOM;\n  host: THost;\n  component: unknown;\n}\n\nexport class Aurelia {\n  private readonly container: IContainer;\n  private readonly components: ICustomElement[];\n  private readonly startTasks: (() => void)[];\n  private readonly stopTasks: (() => void)[];\n  private isStarted: boolean;\n  private _root: ICustomElement | null;\n\n  constructor(container: IContainer = DI.createContainer()) {\n    this.container = container;\n    this.components = [];\n    this.startTasks = [];\n    this.stopTasks = [];\n    this.isStarted = false;\n    this._root = null;\n\n    Registration\n      .instance(Aurelia, this)\n      .register(container, Aurelia);\n  }\n\n  public register(...params: (IRegistry | Record<string, Partial<IRegistry>>)[]): this {\n    this.container.register(...params);\n    return this;\n  }\n\n  public app(config: ISinglePageApp): this {\n    const host = config.host as INode & {$au?: Aurelia | null};\n\n    const domInitializer = this.container.get(IDOMInitializer);\n    domInitializer.initialize(config);\n    Registration.instance(INode, host).register(this.container);\n\n    const startFlags = LifecycleFlags.fromStartTask | config.strategy;\n    const stopFlags = LifecycleFlags.fromStopTask | config.strategy;\n\n    let component: ICustomElement;\n    const componentOrType = config.component as ICustomElement | ICustomElementType;\n    if (CustomElementResource.isType(componentOrType as ICustomElementType)) {\n      this.container.register(componentOrType as ICustomElementType);\n      component = this.container.get<ICustomElement>(CustomElementResource.keyFrom((componentOrType as ICustomElementType).description.name));\n    } else {\n      component = componentOrType as ICustomElement;\n    }\n    component = ProxyObserver.getRawIfProxy(component);\n\n    const startTask = () => {\n      host.$au = this;\n      if (!this.components.includes(component)) {\n        this._root = component;\n        this.components.push(component);\n        component.$hydrate(startFlags, this.container as ExposedContext, host);\n      }\n\n      component.$bind(startFlags | LifecycleFlags.fromBind, null);\n      component.$attach(startFlags | LifecycleFlags.fromAttach);\n    };\n\n    this.startTasks.push(startTask);\n\n    this.stopTasks.push(() => {\n      component.$detach(stopFlags | LifecycleFlags.fromDetach);\n      component.$unbind(stopFlags | LifecycleFlags.fromUnbind);\n      host.$au = null;\n    });\n\n    if (this.isStarted) {\n      startTask();\n    }\n\n    return this;\n  }\n\n  public root(): ICustomElement | null {\n    return ProxyObserver.getProxyOrSelf(this._root);\n  }\n\n  public start(): this {\n    if (Profiler.enabled) { enterStart(); }\n    for (const runStartTask of this.startTasks) {\n      runStartTask();\n    }\n    this.isStarted = true;\n    if (Profiler.enabled) { leaveStart(); }\n    return this;\n  }\n\n  public stop(): this {\n    if (Profiler.enabled) { enterStop(); }\n    this.isStarted = false;\n    for (const runStopTask of this.stopTasks) {\n      runStopTask();\n    }\n    if (Profiler.enabled) { leaveStop(); }\n    return this;\n  }\n}\n(PLATFORM.global as typeof PLATFORM.global & {Aurelia: unknown}).Aurelia = Aurelia;\n\nexport const IDOMInitializer = DI.createInterface<IDOMInitializer>('IDOMInitializer').noDefault();\n\nexport interface IDOMInitializer {\n  initialize(config?: ISinglePageApp): IDOM;\n}\n","import {\n  all,\n  Class,\n  IContainer,\n  ImmutableArray,\n  InjectArray,\n  IRegistry,\n  IResolver,\n  Registration,\n  Reporter,\n  Tracer,\n  Writable\n} from '@aurelia/kernel';\nimport { AnyBindingExpression } from './ast';\nimport { Binding } from './binding/binding';\nimport { Call } from './binding/call';\nimport { BindingType, IExpressionParser } from './binding/expression-parser';\nimport { InterpolationBinding, MultiInterpolationBinding } from './binding/interpolation-binding';\nimport { LetBinding } from './binding/let-binding';\nimport { Ref } from './binding/ref';\nimport {\n  customAttributeKey,\n  customElementKey,\n  ICallBindingInstruction,\n  IElementHydrationOptions,\n  IHydrateAttributeInstruction,\n  IHydrateElementInstruction,\n  IHydrateLetElementInstruction,\n  IHydrateTemplateController,\n  IInterpolationInstruction,\n  IIteratorBindingInstruction,\n  ILetBindingInstruction,\n  InstructionTypeName,\n  IPropertyBindingInstruction,\n  IRefBindingInstruction,\n  ISetPropertyInstruction,\n  ITargetedInstruction,\n  TargetedInstructionType,\n  TemplateDefinition,\n  TemplatePartDefinitions\n} from './definitions';\nimport { IDOM, INode } from './dom';\nimport { BindingMode, LifecycleFlags } from './flags';\nimport {\n  IBinding,\n  IComponent,\n  IRenderable,\n  IRenderContext,\n} from './lifecycle';\nimport { IObserverLocator } from './observation/observer-locator';\nimport {\n  IInstructionRenderer,\n  IInstructionTypeClassifier,\n  IRenderer,\n  IRenderingEngine\n} from './rendering-engine';\nimport { ICustomAttribute } from './resources/custom-attribute';\nimport { ICustomElement } from './resources/custom-element';\n\nconst slice = Array.prototype.slice;\n\ntype DecoratableInstructionRenderer<TType extends string, TProto, TClass> = Class<TProto & Partial<IInstructionTypeClassifier<TType> & Pick<IInstructionRenderer, 'render'>>, TClass> & Partial<IRegistry>;\ntype DecoratedInstructionRenderer<TType extends string, TProto, TClass> =  Class<TProto & IInstructionTypeClassifier<TType> & Pick<IInstructionRenderer, 'render'>, TClass> & IRegistry;\n\ntype InstructionRendererDecorator<TType extends string> = <TProto, TClass>(target: DecoratableInstructionRenderer<TType, TProto, TClass>) => DecoratedInstructionRenderer<TType, TProto, TClass>;\n\nexport function instructionRenderer<TType extends string>(instructionType: TType): InstructionRendererDecorator<TType> {\n  return function decorator<TProto, TClass>(target: DecoratableInstructionRenderer<TType, TProto, TClass>): DecoratedInstructionRenderer<TType, TProto, TClass> {\n    // wrap the constructor to set the instructionType to the instance (for better performance than when set on the prototype)\n    const decoratedTarget = function(...args: unknown[]): TProto {\n      // tslint:disable: no-commented-code\n      // tslint:disable: no-unnecessary-type-assertion\n      // tslint:disable: no-any\n      const instance = new (target as any)(...args);\n      // tslint:enable: no-unnecessary-type-assertion\n      // tslint:enable: no-any\n      // tslint:enable: no-commented-code\n      instance.instructionType = instructionType;\n      return instance;\n    } as unknown as DecoratedInstructionRenderer<TType, TProto, TClass>;\n    // make sure we register the decorated constructor with DI\n    decoratedTarget.register = function register(container: IContainer): IResolver {\n      return Registration.singleton(IInstructionRenderer, decoratedTarget).register(container, IInstructionRenderer);\n    };\n    // copy over any static properties such as inject (set by preceding decorators)\n    // also copy the name, to be less confusing to users (so they can still use constructor.name for whatever reason)\n    // the length (number of ctor arguments) is copied for the same reason\n    const ownProperties = Object.getOwnPropertyDescriptors(target);\n    Object.keys(ownProperties).filter(prop => prop !== 'prototype').forEach(prop => {\n      Reflect.defineProperty(decoratedTarget, prop, ownProperties[prop]);\n    });\n    return decoratedTarget;\n  };\n}\n\n/* @internal */\nexport class Renderer implements IRenderer {\n  public static readonly inject: InjectArray = [all(IInstructionRenderer)];\n\n  public instructionRenderers: Record<InstructionTypeName, IInstructionRenderer>;\n\n  constructor(instructionRenderers: IInstructionRenderer[]) {\n    const record = this.instructionRenderers = {};\n    instructionRenderers.forEach(item => {\n      record[item.instructionType] = item;\n    });\n  }\n\n  public static register(container: IContainer): IResolver<IRenderer> {\n    return Registration.singleton(IRenderer, this).register(container);\n  }\n\n  // tslint:disable-next-line:parameters-max-number\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, targets: ArrayLike<INode>, definition: TemplateDefinition, host?: INode, parts?: TemplatePartDefinitions): void {\n    if (Tracer.enabled) { Tracer.enter('Renderer', 'render', slice.call(arguments)); }\n    const targetInstructions = definition.instructions;\n    const instructionRenderers = this.instructionRenderers;\n\n    if (targets.length !== targetInstructions.length) {\n      if (targets.length > targetInstructions.length) {\n        throw Reporter.error(30);\n      } else {\n        throw Reporter.error(31);\n      }\n    }\n    let instructions: ImmutableArray<ITargetedInstruction>;\n    let target: INode;\n    let current: ITargetedInstruction;\n    for (let i = 0, ii = targets.length; i < ii; ++i) {\n      instructions = targetInstructions[i];\n      target = targets[i];\n\n      for (let j = 0, jj = instructions.length; j < jj; ++j) {\n        current = instructions[j];\n        instructionRenderers[current.type].render(flags, dom, context, renderable, target, current, parts);\n      }\n    }\n\n    if (host) {\n      const surrogateInstructions = definition.surrogates;\n\n      for (let i = 0, ii = surrogateInstructions.length; i < ii; ++i) {\n        current = surrogateInstructions[i];\n        instructionRenderers[current.type].render(flags, dom, context, renderable, host, current, parts);\n      }\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\nexport function ensureExpression<TFrom>(parser: IExpressionParser, srcOrExpr: TFrom, bindingType: BindingType): Exclude<TFrom, string> {\n  if (typeof srcOrExpr === 'string') {\n    return parser.parse(srcOrExpr, bindingType) as unknown as Exclude<TFrom, string>;\n  }\n  return srcOrExpr as Exclude<TFrom, string>;\n}\n\nexport function addBinding(renderable: IRenderable, binding: IBinding): void {\n  if (Tracer.enabled) { Tracer.enter('Renderer', 'addBinding', slice.call(arguments)); }\n  (binding as Writable<IBinding>).$prevBinding = renderable.$bindingTail;\n  (binding as Writable<IBinding>).$nextBinding = null;\n  if (renderable.$bindingTail === null) {\n    renderable.$bindingHead = binding;\n  } else {\n    (renderable.$bindingTail as Writable<IBinding>).$nextBinding = binding;\n  }\n  renderable.$bindingTail = binding;\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\nexport function addComponent(renderable: IRenderable, component: IComponent): void {\n  if (Tracer.enabled) { Tracer.enter('Renderer', 'addComponent', slice.call(arguments)); }\n  (component as Writable<IComponent>).$prevComponent = renderable.$componentTail;\n  (component as Writable<IComponent>).$nextComponent = null;\n  if (renderable.$componentTail === null) {\n    renderable.$componentHead = component;\n  } else {\n    (renderable.$componentTail as Writable<IComponent>).$nextComponent = component;\n  }\n  renderable.$componentTail = component;\n  if (Tracer.enabled) { Tracer.leave(); }\n}\n\n@instructionRenderer(TargetedInstructionType.setProperty)\n/** @internal */\nexport class SetPropertyRenderer implements IInstructionRenderer {\n  public static readonly register: IRegistry['register'];\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: object, instruction: ISetPropertyInstruction): void {\n    if (Tracer.enabled) { Tracer.enter('SetPropertyRenderer', 'render', slice.call(arguments)); }\n    target[instruction.to] = instruction.value;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n@instructionRenderer(TargetedInstructionType.hydrateElement)\n/** @internal */\nexport class CustomElementRenderer implements IInstructionRenderer {\n  public static readonly register: IRegistry['register'];\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: INode, instruction: IHydrateElementInstruction): void {\n    if (Tracer.enabled) { Tracer.enter('CustomElementRenderer', 'render', slice.call(arguments)); }\n    const operation = context.beginComponentOperation(renderable, target, instruction, null, null, target, true);\n    const component = context.get<ICustomElement>(customElementKey(instruction.res));\n    const instructionRenderers = context.get(IRenderer).instructionRenderers;\n    const childInstructions = instruction.instructions;\n\n    component.$hydrate(flags, context, target, instruction as IElementHydrationOptions);\n\n    let current: ITargetedInstruction;\n    for (let i = 0, ii = childInstructions.length; i < ii; ++i) {\n      current = childInstructions[i];\n      instructionRenderers[current.type].render(flags, dom, context, renderable, component, current);\n    }\n\n    addComponent(renderable, component);\n\n    operation.dispose();\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n@instructionRenderer(TargetedInstructionType.hydrateAttribute)\n/** @internal */\nexport class CustomAttributeRenderer implements IInstructionRenderer {\n  public static readonly register: IRegistry['register'];\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: INode, instruction: IHydrateAttributeInstruction): void {\n    if (Tracer.enabled) { Tracer.enter('CustomAttributeRenderer', 'render', slice.call(arguments)); }\n    const operation = context.beginComponentOperation(renderable, target, instruction);\n    const component = context.get<ICustomAttribute>(customAttributeKey(instruction.res));\n    const instructionRenderers = context.get(IRenderer).instructionRenderers;\n    const childInstructions = instruction.instructions;\n\n    component.$hydrate(flags, context);\n\n    let current: ITargetedInstruction;\n    for (let i = 0, ii = childInstructions.length; i < ii; ++i) {\n      current = childInstructions[i];\n      instructionRenderers[current.type].render(flags, dom, context, renderable, component, current);\n    }\n\n    addComponent(renderable, component);\n\n    operation.dispose();\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n@instructionRenderer(TargetedInstructionType.hydrateTemplateController)\n/** @internal */\nexport class TemplateControllerRenderer implements IInstructionRenderer {\n  public static readonly inject: InjectArray = [IRenderingEngine];\n  public static readonly register: IRegistry['register'];\n\n  private readonly renderingEngine: IRenderingEngine;\n\n  constructor(renderingEngine: IRenderingEngine) {\n    this.renderingEngine = renderingEngine;\n  }\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: INode, instruction: IHydrateTemplateController, parts?: TemplatePartDefinitions): void {\n    if (Tracer.enabled) { Tracer.enter('TemplateControllerRenderer', 'render', slice.call(arguments)); }\n    const factory = this.renderingEngine.getViewFactory(dom, instruction.def, context);\n    const operation = context.beginComponentOperation(renderable, target, instruction, factory, parts, dom.convertToRenderLocation(target), false);\n    const component = context.get<ICustomAttribute>(customAttributeKey(instruction.res));\n    const instructionRenderers = context.get(IRenderer).instructionRenderers;\n    const childInstructions = instruction.instructions;\n\n    component.$hydrate(flags, context);\n\n    if (instruction.link) {\n      (component as ICustomAttribute & { link(componentTail: IComponent): void}).link(renderable.$componentTail);\n    }\n\n    let current: ITargetedInstruction;\n    for (let i = 0, ii = childInstructions.length; i < ii; ++i) {\n      current = childInstructions[i];\n      instructionRenderers[current.type].render(flags, dom, context, renderable, component, current);\n    }\n\n    addComponent(renderable, component);\n\n    operation.dispose();\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n@instructionRenderer(TargetedInstructionType.hydrateLetElement)\n/** @internal */\nexport class LetElementRenderer implements IInstructionRenderer {\n  public static readonly inject: InjectArray = [IExpressionParser, IObserverLocator];\n  public static readonly register: IRegistry['register'];\n\n  private readonly parser: IExpressionParser;\n  private readonly observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: INode, instruction: IHydrateLetElementInstruction): void {\n    if (Tracer.enabled) { Tracer.enter('LetElementRenderer', 'render', slice.call(arguments)); }\n    dom.remove(target);\n    const childInstructions = instruction.instructions;\n    const toViewModel = instruction.toViewModel;\n\n    let childInstruction: ILetBindingInstruction;\n    let expr: AnyBindingExpression;\n    let binding: LetBinding;\n    for (let i = 0, ii = childInstructions.length; i < ii; ++i) {\n      childInstruction = childInstructions[i];\n      expr = ensureExpression(this.parser, childInstruction.from, BindingType.IsPropertyCommand);\n      binding = new LetBinding(expr, childInstruction.to, this.observerLocator, context, toViewModel);\n      addBinding(renderable, binding);\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n@instructionRenderer(TargetedInstructionType.callBinding)\n/** @internal */\nexport class CallBindingRenderer implements IInstructionRenderer {\n  public static readonly inject: InjectArray = [IExpressionParser, IObserverLocator];\n  public static readonly register: IRegistry['register'];\n\n  private readonly parser: IExpressionParser;\n  private readonly observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: INode, instruction: ICallBindingInstruction): void {\n    if (Tracer.enabled) { Tracer.enter('CallBindingRenderer', 'render', slice.call(arguments)); }\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.CallCommand);\n    const binding = new Call(expr, target, instruction.to, this.observerLocator, context);\n    addBinding(renderable, binding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n@instructionRenderer(TargetedInstructionType.refBinding)\n/** @internal */\nexport class RefBindingRenderer implements IInstructionRenderer {\n  public static readonly inject: InjectArray = [IExpressionParser];\n  public static readonly register: IRegistry['register'];\n\n  private readonly parser: IExpressionParser;\n\n  constructor(parser: IExpressionParser) {\n    this.parser = parser;\n  }\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: INode, instruction: IRefBindingInstruction): void {\n    if (Tracer.enabled) { Tracer.enter('RefBindingRenderer', 'render', slice.call(arguments)); }\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.IsRef);\n    const binding = new Ref(expr, target, context);\n    addBinding(renderable, binding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n@instructionRenderer(TargetedInstructionType.interpolation)\n/** @internal */\nexport class InterpolationBindingRenderer implements IInstructionRenderer {\n  public static readonly inject: InjectArray = [IExpressionParser, IObserverLocator];\n  public static readonly register: IRegistry['register'];\n\n  private readonly parser: IExpressionParser;\n  private readonly observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: INode, instruction: IInterpolationInstruction): void {\n    if (Tracer.enabled) { Tracer.enter('InterpolationBindingRenderer', 'render', slice.call(arguments)); }\n    let binding: MultiInterpolationBinding | InterpolationBinding;\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.Interpolation);\n    if (expr.isMulti) {\n      binding = new MultiInterpolationBinding(this.observerLocator, expr, target, instruction.to, BindingMode.toView, context);\n    } else {\n      binding = new InterpolationBinding(expr.firstExpression, expr, target, instruction.to, BindingMode.toView, this.observerLocator, context, true);\n    }\n    addBinding(renderable, binding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n@instructionRenderer(TargetedInstructionType.propertyBinding)\n/** @internal */\nexport class PropertyBindingRenderer implements IInstructionRenderer {\n  public static readonly inject: InjectArray = [IExpressionParser, IObserverLocator];\n  public static readonly register: IRegistry['register'];\n\n  private readonly parser: IExpressionParser;\n  private readonly observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: INode, instruction: IPropertyBindingInstruction): void {\n    if (Tracer.enabled) { Tracer.enter('PropertyBindingRenderer', 'render', slice.call(arguments)); }\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.IsPropertyCommand | instruction.mode);\n    const binding = new Binding(expr, target, instruction.to, instruction.mode, this.observerLocator, context);\n    addBinding(renderable, binding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n@instructionRenderer(TargetedInstructionType.iteratorBinding)\n/** @internal */\nexport class IteratorBindingRenderer implements IInstructionRenderer {\n  public static readonly inject: InjectArray = [IExpressionParser, IObserverLocator];\n  public static readonly register: IRegistry['register'];\n\n  private readonly parser: IExpressionParser;\n  private readonly observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: INode, instruction: IIteratorBindingInstruction): void {\n    if (Tracer.enabled) { Tracer.enter('IteratorBindingRenderer', 'render', slice.call(arguments)); }\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.ForCommand);\n    const binding = new Binding(expr, target, instruction.to, BindingMode.toView, this.observerLocator, context);\n    addBinding(renderable, binding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n","import { IRegistry } from '@aurelia/kernel';\nimport { LifecycleFlags } from '../../flags';\nimport { IBinding } from '../../lifecycle';\nimport { IObservable, IScope } from '../../observation';\nimport { BindingBehaviorResource } from '../binding-behavior';\n\ntype WithKey = IObservable & {\n  key: string | null;\n  keyed?: boolean;\n};\ntype BindingWithKeyedTarget = IBinding & {\n  target: WithKey;\n};\n\nexport class KeyedBindingBehavior {\n  public static register: IRegistry['register'];\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: BindingWithKeyedTarget, key: string): void {\n    // key is a lie (at the moment), we don't actually use it\n    binding.target.key = key;\n    // we do use keyeD though\n    binding.target.keyed = true;\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: BindingWithKeyedTarget): void {\n    binding.target.key = null;\n    binding.target.keyed = false;\n  }\n}\n\nBindingBehaviorResource.define('keyed', KeyedBindingBehavior);\n","import { DI, IContainer, IRegistry } from '@aurelia/kernel';\nimport { Lifecycle } from './lifecycle';\nimport { ObserverLocator } from './observation/observer-locator';\nimport {\n  CallBindingRenderer,\n  CustomAttributeRenderer,\n  CustomElementRenderer,\n  InterpolationBindingRenderer,\n  IteratorBindingRenderer,\n  LetElementRenderer,\n  PropertyBindingRenderer,\n  RefBindingRenderer,\n  Renderer,\n  SetPropertyRenderer,\n  TemplateControllerRenderer\n} from './renderer';\nimport { FromViewBindingBehavior, OneTimeBindingBehavior, ToViewBindingBehavior, TwoWayBindingBehavior } from './resources/binding-behaviors/binding-mode';\nimport { DebounceBindingBehavior } from './resources/binding-behaviors/debounce';\nimport { KeyedBindingBehavior } from './resources/binding-behaviors/keyed';\nimport { SignalBindingBehavior } from './resources/binding-behaviors/signals';\nimport { ThrottleBindingBehavior } from './resources/binding-behaviors/throttle';\nimport { Else, If } from './resources/custom-attributes/if';\nimport { Repeat } from './resources/custom-attributes/repeat';\nimport { Replaceable } from './resources/custom-attributes/replaceable';\nimport { With } from './resources/custom-attributes/with';\nimport { SanitizeValueConverter } from './resources/value-converters/sanitize';\n\nexport const IObserverLocatorRegistration = ObserverLocator as IRegistry;\nexport const ILifecycleRegistration = Lifecycle as IRegistry;\nexport const IRendererRegistration = Renderer as IRegistry;\n\n/**\n * Default implementations for the following interfaces:\n * - `IObserverLocator`\n * - `ILifecycle`\n * - `IRenderer`\n */\nexport const DefaultComponents = [\n  IObserverLocatorRegistration,\n  ILifecycleRegistration,\n  IRendererRegistration\n];\n\nexport const IfRegistration = If as IRegistry;\nexport const ElseRegistration = Else as IRegistry;\nexport const RepeatRegistration = Repeat as IRegistry;\nexport const ReplaceableRegistration = Replaceable as IRegistry;\nexport const WithRegistration = With as IRegistry;\nexport const SanitizeValueConverterRegistration = SanitizeValueConverter as IRegistry;\nexport const DebounceBindingBehaviorRegistration = DebounceBindingBehavior as IRegistry;\nexport const KeyedBindingBehaviorRegistration = KeyedBindingBehavior as IRegistry;\nexport const OneTimeBindingBehaviorRegistration = OneTimeBindingBehavior as IRegistry;\nexport const ToViewBindingBehaviorRegistration = ToViewBindingBehavior as IRegistry;\nexport const FromViewBindingBehaviorRegistration = FromViewBindingBehavior as IRegistry;\nexport const SignalBindingBehaviorRegistration = SignalBindingBehavior as IRegistry;\nexport const ThrottleBindingBehaviorRegistration = ThrottleBindingBehavior as IRegistry;\nexport const TwoWayBindingBehaviorRegistration = TwoWayBindingBehavior as IRegistry;\n\n/**\n * Default resources:\n * - Template controllers (`if`/`else`, `repeat`, `replaceable`, `with`)\n * - Value Converters (`sanitize`)\n * - Binding Behaviors (`oneTime`, `toView`, `fromView`, `twoWay`, `signal`, `debounce`, `throttle`)\n */\nexport const DefaultResources = [\n  IfRegistration,\n  ElseRegistration,\n  RepeatRegistration,\n  ReplaceableRegistration,\n  WithRegistration,\n  SanitizeValueConverterRegistration,\n  DebounceBindingBehaviorRegistration,\n  KeyedBindingBehaviorRegistration,\n  OneTimeBindingBehaviorRegistration,\n  ToViewBindingBehaviorRegistration,\n  FromViewBindingBehaviorRegistration,\n  SignalBindingBehaviorRegistration,\n  ThrottleBindingBehaviorRegistration,\n  TwoWayBindingBehaviorRegistration\n];\n\nexport const CallBindingRendererRegistration = CallBindingRenderer as IRegistry;\nexport const CustomAttributeRendererRegistration = CustomAttributeRenderer as IRegistry;\nexport const CustomElementRendererRegistration = CustomElementRenderer as IRegistry;\nexport const InterpolationBindingRendererRegistration = InterpolationBindingRenderer as IRegistry;\nexport const IteratorBindingRendererRegistration = IteratorBindingRenderer as IRegistry;\nexport const LetElementRendererRegistration = LetElementRenderer as IRegistry;\nexport const PropertyBindingRendererRegistration = PropertyBindingRenderer as IRegistry;\nexport const RefBindingRendererRegistration = RefBindingRenderer as IRegistry;\nexport const SetPropertyRendererRegistration = SetPropertyRenderer as IRegistry;\nexport const TemplateControllerRendererRegistration = TemplateControllerRenderer as IRegistry;\n\n/**\n * Default renderers for:\n * - PropertyBinding: `bind`, `one-time`, `to-view`, `from-view`, `two-way`\n * - IteratorBinding: `for`\n * - CallBinding: `call`\n * - RefBinding: `ref`\n * - InterpolationBinding: `${}`\n * - SetProperty\n * - `customElement` hydration\n * - `customAttribute` hydration\n * - `templateController` hydration\n * - `let` element hydration\n */\nexport const DefaultRenderers = [\n  PropertyBindingRendererRegistration,\n  IteratorBindingRendererRegistration,\n  CallBindingRendererRegistration,\n  RefBindingRendererRegistration,\n  InterpolationBindingRendererRegistration,\n  SetPropertyRendererRegistration,\n  CustomElementRendererRegistration,\n  CustomAttributeRendererRegistration,\n  TemplateControllerRendererRegistration,\n  LetElementRendererRegistration\n];\n\n/**\n * A DI configuration object containing environment/runtime-agnostic registrations:\n * - `DefaultComponents`\n * - `DefaultResources`\n * - `DefaultRenderers`\n */\nexport const RuntimeBasicConfiguration = {\n  /**\n   * Apply this configuration to the provided container.\n   */\n  register(container: IContainer): IContainer {\n    return container.register(\n      ...DefaultComponents,\n      ...DefaultResources,\n      ...DefaultRenderers\n    );\n  },\n  /**\n   * Create a new container with this configuration applied to it.\n   */\n  createContainer(): IContainer {\n    return this.register(DI.createContainer());\n  }\n};\n","import { IForOfStatement, IInterpolationExpression, IsBindingBehavior } from './ast';\nimport {\n  ICallBindingInstruction,\n  IHydrateAttributeInstruction,\n  IHydrateElementInstruction,\n  IHydrateLetElementInstruction,\n  IHydrateTemplateController,\n  IInterpolationInstruction,\n  IIteratorBindingInstruction,\n  ILetBindingInstruction,\n  IPropertyBindingInstruction,\n  IRefBindingInstruction,\n  ISetPropertyInstruction,\n  ITargetedInstruction,\n  ITemplateDefinition,\n  TargetedInstructionType\n} from './definitions';\nimport { BindingMode } from './flags';\n\nexport class InterpolationInstruction implements IInterpolationInstruction {\n  public type: TargetedInstructionType.interpolation;\n\n  public from: string | IInterpolationExpression;\n  public to: string;\n\n  constructor(from: string | IInterpolationExpression, to: string) {\n    this.type = TargetedInstructionType.interpolation;\n\n    this.from = from;\n    this.to = to;\n  }\n}\n\nexport class OneTimeBindingInstruction implements IPropertyBindingInstruction {\n  public type: TargetedInstructionType.propertyBinding;\n\n  public from: string | IsBindingBehavior;\n  public mode: BindingMode.oneTime;\n  public oneTime: true;\n  public to: string;\n\n  constructor(from: string | IsBindingBehavior, to: string) {\n    this.type = TargetedInstructionType.propertyBinding;\n\n    this.from = from;\n    this.mode = BindingMode.oneTime;\n    this.oneTime = true;\n    this.to = to;\n  }\n}\n\nexport class ToViewBindingInstruction implements IPropertyBindingInstruction {\n  public type: TargetedInstructionType.propertyBinding;\n\n  public from: string | IsBindingBehavior;\n  public mode: BindingMode.toView;\n  public oneTime: false;\n  public to: string;\n\n  constructor(from: string | IsBindingBehavior, to: string) {\n    this.type = TargetedInstructionType.propertyBinding;\n\n    this.from = from;\n    this.mode = BindingMode.toView;\n    this.oneTime = false;\n    this.to = to;\n  }\n}\n\nexport class FromViewBindingInstruction implements IPropertyBindingInstruction {\n  public type: TargetedInstructionType.propertyBinding;\n\n  public from: string | IsBindingBehavior;\n  public mode: BindingMode.fromView;\n  public oneTime: false;\n  public to: string;\n\n  constructor(from: string | IsBindingBehavior, to: string) {\n    this.type = TargetedInstructionType.propertyBinding;\n\n    this.from = from;\n    this.mode = BindingMode.fromView;\n    this.oneTime = false;\n    this.to = to;\n  }\n}\n\nexport class TwoWayBindingInstruction implements IPropertyBindingInstruction {\n  public type: TargetedInstructionType.propertyBinding = TargetedInstructionType.propertyBinding;\n\n  public from: string | IsBindingBehavior;\n  public mode: BindingMode.twoWay;\n  public oneTime: false;\n  public to: string;\n\n  constructor(from: string | IsBindingBehavior, to: string) {\n    this.type = TargetedInstructionType.propertyBinding;\n\n    this.from = from;\n    this.mode = BindingMode.twoWay;\n    this.oneTime = false;\n    this.to = to;\n  }\n}\n\nexport class IteratorBindingInstruction implements IIteratorBindingInstruction {\n  public type: TargetedInstructionType.iteratorBinding;\n\n  public from: string | IForOfStatement;\n  public to: string;\n\n  constructor(from: string | IForOfStatement, to: string) {\n    this.type = TargetedInstructionType.iteratorBinding;\n\n    this.from = from;\n    this.to = to;\n  }\n}\n\nexport class CallBindingInstruction implements ICallBindingInstruction {\n  public type: TargetedInstructionType.callBinding;\n\n  public from: string | IsBindingBehavior;\n  public to: string;\n\n  constructor(from: string | IsBindingBehavior, to: string) {\n    this.type = TargetedInstructionType.callBinding;\n\n    this.from = from;\n    this.to = to;\n  }\n}\n\nexport class RefBindingInstruction implements IRefBindingInstruction {\n  public type: TargetedInstructionType.refBinding;\n\n  public from: string | IsBindingBehavior;\n\n  constructor(from: string | IsBindingBehavior) {\n    this.type = TargetedInstructionType.refBinding;\n\n    this.from = from;\n  }\n}\n\nexport class SetPropertyInstruction implements ISetPropertyInstruction {\n  public type: TargetedInstructionType.setProperty;\n\n  public to: string;\n  public value: unknown;\n\n  constructor(value: unknown, to: string) {\n    this.type = TargetedInstructionType.setProperty;\n\n    this.to = to;\n    this.value = value;\n  }\n}\n\nexport class HydrateElementInstruction implements IHydrateElementInstruction {\n  public type: TargetedInstructionType.hydrateElement;\n\n  public instructions: ITargetedInstruction[];\n  public parts?: Record<string, ITemplateDefinition>;\n  public res: string;\n\n  constructor(res: string, instructions: ITargetedInstruction[], parts?: Record<string, ITemplateDefinition>) {\n    this.type = TargetedInstructionType.hydrateElement;\n\n    this.instructions = instructions;\n    this.parts = parts;\n    this.res = res;\n  }\n}\n\nexport class HydrateAttributeInstruction implements IHydrateAttributeInstruction {\n  public type: TargetedInstructionType.hydrateAttribute;\n\n  public instructions: ITargetedInstruction[];\n  public res: string;\n\n  constructor(res: string, instructions: ITargetedInstruction[]) {\n    this.type = TargetedInstructionType.hydrateAttribute;\n\n    this.instructions = instructions;\n    this.res = res;\n  }\n}\n\nexport class HydrateTemplateController implements IHydrateTemplateController {\n  public type: TargetedInstructionType.hydrateTemplateController;\n\n  public def: ITemplateDefinition;\n  public instructions: ITargetedInstruction[];\n  public link?: boolean;\n  public res: string;\n\n  constructor(def: ITemplateDefinition, res: string, instructions: ITargetedInstruction[], link?: boolean) {\n    this.type = TargetedInstructionType.hydrateTemplateController;\n\n    this.def = def;\n    this.instructions = instructions;\n    this.link = link;\n    this.res = res;\n  }\n}\n\nexport class LetElementInstruction implements IHydrateLetElementInstruction {\n  public type: TargetedInstructionType.hydrateLetElement;\n\n  public instructions: ILetBindingInstruction[];\n  public toViewModel: boolean;\n\n  constructor(instructions: ILetBindingInstruction[], toViewModel: boolean) {\n    this.type = TargetedInstructionType.hydrateLetElement;\n\n    this.instructions = instructions;\n    this.toViewModel = toViewModel;\n  }\n}\n\nexport class LetBindingInstruction implements ILetBindingInstruction {\n  public type: TargetedInstructionType.letBinding;\n\n  public from: string | IsBindingBehavior | IInterpolationExpression;\n  public to: string;\n\n  constructor(from: string | IsBindingBehavior | IInterpolationExpression, to: string) {\n    this.type = TargetedInstructionType.letBinding;\n\n    this.from = from;\n    this.to = to;\n  }\n}\n"],"names":["DelegationStrategy","MutationKind","CollectionKind","ProxyObserver","Reporter","SetterObserver","DI","Registration","register","keyFrom","isType","define","RuntimeError","PLATFORM","BindingMode","BindingStrategy","State","Hooks","LifecycleFlags","ExpressionKind","Binding","BindingType","toView","oneTime","InterpolationBinding","LetBinding","dispose","flush","CollectionLengthObserver","ArrayObserver","proto","native","methods","observe","descriptorProps","def","MapObserver","$clear","$delete","SetObserver","GetterObserver","CustomSetterObserver","toStringTag","DirtyCheckProperty","SelfObserver","fromView","TargetedInstructionType","Profiler","enter","leave","ViewCompileFlags","RuntimeCompilationResources","IContainer","all","tslib_1.__decorate"],"mappings":"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"}