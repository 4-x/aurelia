{"version":3,"file":"index.es6.js","sources":["../src/processing.ts","../src/component.ts","../src/view.ts","../src/configuration.ts"],"sourcesContent":["export interface ITemplateImport {\n  plugin: string | null;\n  extension: string | null;\n  basename: string;\n  path: string;\n}\n\nexport interface ITemplateDescription {\n  template: string;\n  imports: ITemplateImport[];\n}\n\nexport function processImports(toProcess: ITemplateImport[], relativeTo: string): string[] {\n  return toProcess.map(x => {\n    if (x.extension === '.html' && !x.plugin) {\n      return `component!${relativeToFile(x.path, relativeTo) + x.extension}`;\n    }\n\n    const relativePath = relativeToFile(x.path, relativeTo);\n    return x.plugin ? `${x.plugin}!${relativePath}` : relativePath;\n  });\n}\n\nconst capitalMatcher = /([A-Z])/g;\n\n/** @internal */\nexport function addHyphenAndLower(char: string): string {\n  return `-${char.toLowerCase()}`;\n}\n\nexport function kebabCase(name: string): string {\n  return (name.charAt(0).toLowerCase() + name.slice(1)).replace(capitalMatcher, addHyphenAndLower);\n}\n\nexport function escape(content: string): string {\n  return content.replace(/(['\\\\])/g, '\\\\$1')\n            .replace(/[\\f]/g, '\\\\f')\n            .replace(/[\\b]/g, '\\\\b')\n            .replace(/[\\n]/g, '\\\\n')\n            .replace(/[\\t]/g, '\\\\t')\n            .replace(/[\\r]/g, '\\\\r')\n            .replace(/[\\u2028]/g, '\\\\u2028')\n            .replace(/[\\u2029]/g, '\\\\u2029');\n}\n\nexport function createTemplateDescription(template: string): ITemplateDescription {\n  const imports: ITemplateImport[] = [];\n  const cleanedTemplate = template.replace(/^@import\\s+\\'([a-zA-z\\/.\\-_!%&\\?=0-9]*)\\'\\s*;/gm, (match: string, url: string) => {\n    imports.push(parseImport(url));\n    return '';\n  });\n\n  return {\n    template: cleanedTemplate.trim(),\n    imports\n  };\n}\n\nexport function parseImport(value: string): ITemplateImport {\n  const result: Partial<ITemplateImport> & Pick<ITemplateImport, 'path'> = {\n    path: value\n  };\n\n  const pluginIndex = result.path.lastIndexOf('!');\n  if (pluginIndex !== -1) {\n    result.plugin = result.path.slice(pluginIndex + 1);\n    result.path = result.path.slice(0, pluginIndex);\n  } else {\n    result.plugin = null;\n  }\n\n  const extensionIndex = result.path.lastIndexOf('.');\n  if (extensionIndex !== -1) {\n    result.extension = result.path.slice(extensionIndex).toLowerCase();\n    result.path = result.path.slice(0, extensionIndex);\n  } else {\n    result.extension = null;\n  }\n\n  const slashIndex = result.path.lastIndexOf('/');\n  if (slashIndex !== -1) {\n    result.basename = result.path.slice(slashIndex + 1);\n  } else {\n    result.basename = result.path;\n  }\n\n  return result as ITemplateImport;\n}\n\nexport function relativeToFile(name: string, file?: string): string {\n  const fileParts = file ? file.split('/') : undefined;\n  const nameParts = name.trim().split('/');\n\n  if (nameParts[0].charAt(0) === '.' && fileParts !== undefined) {\n    //Convert file to array, and lop off the last part,\n    //so that . matches that 'directory' and not name of the file's\n    //module. For instance, file of 'one/two/three', maps to\n    //'one/two/three.js', but we want the directory, 'one/two' for\n    //this normalization.\n    const normalizedBaseParts = fileParts.slice(0, fileParts.length - 1);\n    nameParts.unshift(...normalizedBaseParts);\n  }\n\n  trimDots(nameParts);\n\n  return nameParts.join('/');\n}\n\ninterface Require {\n  nodeRequire(name: string): unknown;\n}\n\ndeclare const require: Require;\n\nexport function loadFromFile(url: string, callback: (content: string) => void, errback?: (error: Error) => void): void {\n  const fs = require.nodeRequire('fs') as {readFileSync(path: string, options?: { encoding?: string } | string): string};\n\n  try {\n    // tslint:disable-next-line:non-literal-fs-path\n    let file = fs.readFileSync(url, 'utf8');\n\n    //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n    if (file[0] === '\\uFEFF') {\n        file = file.substring(1);\n    }\n\n    callback(file);\n  } catch (e) {\n    if (errback !== undefined) {\n      errback(e);\n    }\n  }\n}\n\n/** @internal */\nexport function trimDots(ary: string[]): void {\n  for (let i = 0; i < ary.length; ++i) {\n    const part = ary[i];\n    if (part === '.') {\n      ary.splice(i, 1);\n      i -= 1;\n    } else if (part === '..') {\n      // If at the start, or previous value is still ..,\n      // keep them so that when converted to a path it may\n      // still work when converted to a path, even though\n      // as an ID it is less than ideal. In larger point\n      // releases, may be better to just kick out an error.\n      if (i === 0 || (i === 1 && ary[2] === '..') || ary[i - 1] === '..') {\n        // tslint:disable-next-line:no-redundant-jump\n        continue;\n      } else if (i > 0) {\n        ary.splice(i - 1, 2);\n        i -= 2;\n      }\n    }\n  }\n}\n","import { CustomElementResource } from '@aurelia/runtime';\nimport { createTemplateDescription, escape, kebabCase, loadFromFile, parseImport, processImports } from './processing';\nimport { Require, RequireConfig, RequireOnLoad } from './types';\n\nconst buildMap: Record<string, string> = {};\n\nfunction finishLoad(name: string, content: string, onLoad: (content: string) => void): void {\n  buildMap[name] = content;\n  onLoad(content);\n}\n\nexport function load(name: string, req: Require, onLoad: RequireOnLoad, config: RequireConfig): void {\n  if (config.isBuild) {\n    loadFromFile(\n      req.toUrl(name),\n      function(content: string): void { finishLoad(name, content, onLoad); },\n      function(err: Error): void { if (onLoad.error) { onLoad.error(err); } }\n    );\n  } else {\n    req([`text!${name}`], function(text: string): void {\n      const description = createTemplateDescription(text);\n      const depsToLoad = processImports(description.imports, name);\n\n      req(depsToLoad, function (): void {\n        const templateImport = parseImport(name);\n        const templateSource = {\n          name: kebabCase(templateImport.basename),\n          template: description.template,\n          build: {\n            required: true,\n            compiler: 'default'\n          },\n          dependencies: Array.prototype.slice.call(arguments, 1)\n        };\n\n        onLoad({default: CustomElementResource.define(templateSource)});\n      });\n    });\n  }\n}\n\nexport function write(pluginName: string, moduleName: string, writer: (content: string) => void, _config: RequireConfig): void {\n  if (buildMap.hasOwnProperty(moduleName)) {\n    const templateImport = parseImport(moduleName);\n    const text = buildMap[moduleName];\n    const description = createTemplateDescription(text);\n    const depsToLoad = processImports(description.imports, moduleName);\n    const depsToLoadMapped = depsToLoad.map(x => `\"${x}\"`).join(',');\n\n    depsToLoad.unshift('@aurelia/runtime');\n\n    writer(`define(\"${pluginName}!${moduleName}\", [${depsToLoadMapped}], function () {\n      var Component = arguments[0].Component;\n      var templateSource = {\n        name: '${kebabCase(templateImport.basename)}',\n        template: '${escape(description.template)}',\n        build: {\n          required: true,\n          compiler: 'default'\n        },\n        dependencies: Array.prototype.slice.call(arguments, 1)\n      };\n\n      return { default: Component.element(templateSource) };\n    });\\n`);\n  }\n}\n","import { createTemplateDescription, escape, kebabCase, loadFromFile, parseImport, processImports } from './processing';\nimport { Require, RequireConfig, RequireOnLoad } from './types';\n\nconst buildMap: Record<string, string> = {};\n\n/** @internal */\nexport function finishLoad(name: string, content: string, onLoad: (content: string) => void): void {\n  buildMap[name] = content;\n  onLoad(content);\n}\n\nexport function load(name: string, req: Require, onLoad: RequireOnLoad, config: RequireConfig): void {\n  if (config.isBuild) {\n    loadFromFile(\n      req.toUrl(name),\n      function(content: string): void { finishLoad(name, content, onLoad); },\n      function(error: Error): void { if (onLoad.error) { onLoad.error(error); } }\n    );\n  } else {\n    req([`text!${name}`], function(text: string): void {\n      const description = createTemplateDescription(text);\n      const depsToLoad = processImports(description.imports, name);\n      const templateImport = parseImport(name);\n\n      req(depsToLoad, function (): void {\n        const templateSource = {\n          name: kebabCase(templateImport.basename),\n          template: description.template,\n          build: {\n            required: true,\n            compiler: 'default'\n          },\n          dependencies: Array.prototype.slice.call(arguments)\n        };\n\n        onLoad({default: templateSource});\n      });\n    });\n  }\n}\n\nexport function write(pluginName: string, moduleName: string, writer: (content: string) => void, _config: RequireConfig): void {\n  if (buildMap.hasOwnProperty(moduleName)) {\n    const text = buildMap[moduleName];\n    const description = createTemplateDescription(text);\n    const depsToLoad = processImports(description.imports, moduleName);\n    const depsToLoadMapped = depsToLoad.map(x => `\"${x}\"`).join(',');\n    const templateImport = parseImport(moduleName);\n\n    writer(`define(\"${pluginName}!${moduleName}\", [${depsToLoadMapped}], function () {\n      var templateSource = {\n        name: '${kebabCase(templateImport.basename)}',\n        template: '${escape(description.template)}',\n        build: {\n          required: true,\n          compiler: 'default'\n        },\n        dependencies: Array.prototype.slice.call(arguments)\n      };\n\n      return { default: templateSource };\n    });\\n`);\n  }\n}\n","import * as componentPlugin from './component';\nimport * as viewPlugin from './view';\n\ndeclare function define(name: string, deps: unknown[], moduleObject: {}): void;\nconst nonAnonDefine = define;\n\nexport function installRequireJSPlugins(): void {\n  nonAnonDefine('view', [], viewPlugin);\n  nonAnonDefine('component', [], componentPlugin);\n}\n"],"names":["buildMap","finishLoad","load","write"],"mappings":";;SAYgB,cAAc,CAAC,SAA4B,EAAE,UAAkB;IAC7E,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,CAAC,SAAS,KAAK,OAAO,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE;YACxC,OAAO,aAAa,cAAc,CAAC,CAAC,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;SACxE;QAED,MAAM,YAAY,GAAG,cAAc,CAAC,CAAC,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QACxD,OAAO,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,MAAM,IAAI,YAAY,EAAE,GAAG,YAAY,CAAC;KAChE,CAAC,CAAC;CACJ;AAED,MAAM,cAAc,GAAG,UAAU,CAAC;;AAGlC,SAAgB,iBAAiB,CAAC,IAAY;IAC5C,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC;CACjC;AAED,SAAgB,SAAS,CAAC,IAAY;IACpC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC;CAClG;AAED,SAAgB,MAAM,CAAC,OAAe;IACpC,OAAO,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;SAC/B,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;SACvB,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;SACvB,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;SACvB,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;SACvB,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;SACvB,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC;SAC/B,OAAO,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;CAC5C;AAED,SAAgB,yBAAyB,CAAC,QAAgB;IACxD,MAAM,OAAO,GAAsB,EAAE,CAAC;IACtC,MAAM,eAAe,GAAG,QAAQ,CAAC,OAAO,CAAC,iDAAiD,EAAE,CAAC,KAAa,EAAE,GAAW;QACrH,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QAC/B,OAAO,EAAE,CAAC;KACX,CAAC,CAAC;IAEH,OAAO;QACL,QAAQ,EAAE,eAAe,CAAC,IAAI,EAAE;QAChC,OAAO;KACR,CAAC;CACH;AAED,SAAgB,WAAW,CAAC,KAAa;IACvC,MAAM,MAAM,GAA6D;QACvE,IAAI,EAAE,KAAK;KACZ,CAAC;IAEF,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACjD,IAAI,WAAW,KAAK,CAAC,CAAC,EAAE;QACtB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC;KACjD;SAAM;QACL,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;KACtB;IAED,MAAM,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACpD,IAAI,cAAc,KAAK,CAAC,CAAC,EAAE;QACzB,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAC;QACnE,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;KACpD;SAAM;QACL,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;KACzB;IAED,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IAChD,IAAI,UAAU,KAAK,CAAC,CAAC,EAAE;QACrB,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;KACrD;SAAM;QACL,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC;KAC/B;IAED,OAAO,MAAyB,CAAC;CAClC;AAED,SAAgB,cAAc,CAAC,IAAY,EAAE,IAAa;IACxD,MAAM,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;IACrD,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEzC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,SAAS,KAAK,SAAS,EAAE;;;;;;QAM7D,MAAM,mBAAmB,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACrE,SAAS,CAAC,OAAO,CAAC,GAAG,mBAAmB,CAAC,CAAC;KAC3C;IAED,QAAQ,CAAC,SAAS,CAAC,CAAC;IAEpB,OAAO,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC5B;AAQD,SAAgB,YAAY,CAAC,GAAW,EAAE,QAAmC,EAAE,OAAgC;IAC7G,MAAM,EAAE,GAAG,OAAO,CAAC,WAAW,CAAC,IAAI,CAAmF,CAAC;IAEvH,IAAI;;QAEF,IAAI,IAAI,GAAG,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;QAGxC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;YACtB,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SAC5B;QAED,QAAQ,CAAC,IAAI,CAAC,CAAC;KAChB;IAAC,OAAO,CAAC,EAAE;QACV,IAAI,OAAO,KAAK,SAAS,EAAE;YACzB,OAAO,CAAC,CAAC,CAAC,CAAC;SACZ;KACF;CACF;;AAGD,SAAgB,QAAQ,CAAC,GAAa;IACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QACnC,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,IAAI,KAAK,GAAG,EAAE;YAChB,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjB,CAAC,IAAI,CAAC,CAAC;SACR;aAAM,IAAI,IAAI,KAAK,IAAI,EAAE;;;;;;YAMxB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;;gBAElE,SAAS;aACV;iBAAM,IAAI,CAAC,GAAG,CAAC,EAAE;gBAChB,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBACrB,CAAC,IAAI,CAAC,CAAC;aACR;SACF;KACF;CACF;;ACxJD,MAAM,QAAQ,GAA2B,EAAE,CAAC;AAE5C,SAAS,UAAU,CAAC,IAAY,EAAE,OAAe,EAAE,MAAiC;IAClF,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;IACzB,MAAM,CAAC,OAAO,CAAC,CAAC;CACjB;AAED,SAAgB,IAAI,CAAC,IAAY,EAAE,GAAY,EAAE,MAAqB,EAAE,MAAqB;IAC3F,IAAI,MAAM,CAAC,OAAO,EAAE;QAClB,YAAY,CACV,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EACf,UAAS,OAAe,IAAU,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,EAAE,EACtE,UAAS,GAAU,IAAU,IAAI,MAAM,CAAC,KAAK,EAAE;YAAE,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAAE,EAAE,CACxE,CAAC;KACH;SAAM;QACL,GAAG,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAE,UAAS,IAAY;YACzC,MAAM,WAAW,GAAG,yBAAyB,CAAC,IAAI,CAAC,CAAC;YACpD,MAAM,UAAU,GAAG,cAAc,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAE7D,GAAG,CAAC,UAAU,EAAE;gBACd,MAAM,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;gBACzC,MAAM,cAAc,GAAG;oBACrB,IAAI,EAAE,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACxC,QAAQ,EAAE,WAAW,CAAC,QAAQ;oBAC9B,KAAK,EAAE;wBACL,QAAQ,EAAE,IAAI;wBACd,QAAQ,EAAE,SAAS;qBACpB;oBACD,YAAY,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;iBACvD,CAAC;gBAEF,MAAM,CAAC,EAAC,OAAO,EAAE,qBAAqB,CAAC,MAAM,CAAC,cAAc,CAAC,EAAC,CAAC,CAAC;aACjE,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;CACF;AAED,SAAgB,KAAK,CAAC,UAAkB,EAAE,UAAkB,EAAE,MAAiC,EAAE,OAAsB;IACrH,IAAI,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;QACvC,MAAM,cAAc,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC;QAC/C,MAAM,IAAI,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;QAClC,MAAM,WAAW,GAAG,yBAAyB,CAAC,IAAI,CAAC,CAAC;QACpD,MAAM,UAAU,GAAG,cAAc,CAAC,WAAW,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QACnE,MAAM,gBAAgB,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEjE,UAAU,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAEvC,MAAM,CAAC,WAAW,UAAU,IAAI,UAAU,OAAO,gBAAgB;;;iBAGpD,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC;qBAC9B,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;;;;;;;;;UASvC,CAAC,CAAC;KACT;CACF;;;;;;;AC/DD,MAAMA,UAAQ,GAA2B,EAAE,CAAC;;AAG5C,SAAgBC,YAAU,CAAC,IAAY,EAAE,OAAe,EAAE,MAAiC;IACzFD,UAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;IACzB,MAAM,CAAC,OAAO,CAAC,CAAC;CACjB;AAED,SAAgBE,MAAI,CAAC,IAAY,EAAE,GAAY,EAAE,MAAqB,EAAE,MAAqB;IAC3F,IAAI,MAAM,CAAC,OAAO,EAAE;QAClB,YAAY,CACV,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EACf,UAAS,OAAe,IAAUD,YAAU,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,EAAE,EACtE,UAAS,KAAY,IAAU,IAAI,MAAM,CAAC,KAAK,EAAE;YAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAAE,EAAE,CAC5E,CAAC;KACH;SAAM;QACL,GAAG,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAE,UAAS,IAAY;YACzC,MAAM,WAAW,GAAG,yBAAyB,CAAC,IAAI,CAAC,CAAC;YACpD,MAAM,UAAU,GAAG,cAAc,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAC7D,MAAM,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;YAEzC,GAAG,CAAC,UAAU,EAAE;gBACd,MAAM,cAAc,GAAG;oBACrB,IAAI,EAAE,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACxC,QAAQ,EAAE,WAAW,CAAC,QAAQ;oBAC9B,KAAK,EAAE;wBACL,QAAQ,EAAE,IAAI;wBACd,QAAQ,EAAE,SAAS;qBACpB;oBACD,YAAY,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;iBACpD,CAAC;gBAEF,MAAM,CAAC,EAAC,OAAO,EAAE,cAAc,EAAC,CAAC,CAAC;aACnC,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;CACF;AAED,SAAgBE,OAAK,CAAC,UAAkB,EAAE,UAAkB,EAAE,MAAiC,EAAE,OAAsB;IACrH,IAAIH,UAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE;QACvC,MAAM,IAAI,GAAGA,UAAQ,CAAC,UAAU,CAAC,CAAC;QAClC,MAAM,WAAW,GAAG,yBAAyB,CAAC,IAAI,CAAC,CAAC;QACpD,MAAM,UAAU,GAAG,cAAc,CAAC,WAAW,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QACnE,MAAM,gBAAgB,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjE,MAAM,cAAc,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC;QAE/C,MAAM,CAAC,WAAW,UAAU,IAAI,UAAU,OAAO,gBAAgB;;iBAEpD,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC;qBAC9B,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;;;;;;;;;UASvC,CAAC,CAAC;KACT;CACF;;;;;;;;AC3DD,MAAM,aAAa,GAAG,MAAM,CAAC;AAE7B,SAAgB,uBAAuB;IACrC,aAAa,CAAC,MAAM,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC;IACtC,aAAa,CAAC,WAAW,EAAE,EAAE,EAAE,eAAe,CAAC,CAAC;CACjD;;;;"}