function processImports(e,n){return e.map(e=>{if(".html"===e.t&&!e.o)return`component!${relativeToFile(e.path,n)+e.t}`;const t=relativeToFile(e.path,n);return e.o?`${e.o}!${t}`:t})}function addHyphenAndLower(e){return`-${e.toLowerCase()}`}function kebabCase(name){return(name.charAt(0).toLowerCase()+name.slice(1)).replace(capitalMatcher,addHyphenAndLower)}function escape(e){return e.replace(/(['\\])/g,"\\$1").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r").replace(/[\u2028]/g,"\\u2028").replace(/[\u2029]/g,"\\u2029")}function createTemplateDescription(template){const e=[];return{template:template.replace(/^@import\s+\'([a-zA-z\/.\-_!%&\?=0-9]*)\'\s*;/gm,(n,t)=>(e.push(parseImport(t)),"")).trim(),imports:e}}function parseImport(value){const e={path:value},n=e.path.lastIndexOf("!");-1!==n?(e.o=e.path.slice(n+1),e.path=e.path.slice(0,n)):e.o=null;const t=e.path.lastIndexOf(".");-1!==t?(e.t=e.path.slice(t).toLowerCase(),e.path=e.path.slice(0,t)):e.t=null;const o=e.path.lastIndexOf("/");return e.i=-1!==o?e.path.slice(o+1):e.path,e}function relativeToFile(name,e){const n=e?e.split("/"):void 0,t=name.trim().split("/");if("."===t[0].charAt(0)&&void 0!==n){const e=n.slice(0,n.length-1);t.unshift(...e)}return trimDots(t),t.join("/")}function loadFromFile(e,n,t){const o=require.nodeRequire("fs");try{let i=o.l(e,"utf8");"\ufeff"===i[0]&&(i=i.substring(1)),n(i)}catch(e){void 0!==t&&t(e)}}function trimDots(e){for(let n=0;e.length>n;++n){const t=e[n];if("."===t)e.splice(n,1),n-=1;else if(".."===t){if(0===n||1===n&&".."===e[2]||".."===e[n-1])continue;n>0&&(e.splice(n-1,2),n-=2)}}}function finishLoad(name,e,n){buildMap[name]=e,n(e)}function load(name,e,n,t){t.u?loadFromFile(e.s(name),function(e){finishLoad(name,e,n)},function(e){n.error&&n.error(e)}):e([`text!${name}`],function(t){const o=createTemplateDescription(t),i=processImports(o.imports,name);e(i,function(){const e={name:kebabCase(parseImport(name).i),template:o.template,build:{required:1,compiler:"default"},dependencies:[].slice.call(arguments,1)};n({default:CustomElementResource.p(e,null)})})})}function write(e,n,t){if(buildMap.hasOwnProperty(n)){const o=parseImport(n),i=createTemplateDescription(buildMap[n]),r=processImports(i.imports,n),a=r.map(e=>`"${e}"`).join(",");r.unshift("@aurelia/runtime"),t(`define("${e}!${n}", [${a}], function () {\n      var Component = arguments[0].Component;\n      var templateSource = {\n        name: '${kebabCase(o.i)}',\n        template: '${escape(i.template)}',\n        build: {\n          required: true,\n          compiler: 'default'\n        },\n        dependencies: Array.prototype.slice.call(arguments, 1)\n      };\n\n      return { default: Component.element(templateSource) };\n    });\n`)}}function finishLoad$1(name,e,n){buildMap$1[name]=e,n(e)}function load$1(name,e,n,t){t.u?loadFromFile(e.s(name),function(e){finishLoad$1(name,e,n)},function(e){n.error&&n.error(e)}):e([`text!${name}`],function(t){const o=createTemplateDescription(t),i=processImports(o.imports,name),r=parseImport(name);e(i,function(){const e={name:kebabCase(r.i),template:o.template,build:{required:1,compiler:"default"},dependencies:[].slice.call(arguments)};n({default:e})})})}function write$1(e,n,t){if(buildMap$1.hasOwnProperty(n)){const o=createTemplateDescription(buildMap$1[n]);t(`define("${e}!${n}", [${processImports(o.imports,n).map(e=>`"${e}"`).join(",")}], function () {\n      var templateSource = {\n        name: '${kebabCase(parseImport(n).i)}',\n        template: '${escape(o.template)}',\n        build: {\n          required: true,\n          compiler: 'default'\n        },\n        dependencies: Array.prototype.slice.call(arguments)\n      };\n\n      return { default: templateSource };\n    });\n`)}}function installRequireJSPlugins(){nonAnonDefine("view",[],viewPlugin),nonAnonDefine("component",[],componentPlugin)}var componentPlugin,viewPlugin;import{CustomElementResource}from"@aurelia/runtime";const capitalMatcher=/([A-Z])/g,buildMap={};componentPlugin=Object.freeze({load,write});const buildMap$1={};viewPlugin=Object.freeze({m:finishLoad$1,load:load$1,write:write$1});const nonAnonDefine=define;export{addHyphenAndLower,createTemplateDescription,escape,installRequireJSPlugins,kebabCase,load as loadComponent,loadFromFile,load$1 as loadView,parseImport,processImports,relativeToFile,trimDots,write as writeComponent,write$1 as writeView};
