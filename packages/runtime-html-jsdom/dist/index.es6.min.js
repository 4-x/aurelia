import{DI,Registration,IContainer}from"@aurelia/kernel";import{IDOMInitializer,IDOM}from"@aurelia/runtime";import{BasicConfiguration as BasicConfiguration$1,HTMLDOM}from"@aurelia/runtime-html";import{JSDOM}from"jsdom";class JSDOMInitializer{constructor(i){this.i=i,this.t=new JSDOM}static register(i){return Registration.singleton(IDOMInitializer,this).register(i)}initialize(i){if(this.i.has(IDOM,0))return this.i.get(IDOM);let dom;return void 0!==i?void 0!==i.dom?dom=i.dom:i.host.ownerDocument?dom=new HTMLDOM(this.t.window,i.host.ownerDocument,this.t.window.Node,this.t.window.Element,this.t.window.HTMLElement,this.t.window.CustomEvent):(void 0!==i.host&&this.t.window.document.body.appendChild(i.host),dom=new HTMLDOM(this.t.window,this.t.window.document,this.t.window.Node,this.t.window.Element,this.t.window.HTMLElement,this.t.window.CustomEvent)):dom=new HTMLDOM(this.t.window,this.t.window.document,this.t.window.Node,this.t.window.Element,this.t.window.HTMLElement,this.t.window.CustomEvent),Registration.s(IDOM,dom).register(this.i),dom}}JSDOMInitializer.inject=[IContainer];const IDOMInitializerRegistration=JSDOMInitializer,DefaultComponents=[JSDOMInitializer],BasicConfiguration={register:i=>BasicConfiguration$1.register(i).register(...DefaultComponents),o(){return this.register(DI.o())}};export{BasicConfiguration,DefaultComponents,IDOMInitializerRegistration};
