{"version":3,"file":"index.iife.js","sources":["../src/binding/listener.ts","../../../node_modules/tslib/tslib.es6.js","../src/observation/element-attribute-observer.ts","../src/binding/attribute.ts","../src/observation/attribute-ns-accessor.ts","../src/observation/checked-observer.ts","../src/observation/class-attribute-accessor.ts","../src/observation/data-attribute-accessor.ts","../src/observation/element-property-accessor.ts","../src/observation/event-manager.ts","../src/observation/select-value-observer.ts","../src/observation/style-attribute-accessor.ts","../src/observation/svg-analyzer.ts","../src/observation/value-attribute-observer.ts","../src/observation/observer-locator.ts","../src/resources/binding-behaviors/attr.ts","../src/resources/binding-behaviors/self.ts","../src/resources/binding-behaviors/update-trigger.ts","../src/definitions.ts","../src/instructions.ts","../src/create-element.ts","../src/resources/custom-elements/compose.ts","../src/dom.ts","../src/html-renderer.ts","../src/projectors.ts","../src/configuration.ts"],"sourcesContent":["import { IDisposable, IIndexable, IServiceLocator, Tracer } from '@aurelia/kernel';\nimport {\n  DelegationStrategy,\n  hasBind,\n  hasUnbind,\n  IBinding,\n  IConnectableBinding,\n  IDOM,\n  IsBindingBehavior,\n  IScope,\n  LifecycleFlags,\n  State\n} from '@aurelia/runtime';\nimport { IEventManager } from '../observation/event-manager';\n\nconst slice = Array.prototype.slice;\n\nexport interface Listener extends IConnectableBinding {}\n/**\n * Listener binding. Handle event binding between view and view model\n */\nexport class Listener implements IBinding {\n  public dom: IDOM;\n\n  public $nextBinding: IBinding;\n  public $prevBinding: IBinding;\n  public $state: State;\n  public $scope: IScope;\n\n  public delegationStrategy: DelegationStrategy;\n  public locator: IServiceLocator;\n  public preventDefault: boolean;\n  public sourceExpression: IsBindingBehavior;\n  public target: Node;\n  public targetEvent: string;\n\n  private readonly eventManager: IEventManager;\n  private handler: IDisposable;\n\n  // tslint:disable-next-line:parameters-max-number\n  constructor(\n    dom: IDOM,\n    targetEvent: string,\n    delegationStrategy: DelegationStrategy,\n    sourceExpression: IsBindingBehavior,\n    target: Node,\n    preventDefault: boolean,\n    eventManager: IEventManager,\n    locator: IServiceLocator\n  ) {\n    this.dom = dom;\n    this.$nextBinding = null;\n    this.$prevBinding = null;\n    this.$state = State.none;\n\n    this.delegationStrategy = delegationStrategy;\n    this.locator = locator;\n    this.preventDefault = preventDefault;\n    this.sourceExpression = sourceExpression;\n    this.target = target;\n    this.targetEvent = targetEvent;\n\n    this.eventManager = eventManager;\n  }\n\n  public callSource(event: Event): ReturnType<IsBindingBehavior['evaluate']> {\n    if (Tracer.enabled) { Tracer.enter('Listener', 'callSource', slice.call(arguments)); }\n    const overrideContext = this.$scope.overrideContext;\n    overrideContext.$event = event;\n\n    const result = this.sourceExpression.evaluate(LifecycleFlags.mustEvaluate, this.$scope, this.locator);\n\n    Reflect.deleteProperty(overrideContext, '$event');\n\n    if (result !== true && this.preventDefault) {\n      event.preventDefault();\n    }\n\n    if (Tracer.enabled) { Tracer.leave(); }\n    return result;\n  }\n\n  public handleEvent(event: Event): void {\n    this.callSource(event);\n  }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (Tracer.enabled) { Tracer.enter('Listener', '$bind', slice.call(arguments)); }\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        if (Tracer.enabled) { Tracer.leave(); }\n        return;\n      }\n\n      this.$unbind(flags | LifecycleFlags.fromBind);\n    }\n    // add isBinding flag\n    this.$state |= State.isBinding;\n\n    this.$scope = scope;\n\n    const sourceExpression = this.sourceExpression;\n    if (hasBind(sourceExpression)) {\n      sourceExpression.bind(flags, scope, this);\n    }\n\n    this.handler = this.eventManager.addEventListener(\n      this.dom,\n      this.target,\n      this.targetEvent,\n      this,\n      this.delegationStrategy\n    );\n\n    // add isBound flag and remove isBinding flag\n    this.$state |= State.isBound;\n    this.$state &= ~State.isBinding;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Listener', '$unbind', slice.call(arguments)); }\n    if (!(this.$state & State.isBound)) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    const sourceExpression = this.sourceExpression;\n    if (hasUnbind(sourceExpression)) {\n      sourceExpression.unbind(flags, this.$scope, this);\n    }\n\n    this.$scope = null;\n    this.handler.dispose();\n    this.handler = null;\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public observeProperty(flags: LifecycleFlags, obj: IIndexable, propertyName: string): void {\n    return;\n  }\n\n  public handleChange(newValue: unknown, previousValue: unknown, flags: LifecycleFlags): void {\n    return;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  DOM,\n  IBatchedCollectionSubscriber,\n  IBindingTargetObserver,\n  ILifecycle,\n  IObserverLocator,\n  IPropertySubscriber,\n  LifecycleFlags,\n  targetObserver\n} from '@aurelia/runtime';\n\nexport interface IHtmlElement extends HTMLElement {\n  $mObserver: MutationObserver;\n  $eMObservers: Set<ElementMutationSubscription>;\n}\n\nexport interface ElementMutationSubscription {\n  handleMutation(mutationRecords: MutationRecord[]): void;\n}\n\nexport interface AttributeObserver extends\n  IBindingTargetObserver<IHtmlElement, string>,\n  IBatchedCollectionSubscriber,\n  IPropertySubscriber { }\n\n/**\n * Observer for handling two-way binding with attributes\n * Has different strategy for class/style and normal attributes\n * TODO: handle SVG/attributes with namespace\n */\n@targetObserver('')\nexport class AttributeObserver implements AttributeObserver, ElementMutationSubscription {\n\n  // observation related properties\n  public readonly isDOMObserver: true;\n  public readonly persistentFlags: LifecycleFlags;\n  public observerLocator: IObserverLocator;\n  public lifecycle: ILifecycle;\n  public currentValue: unknown;\n  public currentFlags: LifecycleFlags;\n  public oldValue: unknown;\n  public defaultValue: unknown;\n\n  // DOM related properties\n  public obj: IHtmlElement;\n  private readonly targetAttribute: string;\n\n  constructor(\n    flags: LifecycleFlags,\n    lifecycle: ILifecycle,\n    observerLocator: IObserverLocator,\n    element: Element,\n    targetAttribute: string,\n    targetKey: string\n  ) {\n    this.isDOMObserver = true;\n    this.persistentFlags = flags & LifecycleFlags.persistentBindingFlags;\n    this.observerLocator = observerLocator;\n    this.lifecycle = lifecycle;\n    this.obj = element as IHtmlElement;\n    this.targetAttribute = targetAttribute;\n    if (targetAttribute === 'class') {\n      this.handleMutationCore = this.handleMutationClassName;\n      this.setValueCore = this.setValueCoreClassName;\n      this.getValue = this.getValueClassName;\n    } else if (targetAttribute === 'style') {\n      this.handleMutationCore = this.handleMutationInlineStyle;\n      this.setValueCore = this.setValueCoreInlineStyle;\n      this.getValue = this.getValueInlineStyle;\n    }\n    this.propertyKey = targetKey;\n  }\n\n  public getValue(): unknown {\n    return this.obj.getAttribute(this.propertyKey);\n  }\n\n  public getValueInlineStyle(): string {\n    return this.obj.style.getPropertyValue(this.propertyKey);\n  }\n  public getValueClassName(): boolean {\n    return this.obj.classList.contains(this.propertyKey);\n  }\n\n  public setValueCore(newValue: unknown, flags: LifecycleFlags): void {\n    const obj = this.obj;\n    const targetAttribute = this.targetAttribute;\n    if (newValue === null || newValue === undefined) {\n      obj.removeAttribute(targetAttribute);\n    } else {\n      obj.setAttribute(targetAttribute, newValue as string);\n    }\n  }\n  public setValueCoreInlineStyle(value: unknown): void {\n    let priority = '';\n\n    if (typeof value === 'string' && value.indexOf('!important') !== -1) {\n      priority = 'important';\n      value = value.replace('!important', '');\n    }\n    this.obj.style.setProperty(this.propertyKey, value as string, priority);\n  }\n  public setValueCoreClassName(newValue: unknown): void {\n    const className = this.propertyKey;\n    const classList = this.obj.classList;\n    // Why is class attribute observer setValue look different with class attribute accessor?\n    // ==============\n    // For class list\n    // newValue is simply checked if truthy or falsy\n    // and toggle the class accordingly\n    // -- the rule of this is quite different to normal attribute\n    //\n    // for class attribute, observer is different in a way that it only observe a particular class at a time\n    // this also comes from syntax, where it would typically be my-class.class=\"someProperty\"\n    //\n    // so there is no need for separating class by space and add all of them like class accessor\n    if (newValue) {\n      classList.add(className);\n    } else {\n      classList.remove(className);\n    }\n  }\n\n  public handleMutation(mutationRecords: MutationRecord[]): void {\n    let shouldProcess = false;\n    for (let i = 0, ii = mutationRecords.length; ii > i; ++i) {\n      const record = mutationRecords[i];\n      if (record.type === 'attributes' && record.attributeName === this.targetAttribute) {\n        shouldProcess = true;\n        break;\n      }\n    }\n    if (shouldProcess) {\n      this.handleMutationCore();\n    }\n  }\n  public handleMutationCore(): void {\n    const newValue = this.obj.getAttribute(this.targetAttribute);\n    if (newValue !== this.currentValue) {\n      this.currentValue = newValue;\n      this.setValue(newValue, LifecycleFlags.none);\n    }\n  }\n  public handleMutationInlineStyle(): void {\n    const css = this.obj.style;\n    const rule = this.propertyKey;\n    const newValue = css.getPropertyValue(rule);\n    if (newValue !== this.currentValue) {\n      this.currentValue = newValue;\n      this.setValue(newValue, LifecycleFlags.none);\n    }\n  }\n  public handleMutationClassName(): void {\n    const className = this.propertyKey;\n    const newValue = this.obj.classList.contains(className);\n    if (newValue !== this.currentValue) {\n      this.currentValue = newValue;\n      this.setValue(newValue, LifecycleFlags.none);\n    }\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.hasSubscribers()) {\n      startObservation(this.obj, this);\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    if (this.removeSubscriber(subscriber) && !this.hasSubscribers()) {\n      stopObservation(this.obj, this);\n    }\n  }\n}\n\nconst startObservation = (element: IHtmlElement, subscription: ElementMutationSubscription): void => {\n  if (element.$eMObservers === undefined) {\n    element.$eMObservers = new Set();\n  }\n  if (element.$mObserver === undefined) {\n    element.$mObserver = DOM.createNodeObserver(\n      element,\n      handleMutation,\n      { attributes: true }\n    ) as MutationObserver;\n  }\n  element.$eMObservers.add(subscription);\n};\n\nconst stopObservation = (element: IHtmlElement, subscription: ElementMutationSubscription): boolean => {\n  const $eMObservers = element.$eMObservers;\n  if ($eMObservers.delete(subscription)) {\n    if ($eMObservers.size === 0) {\n      element.$mObserver.disconnect();\n      element.$mObserver = undefined;\n    }\n    return true;\n  }\n  return false;\n};\n\nconst handleMutation = (mutationRecords: MutationRecord[]): void => {\n  (mutationRecords[0].target as IHtmlElement).$eMObservers.forEach(invokeHandleMutation, mutationRecords);\n};\n\nfunction invokeHandleMutation(this: MutationRecord[], s: ElementMutationSubscription): void {\n  s.handleMutation(this);\n}\n","import { IServiceLocator, Reporter, Tracer } from '@aurelia/kernel';\nimport { AccessorOrObserver, BindingMode, connectable, ExpressionKind, hasBind, hasUnbind, IBinding, IBindingTargetObserver, IConnectableBinding, IForOfStatement, ILifecycle, IObserverLocator, IPartialConnectableBinding, IsBindingBehavior, IScope, LifecycleFlags, State } from '@aurelia/runtime';\nimport { AttributeObserver } from '../observation/element-attribute-observer';\n\nconst slice = Array.prototype.slice;\n\n// BindingMode is not a const enum (and therefore not inlined), so assigning them to a variable to save a member accessor is a minor perf tweak\nconst { oneTime, toView, fromView } = BindingMode;\n\n// pre-combining flags for bitwise checks is a minor perf tweak\nconst toViewOrOneTime = toView | oneTime;\n\nexport interface AttributeBinding extends IConnectableBinding {}\n\n/**\n * Attribute binding. Handle attribute binding betwen view/view model. Understand Html special attributes\n */\n@connectable()\nexport class AttributeBinding implements IPartialConnectableBinding {\n  public $nextBinding: IBinding;\n  public $prevBinding: IBinding;\n  public $state: State;\n  public $lifecycle: ILifecycle;\n  public $nextConnect: IConnectableBinding;\n  public $nextPatch: IConnectableBinding;\n  public $scope: IScope;\n\n  public locator: IServiceLocator;\n  public mode: BindingMode;\n  public observerLocator: IObserverLocator;\n  public sourceExpression: IsBindingBehavior | IForOfStatement;\n  public target: Element;\n  public targetAttribute: string;\n  /**\n   * Target key. In case Attr has inner structure, such as class -> classList, style -> CSSStyleDeclaration\n   */\n  public targetProperty: string;\n\n  public targetObserver: AccessorOrObserver;\n\n  public persistentFlags: LifecycleFlags;\n\n  constructor(\n    sourceExpression: IsBindingBehavior | IForOfStatement,\n    target: Element,\n    // some attributes may have inner structure\n    // such as class -> collection of class names\n    // such as style -> collection of style rules\n    //\n    // for normal attributes, targetAttribute and targetProperty are the same and can be ignore\n    targetAttribute: string,\n    targetKey: string,\n    mode: BindingMode,\n    observerLocator: IObserverLocator,\n    locator: IServiceLocator\n  ) {\n    connectable.assignIdTo(this);\n    this.$nextBinding = null;\n    this.$prevBinding = null;\n    this.$state = State.none;\n    this.$lifecycle = locator.get(ILifecycle);\n    this.$nextConnect = null;\n    this.$nextPatch = null;\n    this.$scope = null;\n\n    this.locator = locator;\n    this.mode = mode;\n    this.observerLocator = observerLocator;\n    this.sourceExpression = sourceExpression;\n    this.target = target;\n    this.targetAttribute = targetAttribute;\n    this.targetProperty = targetKey;\n    this.persistentFlags = LifecycleFlags.none;\n  }\n\n  public updateTarget(value: unknown, flags: LifecycleFlags): void {\n    flags |= this.persistentFlags;\n    this.targetObserver.setValue(value, flags | LifecycleFlags.updateTargetInstance);\n  }\n\n  public updateSource(value: unknown, flags: LifecycleFlags): void {\n    flags |= this.persistentFlags;\n    this.sourceExpression.assign(flags | LifecycleFlags.updateSourceExpression, this.$scope, this.locator, value);\n  }\n\n  public handleChange(newValue: unknown, _previousValue: unknown, flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Binding', 'handleChange', slice.call(arguments)); }\n    if (!(this.$state & State.isBound)) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n\n    flags |= this.persistentFlags;\n\n    if (this.mode === BindingMode.fromView) {\n      flags &= ~LifecycleFlags.updateTargetInstance;\n      flags |= LifecycleFlags.updateSourceExpression;\n    }\n\n    if (flags & LifecycleFlags.updateTargetInstance) {\n      const previousValue = this.targetObserver.getValue();\n      // if the only observable is an AccessScope then we can assume the passed-in newValue is the correct and latest value\n      if (this.sourceExpression.$kind !== ExpressionKind.AccessScope || this.observerSlots > 1) {\n        newValue = this.sourceExpression.evaluate(flags, this.$scope, this.locator);\n      }\n      if (newValue !== previousValue) {\n        this.updateTarget(newValue, flags);\n      }\n      if ((this.mode & oneTime) === 0) {\n        this.version++;\n        this.sourceExpression.connect(flags, this.$scope, this);\n        this.unobserve(false);\n      }\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n\n    if (flags & LifecycleFlags.updateSourceExpression) {\n      if (newValue !== this.sourceExpression.evaluate(flags, this.$scope, this.locator)) {\n        this.updateSource(newValue, flags);\n      }\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n\n    throw Reporter.error(15, flags);\n  }\n\n  public $bind(flags: LifecycleFlags, scope: IScope): void {\n    if (Tracer.enabled) { Tracer.enter('Binding', '$bind', slice.call(arguments)); }\n    if (this.$state & State.isBound) {\n      if (this.$scope === scope) {\n        if (Tracer.enabled) { Tracer.leave(); }\n        return;\n      }\n      this.$unbind(flags | LifecycleFlags.fromBind);\n    }\n    // add isBinding flag\n    this.$state |= State.isBinding;\n\n    // Store flags which we can only receive during $bind and need to pass on\n    // to the AST during evaluate/connect/assign\n    this.persistentFlags = flags & LifecycleFlags.persistentBindingFlags;\n\n    this.$scope = scope;\n\n    let sourceExpression = this.sourceExpression;\n    if (hasBind(sourceExpression)) {\n      sourceExpression.bind(flags, scope, this);\n    }\n\n    let targetObserver = this.targetObserver as IBindingTargetObserver;\n    if (!targetObserver) {\n      targetObserver = this.targetObserver = new AttributeObserver(\n        LifecycleFlags.fromBind,\n        this.$lifecycle,\n        this.observerLocator,\n        this.target,\n        this.targetAttribute,\n        this.targetProperty\n      );\n    }\n    if (targetObserver.bind) {\n      targetObserver.bind(flags);\n    }\n\n    // during bind, binding behavior might have changed sourceExpression\n    sourceExpression = this.sourceExpression;\n    if (this.mode & toViewOrOneTime) {\n      this.updateTarget(sourceExpression.evaluate(flags, scope, this.locator), flags);\n    }\n    if (this.mode & toView) {\n      sourceExpression.connect(flags, scope, this);\n    }\n    if (this.mode & fromView) {\n      targetObserver[this.id] |= LifecycleFlags.updateSourceExpression;\n      targetObserver.subscribe(this);\n    }\n\n    // add isBound flag and remove isBinding flag\n    this.$state |= State.isBound;\n    this.$state &= ~State.isBinding;\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public $unbind(flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Binding', '$unbind', slice.call(arguments)); }\n    if (!(this.$state & State.isBound)) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return;\n    }\n    // add isUnbinding flag\n    this.$state |= State.isUnbinding;\n\n    // clear persistent flags\n    this.persistentFlags = LifecycleFlags.none;\n\n    if (hasUnbind(this.sourceExpression)) {\n      this.sourceExpression.unbind(flags, this.$scope, this);\n    }\n    this.$scope = null;\n\n    if ((this.targetObserver as IBindingTargetObserver).unbind) {\n      (this.targetObserver as IBindingTargetObserver).unbind(flags);\n    }\n    if ((this.targetObserver as IBindingTargetObserver).unsubscribe) {\n      (this.targetObserver as IBindingTargetObserver).unsubscribe(this);\n      this.targetObserver[this.id] &= ~LifecycleFlags.updateSourceExpression;\n    }\n    this.unobserve(true);\n\n    // remove isBound and isUnbinding flags\n    this.$state &= ~(State.isBound | State.isUnbinding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public connect(flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Binding', 'connect', slice.call(arguments)); }\n    if (this.$state & State.isBound) {\n      flags |= this.persistentFlags;\n      this.sourceExpression.connect(flags | LifecycleFlags.mustEvaluate, this.$scope, this);\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public patch(flags: LifecycleFlags): void {\n    if (Tracer.enabled) { Tracer.enter('Binding', 'patch', slice.call(arguments)); }\n    if (this.$state & State.isBound) {\n      flags |= this.persistentFlags;\n      this.updateTarget(this.sourceExpression.evaluate(flags | LifecycleFlags.mustEvaluate, this.$scope, this.locator), flags);\n    }\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n","import { IBindingTargetAccessor, ILifecycle, targetObserver } from '@aurelia/runtime';\n\nexport interface AttributeNSAccessor extends IBindingTargetAccessor<HTMLElement, string, string> {}\n\n@targetObserver('')\nexport class AttributeNSAccessor implements AttributeNSAccessor {\n  public readonly isDOMObserver: true;\n  public attributeName: string;\n  public currentValue: string;\n  public defaultValue: string;\n  public lifecycle: ILifecycle;\n  public obj: HTMLElement;\n  public oldValue: string;\n  public propertyKey: string;\n  public namespace: string;\n\n  constructor(lifecycle: ILifecycle, obj: HTMLElement, propertyKey: string, attributeName: string, namespace: string) {\n    this.isDOMObserver = true;\n    this.attributeName = attributeName;\n    this.lifecycle = lifecycle;\n    this.obj = obj;\n    this.oldValue = this.currentValue = this.getValue();\n    this.propertyKey = propertyKey;\n    this.namespace = namespace;\n  }\n\n  public getValue(): string {\n    return this.obj.getAttributeNS(this.namespace, this.attributeName);\n  }\n\n  public setValueCore(newValue: string): void {\n    this.obj.setAttributeNS(this.namespace, this.attributeName, newValue);\n  }\n}\n","import {\n  CollectionKind,\n  IBatchedCollectionSubscriber,\n  IBindingTargetObserver,\n  ICollectionObserver,\n  ILifecycle,\n  IObserverLocator,\n  IPropertySubscriber,\n  LifecycleFlags,\n  ObserversLookup,\n  SetterObserver,\n  targetObserver\n} from '@aurelia/runtime';\nimport { IEventSubscriber } from './event-manager';\nimport { ValueAttributeObserver } from './value-attribute-observer';\n\nexport interface IInputElement extends HTMLInputElement {\n  model?: unknown;\n  $observers?: ObserversLookup & {\n    model?: SetterObserver;\n    value?: ValueAttributeObserver;\n  };\n  matcher?: typeof defaultMatcher;\n}\n\nconst defaultMatcher = (a: unknown, b: unknown): boolean => {\n  return a === b;\n};\n\nexport interface CheckedObserver extends\n  IBindingTargetObserver<IInputElement, string>,\n  IBatchedCollectionSubscriber,\n  IPropertySubscriber { }\n\n@targetObserver()\nexport class CheckedObserver implements CheckedObserver {\n  public readonly isDOMObserver: true;\n  public readonly persistentFlags: LifecycleFlags;\n  public currentFlags: LifecycleFlags;\n  public currentValue: unknown;\n  public defaultValue: unknown;\n  public flush: () => void;\n  public handler: IEventSubscriber;\n  public lifecycle: ILifecycle;\n  public obj: IInputElement;\n  public observerLocator: IObserverLocator;\n  public oldValue: unknown;\n\n  private arrayObserver: ICollectionObserver<CollectionKind.array>;\n  private valueObserver: ValueAttributeObserver | SetterObserver;\n\n  constructor(\n    flags: LifecycleFlags,\n    lifecycle: ILifecycle,\n    obj: IInputElement,\n    handler: IEventSubscriber,\n    observerLocator: IObserverLocator\n  ) {\n    this.persistentFlags = flags & LifecycleFlags.persistentBindingFlags;\n    this.isDOMObserver = true;\n    this.handler = handler;\n    this.lifecycle = lifecycle;\n    this.obj = obj;\n    this.observerLocator = observerLocator;\n  }\n\n  public getValue(): unknown {\n    return this.currentValue;\n  }\n\n  public setValueCore(newValue: unknown, flags: LifecycleFlags): void {\n    if (!this.valueObserver) {\n      this.valueObserver = this.obj['$observers'] && (this.obj['$observers'].model || this.obj['$observers'].value);\n      if (this.valueObserver) {\n        this.valueObserver.subscribe(this);\n      }\n    }\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribeBatched(this);\n      this.arrayObserver = null;\n    }\n    if (this.obj.type === 'checkbox' && Array.isArray(newValue)) {\n      this.arrayObserver = this.observerLocator.getArrayObserver(this.persistentFlags | flags, newValue);\n      this.arrayObserver.subscribeBatched(this);\n    }\n    this.synchronizeElement();\n  }\n\n  // handleBatchedCollectionChange (todo: rename to make this explicit?)\n  public handleBatchedChange(): void {\n    this.synchronizeElement();\n    this.notify(LifecycleFlags.fromFlush);\n  }\n\n  // handlePropertyChange (todo: rename normal subscribe methods in target observers to batched, since that's what they really are)\n  public handleChange(newValue: unknown, previousValue: unknown, flags: LifecycleFlags): void {\n    this.synchronizeElement();\n    this.notify(flags);\n  }\n\n  public synchronizeElement(): void {\n    const value = this.currentValue;\n    const element = this.obj;\n    const elementValue = element.hasOwnProperty('model') ? element['model'] : element.value;\n    const isRadio = element.type === 'radio';\n    const matcher = element['matcher'] || defaultMatcher;\n\n    if (isRadio) {\n      element.checked = !!matcher(value, elementValue);\n    } else if (value === true) {\n      element.checked = true;\n    } else if (Array.isArray(value)) {\n      element.checked = value.findIndex(item => !!matcher(item, elementValue)) !== -1;\n    } else {\n      element.checked = false;\n    }\n  }\n\n  public notify(flags: LifecycleFlags): void {\n    if (flags & LifecycleFlags.fromBind) {\n      return;\n    }\n    const oldValue = this.oldValue;\n    const newValue = this.currentValue;\n    if (newValue === oldValue) {\n      return;\n    }\n    this.callSubscribers(this.currentValue, this.oldValue, this.persistentFlags | flags);\n  }\n\n  public handleEvent(): void {\n    let value = this.currentValue;\n    const element = this.obj;\n    const elementValue = element.hasOwnProperty('model') ? element['model'] : element.value;\n    let index: number;\n    const matcher = element['matcher'] || defaultMatcher;\n\n    if (element.type === 'checkbox') {\n      if (Array.isArray(value)) {\n        index = value.findIndex(item => !!matcher(item, elementValue));\n        if (element.checked && index === -1) {\n          value.push(elementValue);\n        } else if (!element.checked && index !== -1) {\n          value.splice(index, 1);\n        }\n        // when existing value is array, do not invoke callback as only the array element has changed\n        return;\n      }\n      value = element.checked;\n    } else if (element.checked) {\n      value = elementValue;\n    } else {\n      return;\n    }\n    this.oldValue = this.currentValue;\n    this.currentValue = value;\n    this.notify(LifecycleFlags.fromDOMEvent | LifecycleFlags.allowPublishRoundtrip);\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.hasSubscribers()) {\n      this.handler.subscribe(this.obj, this);\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    if (this.removeSubscriber(subscriber) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n\n  public unbind(): void {\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribeBatched(this);\n      this.arrayObserver = null;\n    }\n    if (this.valueObserver) {\n      this.valueObserver.unsubscribe(this);\n    }\n  }\n}\n","import { IBindingTargetAccessor, ILifecycle, INode, targetObserver } from '@aurelia/runtime';\n\nexport interface ClassAttributeAccessor extends IBindingTargetAccessor<INode, string, string> {}\n\n@targetObserver('')\nexport class ClassAttributeAccessor implements ClassAttributeAccessor {\n  public readonly isDOMObserver: true;\n  public currentValue: string;\n  public doNotCache: true;\n  public lifecycle: ILifecycle;\n  public nameIndex: object;\n  public obj: HTMLElement;\n  public oldValue: string;\n  public version: number;\n\n  constructor(lifecycle: ILifecycle, obj: HTMLElement) {\n    this.isDOMObserver = true;\n    this.doNotCache = true;\n    this.lifecycle = lifecycle;\n    this.nameIndex = null;\n    this.obj = obj;\n    this.version = 0;\n  }\n\n  public getValue(): string {\n    return this.currentValue;\n  }\n\n  public setValueCore(newValue: string): void {\n    const nameIndex = this.nameIndex || {};\n    let version = this.version;\n    let names: string[];\n    let name: string;\n\n    // Add the classes, tracking the version at which they were added.\n    if (newValue.length) {\n      const node = this.obj;\n      names = newValue.split(/\\s+/);\n      for (let i = 0, length = names.length; i < length; i++) {\n        name = names[i];\n        if (!name.length) {\n          continue;\n        }\n        nameIndex[name] = version;\n        node.classList.add(name);\n      }\n    }\n\n    // Update state variables.\n    this.nameIndex = nameIndex;\n    this.version += 1;\n\n    // First call to setValue?  We're done.\n    if (version === 0) {\n      return;\n    }\n\n    // Remove classes from previous version.\n    version -= 1;\n    for (name in nameIndex) {\n      if (!nameIndex.hasOwnProperty(name) || nameIndex[name] !== version) {\n        continue;\n      }\n\n      // TODO: this has the side-effect that classes already present which are added again,\n      // will be removed if they're not present in the next update.\n      // Better would be do have some configurability for this behavior, allowing the user to\n      // decide whether initial classes always need to be kept, always removed, or something in between\n      this.obj.classList.remove(name);\n    }\n  }\n}\n","import { IBindingTargetAccessor, ILifecycle, targetObserver } from '@aurelia/runtime';\n\nexport interface DataAttributeAccessor extends IBindingTargetAccessor<Node, string, string> {}\n\n@targetObserver()\nexport class DataAttributeAccessor implements DataAttributeAccessor {\n  public readonly isDOMObserver: true;\n  public currentValue: string;\n  public defaultValue: string;\n  public lifecycle: ILifecycle;\n  public obj: HTMLElement;\n  public oldValue: string;\n  public propertyKey: string;\n\n  constructor(lifecycle: ILifecycle, obj: HTMLElement, propertyKey: string) {\n    this.isDOMObserver = true;\n    this.lifecycle = lifecycle;\n    this.obj = obj;\n    this.oldValue = this.currentValue = this.getValue();\n    this.propertyKey = propertyKey;\n  }\n\n  public getValue(): string | null {\n    return this.obj.getAttribute(this.propertyKey);\n  }\n\n  public setValueCore(newValue: string): void {\n    if (newValue === null) {\n      this.obj.removeAttribute(this.propertyKey);\n    } else {\n      this.obj.setAttribute(this.propertyKey, newValue);\n    }\n  }\n}\n","import { IBindingTargetAccessor, ILifecycle, targetObserver } from '@aurelia/runtime';\n\nexport interface ElementPropertyAccessor extends IBindingTargetAccessor<object, string> {}\n\n@targetObserver('')\nexport class ElementPropertyAccessor implements ElementPropertyAccessor {\n  public readonly isDOMObserver: true;\n  public lifecycle: ILifecycle;\n  public obj: object;\n  public propertyKey: string;\n\n  constructor(lifecycle: ILifecycle, obj: object, propertyKey: string) {\n    this.isDOMObserver = true;\n    this.lifecycle = lifecycle;\n    this.obj = obj;\n    this.propertyKey = propertyKey;\n  }\n\n  public getValue(): unknown {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValueCore(value: unknown): void {\n    this.obj[this.propertyKey] = value;\n  }\n}\n","import { DI, IDisposable } from '@aurelia/kernel';\nimport { DelegationStrategy, IDOM } from '@aurelia/runtime';\n\nexport interface IManagedEvent extends Event {\n  propagationStopped?: boolean;\n  // legacy\n  path?: EventTarget[];\n  standardStopPropagation?(): void;\n  // old composedPath\n  deepPath?(): EventTarget[];\n}\n\n//Note: path and deepPath are designed to handle v0 and v1 shadow dom specs respectively\n/** @internal */\nexport function findOriginalEventTarget(event: IManagedEvent): EventTarget {\n  return (event.composedPath && event.composedPath()[0]) || (event.deepPath && event.deepPath()[0]) || (event.path && event.path[0]) || event.target;\n}\n\nfunction stopPropagation(this: IManagedEvent): void {\n  this.standardStopPropagation();\n  this.propagationStopped = true;\n}\n\nfunction handleCapturedEvent(event: IManagedEvent): void {\n  event.propagationStopped = false;\n  let target: IEventTargetWithLookups = findOriginalEventTarget(event) as EventTarget & IEventTargetWithLookups;\n  const orderedCallbacks = [];\n  /**\n   * During capturing phase, event 'bubbles' down from parent. Needs to reorder callback from root down to target\n   */\n  while (target) {\n    if (target.capturedCallbacks) {\n      const callback = target.capturedCallbacks[event.type];\n      if (callback) {\n        if (event.stopPropagation !== stopPropagation) {\n          event.standardStopPropagation = event.stopPropagation;\n          event.stopPropagation = stopPropagation;\n        }\n        orderedCallbacks.push(callback);\n      }\n    }\n    target = target.parentNode;\n  }\n\n  for (let i = orderedCallbacks.length - 1; i >= 0 && !event.propagationStopped; i--) {\n    const orderedCallback = orderedCallbacks[i];\n    if ('handleEvent' in orderedCallback) {\n      orderedCallback.handleEvent(event);\n    } else {\n      orderedCallback(event);\n    }\n  }\n}\n\nfunction handleDelegatedEvent(event: IManagedEvent): void {\n  event.propagationStopped = false;\n  let target: IEventTargetWithLookups = findOriginalEventTarget(event) as EventTarget & IEventTargetWithLookups;\n  while (target && !event.propagationStopped) {\n    if (target.delegatedCallbacks) {\n      const callback = target.delegatedCallbacks[event.type];\n      if (callback) {\n        if (event.stopPropagation !== stopPropagation) {\n          event.standardStopPropagation = event.stopPropagation;\n          event.stopPropagation = stopPropagation;\n        }\n        if ('handleEvent' in callback) {\n          callback.handleEvent(event);\n        } else {\n          callback(event);\n        }\n      }\n    }\n    target = target.parentNode;\n  }\n}\n\nexport class ListenerTracker {\n  private readonly dom: IDOM;\n  private readonly capture: boolean;\n  private readonly eventName: string;\n  private readonly listener: EventListenerOrEventListenerObject;\n  private count: number;\n\n  constructor(dom: IDOM, eventName: string, listener: EventListenerOrEventListenerObject, capture: boolean) {\n    this.dom = dom;\n    this.capture = capture;\n    this.count = 0;\n    this.eventName = eventName;\n    this.listener = listener;\n  }\n\n  public increment(): void {\n    this.count++;\n    if (this.count === 1) {\n      this.dom.addEventListener(this.eventName, this.listener, null, this.capture);\n    }\n  }\n\n  public decrement(): void {\n    this.count--;\n    if (this.count === 0) {\n      this.dom.removeEventListener(this.eventName, this.listener, null, this.capture);\n    }\n  }\n\n  /*@internal*/\n  public dispose(): void {\n    if (this.count > 0) {\n      this.count = 0;\n      this.dom.removeEventListener(this.eventName, this.listener, null, this.capture);\n    }\n  }\n}\n\n/**\n * Enable dispose() pattern for `delegate` & `capture` commands\n */\nexport class DelegateOrCaptureSubscription implements IDisposable {\n  public entry: ListenerTracker;\n  public lookup: Record<string, EventListenerOrEventListenerObject>;\n  public targetEvent: string;\n\n  constructor(\n    entry: ListenerTracker,\n    lookup: Record<string, EventListenerOrEventListenerObject>,\n    targetEvent: string,\n    callback: EventListenerOrEventListenerObject\n  ) {\n    this.entry = entry;\n    this.lookup = lookup;\n    this.targetEvent = targetEvent;\n    lookup[targetEvent] = callback;\n  }\n\n  public dispose(): void {\n    this.entry.decrement();\n    this.lookup[this.targetEvent] = null;\n  }\n}\n\n/**\n * Enable dispose() pattern for addEventListener for `trigger`\n */\nexport class TriggerSubscription implements IDisposable {\n  public target: Node;\n  public targetEvent: string;\n  public callback: EventListenerOrEventListenerObject;\n  private readonly dom: IDOM;\n\n  constructor(\n    dom: IDOM,\n    target: Node,\n    targetEvent: string,\n    callback: EventListenerOrEventListenerObject\n  ) {\n    this.dom = dom;\n    this.target = target;\n    this.targetEvent = targetEvent;\n    this.callback = callback;\n    dom.addEventListener(targetEvent, callback, target);\n  }\n\n  public dispose(): void {\n    this.dom.removeEventListener(this.targetEvent, this.callback, this.target);\n  }\n}\n\nexport interface  IEventTargetWithLookups extends Node {\n  delegatedCallbacks?: Record<string, EventListenerOrEventListenerObject>;\n  capturedCallbacks?: Record<string, EventListenerOrEventListenerObject>;\n}\n\nexport interface IElementConfiguration {\n  tagName: string;\n  properties: Record<string, string[]>;\n}\n\nexport interface IEventSubscriber extends IDisposable {\n  subscribe(node: Node, callbackOrListener: EventListenerOrEventListenerObject): void;\n}\n\nexport class EventSubscriber implements IEventSubscriber {\n  private readonly dom: IDOM;\n  private readonly events: string[];\n  private target: Node;\n  private handler: EventListenerOrEventListenerObject;\n\n  constructor(dom: IDOM, events: string[]) {\n    this.dom = dom;\n    this.events = events;\n    this.target = null;\n    this.handler = null;\n  }\n\n  public subscribe(node: Node, callbackOrListener: EventListenerOrEventListenerObject): void {\n    this.target = node;\n    this.handler = callbackOrListener;\n\n    const add = this.dom.addEventListener;\n    const events = this.events;\n\n    for (let i = 0, ii = events.length; ii > i; ++i) {\n      add(events[i], callbackOrListener, node);\n    }\n  }\n\n  public dispose(): void {\n    const node = this.target;\n    const callbackOrListener = this.handler;\n    const events = this.events;\n    const remove = this.dom.removeEventListener;\n\n    for (let i = 0, ii = events.length; ii > i; ++i) {\n      remove(events[i], callbackOrListener, node);\n    }\n\n    this.target = this.handler = null;\n  }\n}\n\nexport type EventSubscription = DelegateOrCaptureSubscription | TriggerSubscription;\n\nexport interface IEventManager extends IDisposable {\n  addEventListener(dom: IDOM, target: Node, targetEvent: string, callbackOrListener: EventListenerOrEventListenerObject, delegate: DelegationStrategy): IDisposable;\n}\n\nexport const IEventManager = DI.createInterface<IEventManager>('IEventManager').withDefault(x => x.singleton(EventManager));\n\n/** @internal */\nexport class EventManager implements IEventManager {\n  public readonly delegatedHandlers: Record<string, ListenerTracker> = {};\n  public readonly capturedHandlers: Record<string, ListenerTracker> = {};\n\n  constructor() {\n    this.delegatedHandlers = {};\n    this.capturedHandlers = {};\n  }\n\n  public addEventListener(\n    dom: IDOM,\n    target: IEventTargetWithLookups,\n    targetEvent: string,\n    callbackOrListener: EventListenerOrEventListenerObject,\n    strategy: DelegationStrategy\n  ): EventSubscription {\n    let delegatedHandlers: Record<string, ListenerTracker> | undefined;\n    let capturedHandlers: Record<string, ListenerTracker> | undefined;\n    let handlerEntry: ListenerTracker | undefined;\n\n    if (strategy === DelegationStrategy.bubbling) {\n      delegatedHandlers = this.delegatedHandlers;\n      handlerEntry = delegatedHandlers[targetEvent] || (delegatedHandlers[targetEvent] = new ListenerTracker(dom, targetEvent, handleDelegatedEvent, false));\n      handlerEntry.increment();\n      const delegatedCallbacks = target.delegatedCallbacks || (target.delegatedCallbacks = {});\n      return new DelegateOrCaptureSubscription(handlerEntry, delegatedCallbacks, targetEvent, callbackOrListener);\n    }\n    if (strategy === DelegationStrategy.capturing) {\n      capturedHandlers = this.capturedHandlers;\n      handlerEntry = capturedHandlers[targetEvent] || (capturedHandlers[targetEvent] = new ListenerTracker(dom, targetEvent, handleCapturedEvent, true));\n      handlerEntry.increment();\n      const capturedCallbacks = target.capturedCallbacks || (target.capturedCallbacks = {});\n      return new DelegateOrCaptureSubscription(handlerEntry, capturedCallbacks, targetEvent, callbackOrListener);\n    }\n    return new TriggerSubscription(dom, target, targetEvent, callbackOrListener);\n  }\n\n  public dispose(): void {\n    let key: string;\n    const { delegatedHandlers, capturedHandlers } = this;\n    for (key in delegatedHandlers) {\n      delegatedHandlers[key].dispose();\n    }\n    for (key in capturedHandlers) {\n      capturedHandlers[key].dispose();\n    }\n  }\n}\n","import {\n  CollectionKind,\n  IBatchedCollectionSubscriber,\n  IBindingTargetObserver,\n  ICollectionObserver,\n  IDOM,\n  ILifecycle,\n  IndexMap,\n  IObserverLocator,\n  IPropertySubscriber,\n  LifecycleFlags,\n  targetObserver\n} from '@aurelia/runtime';\nimport { IEventSubscriber } from './event-manager';\n\nconst childObserverOptions = {\n  childList: true,\n  subtree: true,\n  characterData: true\n};\n\nfunction defaultMatcher(a: unknown, b: unknown): boolean {\n  return a === b;\n}\n\nexport interface ISelectElement extends HTMLSelectElement {\n  options: HTMLCollectionOf<IOptionElement> & Pick<HTMLOptionsCollection, 'length' | 'selectedIndex' | 'add' | 'remove'>;\n  matcher?: typeof defaultMatcher;\n}\nexport interface IOptionElement extends HTMLOptionElement {\n  model?: unknown;\n}\n\nexport interface SelectValueObserver extends\n  IBindingTargetObserver<ISelectElement, string>,\n  IBatchedCollectionSubscriber,\n  IPropertySubscriber { }\n\n@targetObserver()\nexport class SelectValueObserver implements SelectValueObserver {\n  public readonly isDOMObserver: true;\n  public readonly persistentFlags: LifecycleFlags;\n  public lifecycle: ILifecycle;\n  public obj: ISelectElement;\n  public handler: IEventSubscriber;\n  public observerLocator: IObserverLocator;\n  public currentValue: unknown;\n  public currentFlags: LifecycleFlags;\n  public oldValue: unknown;\n  public defaultValue: unknown;\n\n  public flush: () => void;\n\n  private readonly dom: IDOM;\n  private arrayObserver: ICollectionObserver<CollectionKind.array>;\n  private nodeObserver: MutationObserver;\n\n  constructor(\n    flags: LifecycleFlags,\n    lifecycle: ILifecycle,\n    obj: ISelectElement,\n    handler: IEventSubscriber,\n    observerLocator: IObserverLocator,\n    dom: IDOM\n  ) {\n    this.persistentFlags = flags & LifecycleFlags.persistentBindingFlags;\n    this.isDOMObserver = true;\n    this.lifecycle = lifecycle;\n    this.obj = obj;\n    this.handler = handler;\n    this.observerLocator = observerLocator;\n    this.dom = dom;\n  }\n\n  public getValue(): unknown {\n    return this.currentValue;\n  }\n\n  public setValueCore(newValue: unknown, flags: LifecycleFlags): void {\n    const isArray = Array.isArray(newValue);\n    if (!isArray && newValue !== null && newValue !== undefined && this.obj.multiple) {\n      throw new Error('Only null or Array instances can be bound to a multi-select.');\n    }\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribeBatched(this);\n      this.arrayObserver = null;\n    }\n    if (isArray) {\n      this.arrayObserver = this.observerLocator.getArrayObserver(this.persistentFlags | flags, newValue as unknown[]);\n      this.arrayObserver.subscribeBatched(this);\n    }\n    this.synchronizeOptions();\n    this.notify(flags);\n  }\n\n  // called when the array mutated (items sorted/added/removed, etc)\n  public handleBatchedChange(indexMap: number[]): void {\n    // we don't need to go through the normal setValue logic and can directly call synchronizeOptions here,\n    // because the change already waited one tick (batched) and there's no point in calling notify when the instance didn't change\n    this.synchronizeOptions(indexMap);\n  }\n\n  // called when a different value was assigned\n  public handleChange(newValue: unknown, previousValue: unknown, flags: LifecycleFlags): void {\n    this.setValue(newValue, this.persistentFlags | flags);\n  }\n\n  public notify(flags: LifecycleFlags): void {\n    if (flags & LifecycleFlags.fromBind) {\n      return;\n    }\n    const oldValue = this.oldValue;\n    const newValue = this.currentValue;\n    if (newValue === oldValue) {\n      return;\n    }\n    this.callSubscribers(newValue, oldValue, this.persistentFlags | flags);\n  }\n\n  public handleEvent(): void {\n    // \"from-view\" changes are always synchronous now, so immediately sync the value and notify subscribers\n    const shouldNotify = this.synchronizeValue();\n    if (shouldNotify) {\n      this.notify(LifecycleFlags.fromDOMEvent | LifecycleFlags.allowPublishRoundtrip);\n    }\n  }\n\n  public synchronizeOptions(indexMap?: IndexMap): void {\n    const currentValue = this.currentValue;\n    const isArray = Array.isArray(currentValue);\n    const obj = this.obj;\n    const matcher = obj.matcher || defaultMatcher;\n    const options = obj.options;\n    let i = options.length;\n\n    while (i--) {\n      const option = options[i];\n      const optionValue = option.hasOwnProperty('model') ? option.model : option.value;\n      if (isArray) {\n        option.selected = (currentValue as unknown[]).findIndex(item => !!matcher(optionValue, item)) !== -1;\n        continue;\n      }\n      option.selected = !!matcher(optionValue, currentValue);\n    }\n  }\n\n  public synchronizeValue(): boolean {\n    // Spec for synchronizing value from `SelectObserver` to `<select/>`\n    // When synchronizing value to observed <select/> element, do the following steps:\n    // A. If `<select/>` is multiple\n    //    1. Check if current value, called `currentValue` is an array\n    //      a. If not an array, return true to signal value has changed\n    //      b. If is an array:\n    //        i. gather all current selected <option/>, in to array called `values`\n    //        ii. loop through the `currentValue` array and remove items that are nolonger selected based on matcher\n    //        iii. loop through the `values` array and add items that are selected based on matcher\n    //        iv. Return false to signal value hasn't changed\n    // B. If the select is single\n    //    1. Let `value` equal the first selected option, if no option selected, then `value` is `null`\n    //    2. assign `this.currentValue` to `this.oldValue`\n    //    3. assign `value` to `this.currentValue`\n    //    4. return `true` to signal value has changed\n    const obj = this.obj;\n    const options = obj.options;\n    const len = options.length;\n    const currentValue = this.currentValue;\n    let i = 0;\n\n    if (obj.multiple) {\n      // A.\n      if (!Array.isArray(currentValue)) {\n        // A.1.a\n        return true;\n      }\n      // A.1.b\n      // multi select\n      let option: IOptionElement;\n      const matcher = obj.matcher || defaultMatcher;\n      // A.1.b.i\n      const values: unknown[] = [];\n      while (i < len) {\n        option = options[i];\n        if (option.selected) {\n          values.push(option.hasOwnProperty('model')\n            ? option.model\n            : option.value\n          );\n        }\n        ++i;\n      }\n      // A.1.b.ii\n      i = 0;\n      while (i < currentValue.length) {\n        const a = currentValue[i];\n        // Todo: remove arrow fn\n        if (values.findIndex(b => !!matcher(a, b)) === -1) {\n          currentValue.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n      // A.1.b.iii\n      i = 0;\n      while (i < values.length) {\n        const a = values[i];\n        // Todo: remove arrow fn\n        if (currentValue.findIndex(b => !!matcher(a, b)) === -1) {\n          currentValue.push(a);\n        }\n        ++i;\n      }\n      // A.1.b.iv\n      return false;\n    }\n    // B. single select\n    // B.1\n    let value: unknown = null;\n    while (i < len) {\n      const option = options[i];\n      if (option.selected) {\n        value = option.hasOwnProperty('model')\n          ? option.model\n          : option.value;\n        break;\n      }\n      ++i;\n    }\n    // B.2\n    this.oldValue = this.currentValue;\n    // B.3\n    this.currentValue = value;\n    // B.4\n    return true;\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.hasSubscribers()) {\n      this.handler.subscribe(this.obj, this);\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    if (this.removeSubscriber(subscriber) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n\n  public bind(): void {\n    this.nodeObserver = this.dom.createNodeObserver(this.obj, this.handleNodeChange.bind(this), childObserverOptions) as MutationObserver;\n  }\n\n  public unbind(): void {\n    this.nodeObserver.disconnect();\n    this.nodeObserver = null;\n\n    if (this.arrayObserver) {\n      this.arrayObserver.unsubscribeBatched(this);\n      this.arrayObserver = null;\n    }\n  }\n\n  public handleNodeChange(): void {\n    this.synchronizeOptions();\n    const shouldNotify = this.synchronizeValue();\n    if (shouldNotify) {\n      this.notify(LifecycleFlags.fromDOMEvent);\n    }\n  }\n}\n","import { IBindingTargetAccessor, ILifecycle, targetObserver } from '@aurelia/runtime';\n\nexport interface StyleAttributeAccessor extends IBindingTargetAccessor<HTMLElement, 'style', string | Record<string, string>> {}\n\n@targetObserver()\nexport class StyleAttributeAccessor implements StyleAttributeAccessor {\n  public readonly isDOMObserver: true;\n  public currentValue: string | Record<string, string>;\n  public defaultValue: string | Record<string, string>;\n  public lifecycle: ILifecycle;\n  public obj: HTMLElement;\n  public oldValue: string | Record<string, string>;\n  public styles: object;\n  public version: number;\n\n  constructor(lifecycle: ILifecycle, obj: HTMLElement) {\n    this.isDOMObserver = true;\n    this.oldValue = this.currentValue = obj.style.cssText;\n    this.lifecycle = lifecycle;\n    this.obj = obj;\n    this.styles = null;\n    this.version = 0;\n  }\n\n  public getValue(): string {\n    return this.obj.style.cssText;\n  }\n\n  public _setProperty(style: string, value: string): void {\n    let priority = '';\n\n    if (value !== null && value !== undefined && typeof value.indexOf === 'function' && value.indexOf('!important') !== -1) {\n      priority = 'important';\n      value = value.replace('!important', '');\n    }\n\n    this.obj.style.setProperty(style, value, priority);\n  }\n\n  public setValueCore(newValue: string | Record<string, string>): void {\n    const styles = this.styles || {};\n    let style: string;\n    let version = this.version;\n\n    if (newValue !== null) {\n      if (newValue instanceof Object) {\n        let value: string;\n        for (style in newValue) {\n          if (newValue.hasOwnProperty(style)) {\n            value = newValue[style];\n            style = style.replace(/([A-Z])/g, m => `-${m.toLowerCase()}`);\n            styles[style] = version;\n            this._setProperty(style, value);\n          }\n        }\n      } else if (newValue.length) {\n        const rx = /\\s*([\\w\\-]+)\\s*:\\s*((?:(?:[\\w\\-]+\\(\\s*(?:\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[\\w\\-]+\\(\\s*(?:[^\"](?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^\\)]*)\\),?|[^\\)]*)\\),?|\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^;]*),?\\s*)+);?/g;\n        let pair: RegExpExecArray;\n        while ((pair = rx.exec(newValue)) !== null) {\n          style = pair[1];\n          if (!style) { continue; }\n\n          styles[style] = version;\n          this._setProperty(style, pair[2]);\n        }\n      }\n    }\n\n    this.styles = styles;\n    this.version += 1;\n    if (version === 0) {\n      return;\n    }\n\n    version -= 1;\n    for (style in styles) {\n      if (!styles.hasOwnProperty(style) || styles[style] !== version) {\n        continue;\n      }\n      this.obj.style.removeProperty(style);\n    }\n  }\n}\n","import { DI } from '@aurelia/kernel';\nimport { INode } from '@aurelia/runtime';\n\nexport interface ISVGAnalyzer {\n  isStandardSvgAttribute(node: INode, attributeName: string): boolean;\n}\n\nexport const ISVGAnalyzer = DI.createInterface<ISVGAnalyzer>('ISVGAnalyzer').withDefault(x => x.singleton(class {\n    public isStandardSvgAttribute(node: INode, attributeName: string): boolean {\n      return false;\n    }\n  })\n);\n","import { IBindingTargetObserver, ILifecycle, IPropertySubscriber, LifecycleFlags, targetObserver } from '@aurelia/runtime';\nimport { IEventSubscriber } from './event-manager';\n\nconst inputValueDefaults = {\n  ['button']: '',\n  ['checkbox']: 'on',\n  ['color']: '#000000',\n  ['date']: '',\n  ['datetime-local']: '',\n  ['email']: '',\n  ['file']: '',\n  ['hidden']: '',\n  ['image']: '',\n  ['month']: '',\n  ['number']: '',\n  ['password']: '',\n  ['radio']: 'on',\n  ['range']: '50',\n  ['reset']: '',\n  ['search']: '',\n  ['submit']: '',\n  ['tel']: '',\n  ['text']: '',\n  ['time']: '',\n  ['url']: '',\n  ['week']: ''\n};\n\nexport interface ValueAttributeObserver extends IBindingTargetObserver<Node, string> { }\n\n@targetObserver('')\nexport class ValueAttributeObserver implements ValueAttributeObserver {\n  public readonly isDOMObserver: true;\n  public currentFlags: LifecycleFlags;\n  public currentValue: unknown;\n  public defaultValue: unknown;\n  public oldValue: unknown;\n  public flush: () => void;\n  public handler: IEventSubscriber;\n  public lifecycle: ILifecycle;\n  public obj: Node;\n  public propertyKey: string;\n\n  constructor(lifecycle: ILifecycle, obj: Node, propertyKey: string, handler: IEventSubscriber) {\n    this.isDOMObserver = true;\n    this.handler = handler;\n    this.lifecycle = lifecycle;\n    this.obj = obj;\n    this.propertyKey = propertyKey;\n\n    // note: input.files can be assigned and this was fixed in Firefox 57:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1384030\n\n    // input.value (for type='file') however, can only be assigned an empty string\n    if (propertyKey === 'value') {\n      const nodeType = obj['type'];\n      this.defaultValue = inputValueDefaults[nodeType || 'text'];\n      if (nodeType === 'file') {\n        this.flush = this.flushFileChanges;\n      }\n    } else {\n      this.defaultValue = '';\n    }\n    this.oldValue = this.currentValue = obj[propertyKey];\n  }\n\n  public getValue(): unknown {\n    return this.obj[this.propertyKey];\n  }\n\n  public setValueCore(newValue: unknown, flags: LifecycleFlags): void {\n    this.obj[this.propertyKey] = newValue;\n    if (flags & LifecycleFlags.fromBind) {\n      return;\n    }\n    this.callSubscribers(this.currentValue, this.oldValue, flags);\n  }\n\n  public handleEvent(): void {\n    const oldValue = this.oldValue = this.currentValue;\n    const newValue = this.currentValue = this.getValue();\n    if (oldValue !== newValue) {\n      this.callSubscribers(newValue, oldValue, LifecycleFlags.fromDOMEvent | LifecycleFlags.allowPublishRoundtrip);\n      this.oldValue = newValue;\n    }\n  }\n\n  public subscribe(subscriber: IPropertySubscriber): void {\n    if (!this.hasSubscribers()) {\n      this.oldValue = this.getValue();\n      this.handler.subscribe(this.obj, this);\n    }\n    this.addSubscriber(subscriber);\n  }\n\n  public unsubscribe(subscriber: IPropertySubscriber): void {\n    if (this.removeSubscriber(subscriber) && !this.hasSubscribers()) {\n      this.handler.dispose();\n    }\n  }\n\n  private flushFileChanges(): void {\n    const currentValue = this.currentValue;\n    if (this.oldValue !== currentValue && currentValue === '') {\n      this.setValueCore(currentValue, this.currentFlags);\n      this.oldValue = this.currentValue;\n    }\n  }\n}\n","\nimport { IContainer, InjectArray, InterfaceSymbol, IResolver, Registration } from '@aurelia/kernel';\nimport {\n  IBindingTargetAccessor,\n  IBindingTargetObserver,\n  IDOM,\n  ILifecycle,\n  IObserverLocator,\n  ITargetAccessorLocator,\n  ITargetObserverLocator,\n  LifecycleFlags,\n  SetterObserver\n} from '@aurelia/runtime';\nimport { AttributeNSAccessor } from './attribute-ns-accessor';\nimport { CheckedObserver, IInputElement } from './checked-observer';\nimport { ClassAttributeAccessor } from './class-attribute-accessor';\nimport { DataAttributeAccessor } from './data-attribute-accessor';\nimport { ElementPropertyAccessor } from './element-property-accessor';\nimport { EventSubscriber } from './event-manager';\nimport { ISelectElement, SelectValueObserver } from './select-value-observer';\nimport { StyleAttributeAccessor } from './style-attribute-accessor';\nimport { ISVGAnalyzer } from './svg-analyzer';\nimport { ValueAttributeObserver } from './value-attribute-observer';\n\n// https://infra.spec.whatwg.org/#namespaces\nconst htmlNS = 'http://www.w3.org/1999/xhtml';\nconst mathmlNS = 'http://www.w3.org/1998/Math/MathML';\nconst svgNS = 'http://www.w3.org/2000/svg';\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\nconst xmlNS = 'http://www.w3.org/XML/1998/namespace';\nconst xmlnsNS = 'http://www.w3.org/2000/xmlns/';\n\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\nconst nsAttributes = (function (o: Record<string, [string, string]>): typeof o {\n  o['xlink:actuate'] = ['actuate', xlinkNS];\n  o['xlink:arcrole'] = ['arcrole', xlinkNS];\n  o['xlink:href'] = ['href', xlinkNS];\n  o['xlink:role'] = ['role', xlinkNS];\n  o['xlink:show'] = ['show', xlinkNS];\n  o['xlink:title'] = ['title', xlinkNS];\n  o['xlink:type'] = ['type', xlinkNS];\n  o['xml:lang'] = ['lang', xmlNS];\n  o['xml:space'] = ['space', xmlNS];\n  o['xmlns'] = ['xmlns', xmlnsNS];\n  o['xmlns:xlink'] = ['xlink', xmlnsNS];\n  return o;\n})(Object.create(null));\n\nconst inputEvents = ['change', 'input'];\nconst selectEvents = ['change'];\nconst contentEvents = ['change', 'input', 'blur', 'keyup', 'paste'];\nconst scrollEvents = ['scroll'];\n\nconst overrideProps = (function (o: Record<string, boolean>): typeof o {\n  o['class'] = true;\n  o['style'] = true;\n  o['css'] = true;\n  o['checked'] = true;\n  o['value'] = true;\n  o['model'] = true;\n  o['xlink:actuate'] = true;\n  o['xlink:arcrole'] = true;\n  o['xlink:href'] = true;\n  o['xlink:role'] = true;\n  o['xlink:show'] = true;\n  o['xlink:title'] = true;\n  o['xlink:type'] = true;\n  o['xml:lang'] = true;\n  o['xml:space'] = true;\n  o['xmlns'] = true;\n  o['xmlns:xlink'] = true;\n  return o;\n})(Object.create(null));\n\nexport class TargetObserverLocator implements ITargetObserverLocator {\n  public static readonly inject: InjectArray = [IDOM, ISVGAnalyzer];\n\n  private readonly dom: IDOM;\n  private readonly svgAnalyzer: ISVGAnalyzer;\n\n  constructor(dom: IDOM, svgAnalyzer: ISVGAnalyzer) {\n    this.dom = dom;\n    this.svgAnalyzer = svgAnalyzer;\n  }\n\n  public static register(container: IContainer): IResolver<ITargetObserverLocator> {\n    return Registration.singleton(ITargetObserverLocator, this).register(container);\n  }\n\n  public getObserver(flags: LifecycleFlags, lifecycle: ILifecycle, observerLocator: IObserverLocator, obj: Node, propertyName: string): IBindingTargetObserver | IBindingTargetAccessor {\n    switch (propertyName) {\n      case 'checked':\n        return new CheckedObserver(flags, lifecycle, obj as IInputElement, new EventSubscriber(this.dom, inputEvents), observerLocator);\n      case 'value':\n        if (obj['tagName'] === 'SELECT') {\n          return new SelectValueObserver(flags, lifecycle, obj as ISelectElement, new EventSubscriber(this.dom, selectEvents), observerLocator, this.dom);\n        }\n        return new ValueAttributeObserver(lifecycle, obj, propertyName, new EventSubscriber(this.dom, inputEvents));\n      case 'files':\n        return new ValueAttributeObserver(lifecycle, obj, propertyName, new EventSubscriber(this.dom, inputEvents));\n      case 'textContent':\n      case 'innerHTML':\n        return new ValueAttributeObserver(lifecycle, obj, propertyName, new EventSubscriber(this.dom, contentEvents));\n      case 'scrollTop':\n      case 'scrollLeft':\n        return new ValueAttributeObserver(lifecycle, obj, propertyName, new EventSubscriber(this.dom, scrollEvents));\n      case 'class':\n        return new ClassAttributeAccessor(lifecycle, obj as HTMLElement);\n      case 'style':\n      case 'css':\n        return new StyleAttributeAccessor(lifecycle, obj as HTMLElement);\n      case 'model':\n        return new SetterObserver(flags, obj, propertyName);\n      case 'role':\n        return new DataAttributeAccessor(lifecycle, obj as HTMLElement, propertyName);\n      default:\n        if (nsAttributes[propertyName] !== undefined) {\n          const nsProps = nsAttributes[propertyName];\n          return new AttributeNSAccessor(lifecycle, obj as HTMLElement, propertyName, nsProps[0], nsProps[1]);\n        }\n        if (isDataAttribute(obj, propertyName, this.svgAnalyzer)) {\n          return new DataAttributeAccessor(lifecycle, obj as HTMLElement, propertyName);\n        }\n    }\n    return null;\n  }\n\n  public overridesAccessor(flags: LifecycleFlags, obj: Node, propertyName: string): boolean {\n    return overrideProps[propertyName] === true;\n  }\n\n  public handles(flags: LifecycleFlags, obj: unknown): boolean {\n    return this.dom.isNodeInstance(obj);\n  }\n}\n\nexport class TargetAccessorLocator implements ITargetAccessorLocator {\n  public static readonly inject: InjectArray = [IDOM, ISVGAnalyzer];\n\n  private readonly dom: IDOM;\n  private readonly svgAnalyzer: ISVGAnalyzer;\n\n  constructor(dom: IDOM, svgAnalyzer: ISVGAnalyzer) {\n    this.dom = dom;\n    this.svgAnalyzer = svgAnalyzer;\n  }\n\n  public static register(container: IContainer): IResolver<ITargetAccessorLocator> {\n    return Registration.singleton(ITargetAccessorLocator, this).register(container);\n  }\n\n  public getAccessor(flags: LifecycleFlags, lifecycle: ILifecycle, obj: Node, propertyName: string): IBindingTargetAccessor {\n    switch (propertyName) {\n      case 'textContent':\n        // note: this case is just an optimization (textContent is the most often used property)\n        return new ElementPropertyAccessor(lifecycle, obj, propertyName);\n      case 'class':\n        return new ClassAttributeAccessor(lifecycle, obj as HTMLElement);\n      case 'style':\n      case 'css':\n        return new StyleAttributeAccessor(lifecycle, obj as HTMLElement);\n      // TODO: there are (many) more situation where we want to default to DataAttributeAccessor,\n      // but for now stick to what vCurrent does\n      case 'src':\n      case 'href':\n      // https://html.spec.whatwg.org/multipage/dom.html#wai-aria\n      case 'role':\n        return new DataAttributeAccessor(lifecycle, obj as HTMLElement, propertyName);\n      default:\n        if (nsAttributes[propertyName] !== undefined) {\n          const nsProps = nsAttributes[propertyName];\n          return new AttributeNSAccessor(lifecycle, obj as HTMLElement, propertyName, nsProps[0], nsProps[1]);\n        }\n        if (isDataAttribute(obj, propertyName, this.svgAnalyzer)) {\n          return new DataAttributeAccessor(lifecycle, obj as HTMLElement, propertyName);\n        }\n        return new ElementPropertyAccessor(lifecycle, obj, propertyName);\n    }\n  }\n\n  public handles(flags: LifecycleFlags, obj: Node): boolean {\n    return this.dom.isNodeInstance(obj);\n  }\n}\n\nconst IsDataAttribute: Record<string, boolean> = {};\n\nfunction isDataAttribute(obj: Node, propertyName: string, svgAnalyzer: ISVGAnalyzer): boolean {\n  if (IsDataAttribute[propertyName] === true) {\n    return true;\n  }\n  const prefix = propertyName.slice(0, 5);\n  // https://html.spec.whatwg.org/multipage/dom.html#wai-aria\n  // https://html.spec.whatwg.org/multipage/dom.html#custom-data-attribute\n  return IsDataAttribute[propertyName] =\n    prefix === 'aria-' ||\n    prefix === 'data-' ||\n    svgAnalyzer.isStandardSvgAttribute(obj, propertyName);\n}\n","import { IRegistry } from '@aurelia/kernel';\nimport { Binding, BindingBehaviorResource, ILifecycle, IScope, LifecycleFlags } from '@aurelia/runtime';\nimport { DataAttributeAccessor } from '../../observation/data-attribute-accessor';\n\nexport class AttrBindingBehavior {\n  public static readonly register: IRegistry['register'];\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: Binding): void {\n    binding.targetObserver = new DataAttributeAccessor(binding.locator.get(ILifecycle), binding.target as HTMLElement, binding.targetProperty);\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: Binding): void {\n    return;\n  }\n}\nBindingBehaviorResource.define('attr', AttrBindingBehavior);\n","import { IRegistry, Reporter } from '@aurelia/kernel';\nimport { BindingBehaviorResource, IScope, LifecycleFlags } from '@aurelia/runtime';\nimport { Listener } from '../../binding/listener';\nimport { findOriginalEventTarget } from '../../observation/event-manager';\n\n/** @internal */\nexport function handleSelfEvent(this: SelfableBinding, event: Event): ReturnType<Listener['callSource']> {\n  const target = findOriginalEventTarget(event) as unknown as Node;\n\n  if (this.target !== target) {\n    return;\n  }\n\n  return this.selfEventCallSource(event);\n}\n\nexport type SelfableBinding = Listener & {\n  selfEventCallSource: Listener['callSource'];\n};\n\nexport class SelfBindingBehavior {\n  public static register: IRegistry['register'];\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: SelfableBinding): void {\n    if (!binding.callSource || !binding.targetEvent) {\n      throw Reporter.error(8);\n    }\n\n    binding.selfEventCallSource = binding.callSource;\n    binding.callSource = handleSelfEvent;\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: SelfableBinding): void {\n    binding.callSource = binding.selfEventCallSource;\n    binding.selfEventCallSource = null;\n  }\n}\nBindingBehaviorResource.define('self', SelfBindingBehavior);\n","import { InjectArray, IRegistry, Reporter } from '@aurelia/kernel';\nimport { Binding, BindingBehaviorResource, BindingMode, IDOM, IObserverLocator, IScope, LifecycleFlags } from '@aurelia/runtime';\nimport { CheckedObserver } from '../../observation/checked-observer';\nimport { EventSubscriber, IEventSubscriber } from '../../observation/event-manager';\nimport { SelectValueObserver } from '../../observation/select-value-observer';\nimport { ValueAttributeObserver } from '../../observation/value-attribute-observer';\n\nexport type UpdateTriggerableObserver = (\n  (ValueAttributeObserver & Required<ValueAttributeObserver>) |\n  (CheckedObserver & Required<CheckedObserver>) |\n  (SelectValueObserver & Required<SelectValueObserver>)\n  ) & {\n  originalHandler?: IEventSubscriber;\n};\n\nexport type UpdateTriggerableBinding = Binding & {\n  targetObserver: UpdateTriggerableObserver;\n};\n\nexport class UpdateTriggerBindingBehavior {\n  public static readonly inject: InjectArray = [IObserverLocator];\n\n  public static register: IRegistry['register'];\n\n  public persistentFlags: LifecycleFlags;\n  private readonly observerLocator: IObserverLocator;\n\n  constructor(observerLocator: IObserverLocator) {\n    this.observerLocator = observerLocator;\n  }\n\n  public bind(flags: LifecycleFlags, scope: IScope, binding: UpdateTriggerableBinding, ...events: string[]): void {\n    if (events.length === 0) {\n      throw Reporter.error(9);\n    }\n\n    if (binding.mode !== BindingMode.twoWay && binding.mode !== BindingMode.fromView) {\n      throw Reporter.error(10);\n    }\n\n    this.persistentFlags = flags & LifecycleFlags.persistentBindingFlags;\n\n    // ensure the binding's target observer has been set.\n    const targetObserver = this.observerLocator.getObserver(this.persistentFlags | flags, binding.target, binding.targetProperty) as UpdateTriggerableObserver;\n    if (!targetObserver.handler) {\n      throw Reporter.error(10);\n    }\n\n    binding.targetObserver = targetObserver;\n\n    // stash the original element subscribe function.\n    targetObserver.originalHandler = binding.targetObserver.handler;\n\n    // replace the element subscribe function with one that uses the correct events.\n    targetObserver.handler = new EventSubscriber(binding.locator.get(IDOM), events);\n  }\n\n  public unbind(flags: LifecycleFlags, scope: IScope, binding: UpdateTriggerableBinding): void {\n    // restore the state of the binding.\n    binding.targetObserver.handler.dispose();\n    binding.targetObserver.handler = binding.targetObserver.originalHandler;\n    binding.targetObserver.originalHandler = null;\n  }\n}\nBindingBehaviorResource.define('updateTrigger', UpdateTriggerBindingBehavior);\n","import {\n  AttributeInstruction,\n  DelegationStrategy,\n  IInterpolationExpression,\n  IsBindingBehavior,\n  ITargetedInstruction,\n  NodeInstruction\n} from '@aurelia/runtime';\n\nexport const enum HTMLTargetedInstructionType {\n  textBinding = 'ha',\n  listenerBinding = 'hb',\n  attributeBinding = 'hc',\n  stylePropertyBinding = 'hd',\n  setAttribute = 'he',\n}\n\nexport type HTMLNodeInstruction =\n  NodeInstruction |\n  ITextBindingInstruction;\n\nexport type HTMLAttributeInstruction =\n  AttributeInstruction |\n  IListenerBindingInstruction |\n  IAttributeBindingInstruction |\n  IStylePropertyBindingInstruction |\n  ISetAttributeInstruction;\n\nexport type HTMLTargetedInstruction = HTMLNodeInstruction | HTMLAttributeInstruction;\n// TODO: further improve specificity and integrate with the definitions;\nexport type HTMLInstructionRow = [HTMLTargetedInstruction, ...HTMLAttributeInstruction[]];\n\nexport function isHTMLTargetedInstruction(value: unknown): value is HTMLTargetedInstruction {\n  const type = (value as { type?: string }).type;\n  return typeof type === 'string' && type.length === 2;\n}\n\nexport interface ITextBindingInstruction extends ITargetedInstruction {\n  type: HTMLTargetedInstructionType.textBinding;\n  from: string | IInterpolationExpression;\n}\n\nexport interface IListenerBindingInstruction extends ITargetedInstruction {\n  type: HTMLTargetedInstructionType.listenerBinding;\n  from: string | IsBindingBehavior;\n  to: string;\n  strategy: DelegationStrategy;\n  preventDefault: boolean;\n}\n\nexport interface IStylePropertyBindingInstruction extends ITargetedInstruction {\n  type: HTMLTargetedInstructionType.stylePropertyBinding;\n  from: string | IsBindingBehavior;\n  to: string;\n}\n\nexport interface ISetAttributeInstruction extends ITargetedInstruction {\n  type: HTMLTargetedInstructionType.setAttribute;\n  value: string;\n  to: string;\n}\n\nexport interface IAttributeBindingInstruction extends ITargetedInstruction {\n  type: HTMLTargetedInstructionType.attributeBinding;\n  from: string | IsBindingBehavior;\n\n  /**\n   * `attr` and `to` have the same value on a normal attribute\n   * Will be different on `class` and `style`\n   * on `class`: attr = `class` (from binding command), to = attribute name\n   * on `style`: attr = `style` (from binding command), to = attribute name\n   */\n  attr: string;\n  to: string;\n}\n","import {\n  DelegationStrategy,\n  IInterpolationExpression,\n  IsBindingBehavior,\n  ITargetedInstruction\n} from '@aurelia/runtime';\nimport {\n  HTMLTargetedInstructionType,\n  IAttributeBindingInstruction,\n  IListenerBindingInstruction,\n  IStylePropertyBindingInstruction,\n  ITextBindingInstruction\n} from './definitions';\n\nexport class TextBindingInstruction implements ITextBindingInstruction {\n  public type: HTMLTargetedInstructionType.textBinding;\n\n  public from: string | IInterpolationExpression;\n\n  constructor(from: string | IInterpolationExpression) {\n    this.type = HTMLTargetedInstructionType.textBinding;\n\n    this.from = from;\n  }\n}\n\nexport class TriggerBindingInstruction implements IListenerBindingInstruction {\n  public type: HTMLTargetedInstructionType.listenerBinding;\n\n  public from: string | IsBindingBehavior;\n  public preventDefault: true;\n  public strategy: DelegationStrategy.none;\n  public to: string;\n\n  constructor(from: string | IsBindingBehavior, to: string) {\n    this.type = HTMLTargetedInstructionType.listenerBinding;\n\n    this.from = from;\n    this.preventDefault = true;\n    this.strategy = DelegationStrategy.none;\n    this.to = to;\n  }\n}\n\nexport class DelegateBindingInstruction implements IListenerBindingInstruction {\n  public type: HTMLTargetedInstructionType.listenerBinding;\n\n  public from: string | IsBindingBehavior;\n  public preventDefault: false;\n  public strategy: DelegationStrategy.bubbling;\n  public to: string;\n\n  constructor(from: string | IsBindingBehavior, to: string) {\n    this.type = HTMLTargetedInstructionType.listenerBinding;\n\n    this.from = from;\n    this.preventDefault = false;\n    this.strategy = DelegationStrategy.bubbling;\n    this.to = to;\n  }\n}\n\nexport class CaptureBindingInstruction implements IListenerBindingInstruction {\n  public type: HTMLTargetedInstructionType.listenerBinding;\n\n  public from: string | IsBindingBehavior;\n  public preventDefault: false;\n  public strategy: DelegationStrategy.capturing;\n  public to: string;\n\n  constructor(from: string | IsBindingBehavior, to: string) {\n    this.type = HTMLTargetedInstructionType.listenerBinding;\n\n    this.from = from;\n    this.preventDefault = false;\n    this.strategy = DelegationStrategy.capturing;\n    this.to = to;\n  }\n}\n\nexport class StylePropertyBindingInstruction implements IStylePropertyBindingInstruction {\n  public type: HTMLTargetedInstructionType.stylePropertyBinding;\n\n  public from: string | IsBindingBehavior;\n  public to: string;\n\n  constructor(from: string | IsBindingBehavior, to: string) {\n    this.type = HTMLTargetedInstructionType.stylePropertyBinding;\n\n    this.from = from;\n    this.to = to;\n  }\n}\n\nexport class SetAttributeInstruction implements ITargetedInstruction {\n  public type: HTMLTargetedInstructionType.setAttribute;\n\n  public to: string;\n  public value: string;\n\n  constructor(value: string, to: string) {\n    this.type = HTMLTargetedInstructionType.setAttribute;\n\n    this.to = to;\n    this.value = value;\n  }\n}\n\nexport class AttributeBindingInstruction implements IAttributeBindingInstruction {\n  public type: HTMLTargetedInstructionType.attributeBinding;\n\n  public from: string | IsBindingBehavior;\n  /**\n   * `attr` and `to` have the same value on a normal attribute\n   * Will be different on `class` and `style`\n   * on `class`: attr = `class` (from binding command), to = attribute name\n   * on `style`: attr = `style` (from binding command), to = attribute name\n   */\n  public attr: string;\n  public to: string;\n\n  constructor(attr: string, from: string | IsBindingBehavior, to: string) {\n    this.type = HTMLTargetedInstructionType.attributeBinding;\n\n    this.from = from;\n    this.attr = attr;\n    this.to = to;\n  }\n}\n","import { Constructable, IRegistry, Tracer } from '@aurelia/kernel';\nimport {\n  buildTemplateDefinition,\n  HydrateElementInstruction,\n  ICustomElementType,\n  IDOM,\n  INode,\n  IRenderContext,\n  IRenderingEngine,\n  ITemplate,\n  IView,\n  IViewFactory,\n  LifecycleFlags,\n  TargetedInstructionType,\n  TemplateDefinition\n} from '@aurelia/runtime';\nimport { HTMLTargetedInstruction, isHTMLTargetedInstruction } from './definitions';\nimport { SetAttributeInstruction } from './instructions';\n\nconst slice = Array.prototype.slice;\n\nexport function createElement<T extends INode = Node>(\n  dom: IDOM<T>,\n  tagOrType: string | Constructable,\n  props?: Record<string, string | HTMLTargetedInstruction>,\n  children?: ArrayLike<unknown>\n): RenderPlan<T> {\n  if (typeof tagOrType === 'string') {\n    return createElementForTag(dom, tagOrType, props, children);\n  } else {\n    return createElementForType(dom, tagOrType as ICustomElementType<T>, props, children);\n  }\n}\n\n/**\n * RenderPlan. Todo: describe goal of this class\n */\nexport class RenderPlan<T extends INode = Node> {\n  private readonly dom: IDOM<T>;\n  private readonly dependencies: ReadonlyArray<IRegistry>;\n  private readonly instructions: HTMLTargetedInstruction[][];\n  private readonly node: T;\n\n  private lazyDefinition: TemplateDefinition;\n\n  constructor(\n    dom: IDOM<T>,\n    node: T,\n    instructions: HTMLTargetedInstruction[][],\n    dependencies: ReadonlyArray<IRegistry>\n  ) {\n    this.dom = dom;\n    this.dependencies = dependencies;\n    this.instructions = instructions;\n    this.node = node;\n  }\n\n  public get definition(): TemplateDefinition {\n    return this.lazyDefinition || (this.lazyDefinition =\n      buildTemplateDefinition(null, null, this.node, null, typeof this.node === 'string', null, this.instructions, this.dependencies));\n  }\n\n  public getElementTemplate(engine: IRenderingEngine, Type?: ICustomElementType<T>): ITemplate<T> {\n    return engine.getElementTemplate(this.dom, this.definition, null, Type);\n  }\n\n  public createView(flags: LifecycleFlags, engine: IRenderingEngine, parentContext?: IRenderContext): IView {\n    return this.getViewFactory(engine, parentContext).create();\n  }\n\n  public getViewFactory(engine: IRenderingEngine, parentContext?: IRenderContext): IViewFactory {\n    return engine.getViewFactory(this.dom, this.definition, parentContext);\n  }\n\n  /** @internal */\n  public mergeInto(parent: T, instructions: HTMLTargetedInstruction[][], dependencies: IRegistry[]): void {\n    this.dom.appendChild(parent, this.node);\n    instructions.push(...this.instructions);\n    dependencies.push(...this.dependencies);\n  }\n}\n\nfunction createElementForTag<T extends INode>(dom: IDOM<T>, tagName: string, props?: Record<string, string | HTMLTargetedInstruction>, children?: ArrayLike<unknown>): RenderPlan<T> {\n  if (Tracer.enabled) { Tracer.enter('createElement', 'createElementForTag', slice.call(arguments)); }\n  const instructions: HTMLTargetedInstruction[] = [];\n  const allInstructions: HTMLTargetedInstruction[][] = [];\n  const dependencies: IRegistry[] = [];\n  const element = dom.createElement(tagName);\n  let hasInstructions = false;\n\n  if (props) {\n    Object.keys(props)\n      .forEach(to => {\n        const value = props[to];\n\n        if (isHTMLTargetedInstruction(value)) {\n          hasInstructions = true;\n          instructions.push(value);\n        } else {\n          dom.setAttribute(element, to, value);\n        }\n      });\n  }\n\n  if (hasInstructions) {\n    dom.makeTarget(element);\n    allInstructions.push(instructions);\n  }\n\n  if (children) {\n    addChildren(dom, element, children, allInstructions, dependencies);\n  }\n\n  if (Tracer.enabled) { Tracer.leave(); }\n  return new RenderPlan(dom, element, allInstructions, dependencies);\n}\n\nfunction createElementForType<T extends INode>(dom: IDOM<T>, Type: ICustomElementType<T>, props?: object, children?: ArrayLike<unknown>): RenderPlan<T> {\n  if (Tracer.enabled) { Tracer.enter('createElement', 'createElementForType', slice.call(arguments)); }\n  const tagName = Type.description.name;\n  const instructions: HTMLTargetedInstruction[] = [];\n  const allInstructions = [instructions];\n  const dependencies: IRegistry[] = [];\n  const childInstructions: HTMLTargetedInstruction[] = [];\n  const bindables = Type.description.bindables;\n  const element = dom.createElement(tagName);\n\n  dom.makeTarget(element);\n\n  if (!dependencies.includes(Type)) {\n    dependencies.push(Type);\n  }\n\n  instructions.push(new HydrateElementInstruction(tagName, childInstructions));\n\n  if (props) {\n    Object.keys(props)\n      .forEach(to => {\n        const value: HTMLTargetedInstruction | string = props[to];\n\n        if (isHTMLTargetedInstruction(value)) {\n          childInstructions.push(value);\n        } else {\n          const bindable = bindables[to];\n\n          if (bindable) {\n            childInstructions.push({\n              type: TargetedInstructionType.setProperty,\n              to,\n              value\n            });\n          } else {\n            childInstructions.push(new SetAttributeInstruction(value, to));\n          }\n        }\n      });\n  }\n\n  if (children) {\n    addChildren(dom, element, children, allInstructions, dependencies);\n  }\n\n  if (Tracer.enabled) { Tracer.leave(); }\n  return new RenderPlan<T>(dom, element, allInstructions, dependencies);\n}\n\nfunction addChildren<T extends INode>(dom: IDOM<T>, parent: T, children: ArrayLike<unknown>, allInstructions: HTMLTargetedInstruction[][], dependencies: IRegistry[]): void {\n  for (let i = 0, ii = children.length; i < ii; ++i) {\n    const current = children[i];\n\n    switch (typeof current) {\n      case 'string':\n        dom.appendChild(parent, dom.createTextNode(current));\n        break;\n      case 'object':\n        if (dom.isNodeInstance(current)) {\n          dom.appendChild(parent, current);\n        } else if ('mergeInto' in (current as RenderPlan)) {\n          (current as RenderPlan<T>).mergeInto(parent, allInstructions, dependencies);\n        }\n    }\n  }\n}\n","import { Constructable, Immutable, InjectArray, IRegistry } from '@aurelia/kernel';\nimport {\n  bindable,\n  CompositionCoordinator,\n  CustomElementResource,\n  ICustomElement,\n  ICustomElementResource,\n  IDOM,\n  IHydrateElementInstruction,\n  INode,\n  IRenderable,\n  IRenderingEngine,\n  ITargetedInstruction,\n  ITemplateDefinition,\n  IView,\n  IViewFactory,\n  LifecycleFlags,\n  TargetedInstruction,\n  TemplateDefinition\n} from '@aurelia/runtime';\nimport { createElement, RenderPlan } from '../../create-element';\n\nconst composeSource: ITemplateDefinition = {\n  name: 'au-compose',\n  containerless: true\n};\n\nconst composeProps = ['subject', 'composing'];\n\nexport type Subject<T extends INode = Node> = IViewFactory<T> | IView<T> | RenderPlan<T> | Constructable | TemplateDefinition;\nexport type MaybeSubjectPromise<T> = Subject<T> | Promise<Subject<T>> | null;\n\nexport interface Compose<T extends INode = Node> extends ICustomElement<T> {}\nexport class Compose<T extends INode = Node> implements Compose<T> {\n  public static readonly inject: InjectArray = [IDOM, IRenderable, ITargetedInstruction, IRenderingEngine, CompositionCoordinator];\n\n  public static readonly register: IRegistry['register'];\n  public static readonly kind: ICustomElementResource<Node>;\n  public static readonly description: TemplateDefinition;\n  public static readonly containerless: TemplateDefinition['containerless'];\n  public static readonly shadowOptions: TemplateDefinition['shadowOptions'];\n  public static readonly bindables: TemplateDefinition['bindables'];\n\n  @bindable public subject: MaybeSubjectPromise<T>;\n  @bindable public composing: boolean;\n\n  private readonly dom: IDOM;\n  private readonly coordinator: CompositionCoordinator;\n  private readonly properties: Record<string, TargetedInstruction>;\n  private readonly renderable: IRenderable<T>;\n  private readonly renderingEngine: IRenderingEngine;\n  private lastSubject: MaybeSubjectPromise<T>;\n\n  constructor(\n    dom: IDOM<T>,\n    renderable: IRenderable<T>,\n    instruction: Immutable<IHydrateElementInstruction>,\n    renderingEngine: IRenderingEngine,\n    coordinator: CompositionCoordinator\n  ) {\n    this.dom = dom;\n    this.subject = null;\n    this.composing = false;\n\n    this.coordinator = coordinator;\n    this.lastSubject = null;\n    this.renderable = renderable;\n    this.renderingEngine = renderingEngine;\n\n    this.coordinator.onSwapComplete = () => {\n      this.composing = false;\n    };\n\n    this.properties = instruction.instructions\n      .filter((x: ITargetedInstruction & {to?: string}) => !composeProps.includes(x.to))\n      .reduce(\n        (acc, item: ITargetedInstruction & {to?: string}) => {\n          if (item.to) {\n            acc[item.to] = item;\n          }\n\n          return acc;\n        },\n        {}\n      );\n  }\n\n  public binding(flags: LifecycleFlags): void {\n    this.startComposition(this.subject, null, flags);\n    this.coordinator.binding(flags, this.$scope);\n  }\n\n  public attaching(flags: LifecycleFlags): void {\n    this.coordinator.attaching(flags);\n  }\n\n  public detaching(flags: LifecycleFlags): void {\n    this.coordinator.detaching(flags);\n  }\n\n  public unbinding(flags: LifecycleFlags): void {\n    this.lastSubject = null;\n    this.coordinator.unbinding(flags);\n  }\n\n  public caching(flags: LifecycleFlags): void {\n    this.coordinator.caching(flags);\n  }\n\n  public subjectChanged(newValue: Subject<T> | Promise<Subject<T>>, previousValue: Subject<T> | Promise<Subject<T>>, flags: LifecycleFlags): void {\n    this.startComposition(newValue, previousValue, flags);\n  }\n\n  private startComposition(subject: MaybeSubjectPromise<T>, _previousSubject: MaybeSubjectPromise<T>, flags: LifecycleFlags): void {\n    if (this.lastSubject === subject) {\n      return;\n    }\n\n    this.lastSubject = subject;\n\n    if (subject instanceof Promise) {\n      subject = subject.then(x => this.resolveView(x, flags));\n    } else {\n      subject = this.resolveView(subject, flags);\n    }\n\n    this.composing = true;\n    this.coordinator.compose(subject as IView<T> | Promise<IView<T>>, flags);\n  }\n\n  private resolveView(subject: Subject<T> | null, flags: LifecycleFlags): IView<T> | null {\n    const view = this.provideViewFor(subject, flags);\n\n    if (view) {\n      view.hold(this.$projector.host);\n      view.lockScope(this.renderable.$scope);\n      return view;\n    }\n\n    return null;\n  }\n\n  private provideViewFor(subject: Subject<T> | null, flags: LifecycleFlags): IView<T> | null {\n    if (!subject) {\n      return null;\n    }\n\n    if ('lockScope' in subject) { // IView\n      return subject;\n    }\n\n    if ('createView' in subject) { // RenderPlan\n      return subject.createView(\n        flags,\n        this.renderingEngine,\n        this.renderable.$context\n      ) as IView<T>;\n    }\n\n    if ('create' in subject) { // IViewFactory\n      return subject.create();\n    }\n\n    if ('template' in subject) { // Raw Template Definition\n      return this.renderingEngine.getViewFactory(\n        this.dom,\n        subject,\n        this.renderable.$context\n      ).create() as IView<T>;\n    }\n\n    // Constructable (Custom Element Constructor)\n    return createElement(\n      this.dom,\n      subject,\n      this.properties,\n      this.$projector.children\n    ).createView(\n      flags,\n      this.renderingEngine,\n      this.renderable.$context\n    ) as IView<T>;\n  }\n}\nCustomElementResource.define(composeSource, Compose);\n","import {\n  Constructable,\n  IContainer,\n  InjectArray,\n  IResolver,\n  PLATFORM,\n  Registration,\n  Reporter,\n  Writable\n} from '@aurelia/kernel';\n\nimport {\n  CompiledTemplate,\n  DOM,\n  IDOM,\n  INode,\n  INodeSequence,\n  IRenderContext,\n  IRenderLocation,\n  ITemplate,\n  ITemplateFactory,\n  NodeSequence,\n  TemplateDefinition\n} from '@aurelia/runtime';\n\nexport const enum NodeType {\n  Element = 1,\n  Attr = 2,\n  Text = 3,\n  CDATASection = 4,\n  EntityReference = 5,\n  Entity = 6,\n  ProcessingInstruction = 7,\n  Comment = 8,\n  Document = 9,\n  DocumentType = 10,\n  DocumentFragment = 11,\n  Notation = 12\n}\n\nfunction isRenderLocation(node: Node): node is Node & IRenderLocation {\n  return node.textContent === 'au-end';\n}\n\n/**\n * IDOM implementation for Html.\n */\nexport class HTMLDOM implements IDOM {\n  public readonly Node: typeof Node;\n  public readonly Element: typeof Element;\n  public readonly HTMLElement: typeof HTMLElement;\n  public readonly CustomEvent: typeof CustomEvent;\n  public readonly window: Window;\n  public readonly document: Document;\n\n  constructor(\n    window: Window,\n    document: Document,\n    TNode: typeof Node,\n    TElement: typeof Element,\n    THTMLElement: typeof HTMLElement,\n    TCustomEvent: typeof CustomEvent\n  ) {\n    this.window = window;\n    this.document = document;\n    this.Node = TNode;\n    this.Element = TElement;\n    this.HTMLElement = THTMLElement;\n    this.CustomEvent = TCustomEvent;\n    if (DOM.isInitialized) {\n      Reporter.write(1001); // TODO: create reporters code // DOM already initialized (just info)\n      DOM.destroy();\n    }\n    DOM.initialize(this);\n  }\n\n  public static register(container: IContainer): IResolver<HTMLDOM> {\n    return Registration.alias(IDOM, this).register(container);\n  }\n\n  public addEventListener(eventName: string, subscriber: EventListenerOrEventListenerObject, publisher?: Node, options?: boolean | AddEventListenerOptions): void {\n    (publisher || this.document).addEventListener(eventName, subscriber, options);\n  }\n\n  public appendChild(parent: Node, child: Node): void {\n    parent.appendChild(child);\n  }\n\n  public cloneNode<T>(node: T, deep?: boolean): T {\n    return (node as unknown as Node).cloneNode(deep !== false) as unknown as T;\n  }\n\n  public convertToRenderLocation(node: Node): IRenderLocation {\n    if (this.isRenderLocation(node)) {\n      return node; // it's already a IRenderLocation (converted by FragmentNodeSequence)\n    }\n\n    if (node.parentNode === null) {\n      throw Reporter.error(52);\n    }\n\n    const locationEnd = this.document.createComment('au-end');\n    const locationStart = this.document.createComment('au-start');\n\n    node.parentNode.replaceChild(locationEnd, node);\n\n    locationEnd.parentNode.insertBefore(locationStart, locationEnd);\n\n    (locationEnd as IRenderLocation).$start = locationStart as IRenderLocation;\n    (locationStart as IRenderLocation).$nodes = null;\n\n    return locationEnd as IRenderLocation;\n  }\n\n  public createDocumentFragment(markupOrNode?: string | Node): DocumentFragment {\n    if (markupOrNode === undefined || markupOrNode === null) {\n      return this.document.createDocumentFragment();\n    }\n\n    if (this.isNodeInstance(markupOrNode)) {\n      if ((markupOrNode as HTMLTemplateElement).content !== undefined) {\n        return (markupOrNode as HTMLTemplateElement).content;\n      }\n\n      const fragment = this.document.createDocumentFragment();\n      fragment.appendChild(markupOrNode);\n      return fragment;\n    }\n\n    return this.createTemplate(markupOrNode).content;\n  }\n\n  public createElement(name: string): HTMLElement {\n    return this.document.createElement(name);\n  }\n\n  public fetch(input: RequestInfo, init?: RequestInit): Promise<Response> {\n    return this.window.fetch(input, init);\n  }\n\n  // tslint:disable-next-line:no-any // this is how the DOM is typed\n  public createCustomEvent<T = any>(eventType: string, options?: CustomEventInit<T>): CustomEvent<T> {\n    return new this.CustomEvent(eventType, options);\n  }\n\n  public dispatchEvent(evt: Event): void {\n    this.document.dispatchEvent(evt);\n  }\n\n  public createNodeObserver(node: Node, cb: MutationCallback, init: MutationObserverInit): MutationObserver {\n    if (typeof MutationObserver === 'undefined') {\n      // TODO: find a proper response for this scenario\n      return {\n        disconnect(): void { /*empty*/ },\n        observe(): void { /*empty*/ },\n        takeRecords(): MutationRecord[] { return PLATFORM.emptyArray as MutationRecord[]; }\n      };\n    }\n\n    const observer = new MutationObserver(cb);\n    observer.observe(node, init);\n    return observer;\n  }\n\n  public createTemplate(markup?: unknown): HTMLTemplateElement {\n    if (markup === undefined || markup === null) {\n      return this.document.createElement('template');\n    }\n\n    const template = this.document.createElement('template');\n    template.innerHTML = (markup as string | object).toString();\n\n    return template;\n  }\n  public createTextNode(text: string): Text {\n    return this.document.createTextNode(text);\n  }\n\n  public insertBefore(nodeToInsert: Node, referenceNode: Node): void {\n    referenceNode.parentNode.insertBefore(nodeToInsert, referenceNode);\n  }\n\n  public isMarker(node: unknown): node is HTMLElement {\n    return (node as AuMarker).nodeName === 'AU-M';\n  }\n\n  public isNodeInstance(potentialNode: unknown): potentialNode is Node {\n    return potentialNode !== null && potentialNode !== undefined && (potentialNode as Node).nodeType > 0;\n  }\n\n  public isRenderLocation(node: unknown): node is IRenderLocation {\n    return (node as Comment).textContent === 'au-end';\n  }\n\n  public makeTarget(node: unknown): void {\n    (node as Element).className = 'au';\n  }\n\n  public registerElementResolver(container: IContainer, resolver: IResolver): void {\n    container.registerResolver(INode, resolver);\n    container.registerResolver(this.Node, resolver);\n    container.registerResolver(this.Element, resolver);\n    container.registerResolver(this.HTMLElement, resolver);\n  }\n\n  public remove(node: Node): void {\n    if ((node as ChildNode).remove) {\n      (node as ChildNode).remove();\n    } else {\n      node.parentNode.removeChild(node);\n    }\n  }\n\n  public removeEventListener(eventName: string, subscriber: EventListenerOrEventListenerObject, publisher?: Node, options?: boolean | EventListenerOptions): void {\n    (publisher || this.document).removeEventListener(eventName, subscriber, options);\n  }\n\n  public setAttribute(node: Element, name: string, value: unknown): void {\n    node.setAttribute(name, value as string);\n  }\n}\n\nconst $DOM = DOM as unknown as HTMLDOM;\nexport { $DOM as DOM };\n\n/**\n * A specialized INodeSequence with optimizations for text (interpolation) bindings\n * The contract of this INodeSequence is:\n * - the previous element is an `au-m` node\n * - text is the actual text node\n */\n/** @internal */\nexport class TextNodeSequence implements INodeSequence {\n  public dom: HTMLDOM;\n  public firstChild: Text;\n  public lastChild: Text;\n  public childNodes: Text[];\n\n  private readonly targets: [Node];\n\n  constructor(dom: HTMLDOM, text: Text) {\n    this.dom = dom;\n    this.firstChild = text;\n    this.lastChild = text;\n    this.childNodes = [text];\n    this.targets = [new AuMarker(text) as unknown as Node];\n  }\n\n  public findTargets(): ArrayLike<Node> {\n    return this.targets;\n  }\n\n  public insertBefore(refNode: Node): void {\n    refNode.parentNode.insertBefore(this.firstChild, refNode);\n  }\n\n  public appendTo(parent: Node): void {\n    parent.appendChild(this.firstChild);\n  }\n\n  public remove(): void {\n    this.firstChild.remove();\n  }\n}\n// tslint:enable:no-any\n\n// This is the most common form of INodeSequence.\n// Every custom element or template controller whose node sequence is based on an HTML template\n// has an instance of this under the hood. Anyone who wants to create a node sequence from\n// a string of markup would also receive an instance of this.\n// CompiledTemplates create instances of FragmentNodeSequence.\n/**\n * This is the most common form of INodeSequence.\n * @internal\n */\nexport class FragmentNodeSequence implements INodeSequence {\n  public dom: IDOM;\n  public firstChild: Node;\n  public lastChild: Node;\n  public childNodes: Node[];\n\n  private end: IRenderLocation & Comment;\n  private start: IRenderLocation & Comment;\n  private readonly fragment: DocumentFragment;\n  private readonly targets: ArrayLike<Node>;\n\n  constructor(dom: IDOM, fragment: DocumentFragment) {\n    this.dom = dom;\n    this.fragment = fragment;\n    // tslint:disable-next-line:no-any\n    const targetNodeList = fragment.querySelectorAll('.au');\n    let i = 0;\n    let ii = targetNodeList.length;\n    const targets = this.targets = Array(ii);\n\n    while (i < ii) {\n      // eagerly convert all markers to RenderLocations (otherwise the renderer\n      // will do it anyway) and store them in the target list (since the comments\n      // can't be queried)\n      const target = targetNodeList[i];\n\n      if (target.nodeName === 'AU-M') {\n        // note the renderer will still call this method, but it will just return the\n        // location if it sees it's already a location\n        targets[i] = this.dom.convertToRenderLocation(target);\n      } else {\n        // also store non-markers for consistent ordering\n        targets[i] = target;\n      }\n      ++i;\n    }\n\n    const childNodeList = fragment.childNodes;\n    i = 0;\n    ii = childNodeList.length;\n    const childNodes = this.childNodes = Array(ii);\n    while (i < ii) {\n      childNodes[i] = childNodeList[i] as Writable<Node>;\n      ++i;\n    }\n\n    this.firstChild = fragment.firstChild;\n    this.lastChild = fragment.lastChild;\n\n    this.start = this.end = null;\n  }\n\n  public findTargets(): ArrayLike<Node> {\n    return this.targets;\n  }\n\n  public insertBefore(refNode: IRenderLocation & Comment): void {\n    refNode.parentNode.insertBefore(this.fragment, refNode);\n    // internally we could generally assume that this is an IRenderLocation,\n    // but since this is also public API we still need to double check\n    // (or horrible things might happen)\n    if (isRenderLocation(refNode)) {\n      this.end = refNode;\n      const start = this.start = refNode.$start as IRenderLocation & Comment;\n      if (start.$nodes === null) {\n        start.$nodes = this;\n      } else {\n        // if more than one INodeSequence uses the same IRenderLocation, it's an child\n        // of a repeater (or something similar) and we shouldn't remove all nodes between\n        // start - end since that would always remove all items from a repeater, even\n        // when only one is removed\n        // so we set $nodes to PLATFORM.emptyObject to 1) tell other sequences that it's\n        // occupied and 2) prevent start.$nodes === this from ever evaluating to true\n        // during remove()\n        start.$nodes = PLATFORM.emptyObject;\n      }\n    }\n  }\n\n  public appendTo(parent: Node): void {\n    // tslint:disable-next-line:no-any\n    parent.appendChild(this.fragment);\n    // this can never be a IRenderLocation, and if for whatever reason we moved\n    // from a IRenderLocation to a host, make sure \"start\" and \"end\" are null\n    this.start = this.end = null;\n  }\n\n  public remove(): void {\n    const fragment = this.fragment;\n    if (this.start !== null && this.start.$nodes === this) {\n      // if we're between a valid \"start\" and \"end\" (e.g. if/else, containerless, or a\n      // repeater with a single item) then simply remove everything in-between (but not\n      // the comments themselves as they belong to the parent)\n      const end = this.end;\n      let next: Node;\n      let current = this.start.nextSibling;\n      while (current !== end) {\n        next = current.nextSibling;\n        // tslint:disable-next-line:no-any\n        fragment.appendChild(current);\n        current = next;\n      }\n      this.start.$nodes = null;\n      this.start = this.end = null;\n    } else {\n      // otherwise just remove from first to last child in the regular way\n      let current = this.firstChild;\n\n      if (current.parentNode !== fragment) {\n        const end = this.lastChild;\n        let next: Node;\n\n        while (current !== null) {\n          next = current.nextSibling;\n          // tslint:disable-next-line:no-any\n          fragment.appendChild(current);\n\n          if (current === end) {\n            break;\n          }\n\n          current = next;\n        }\n      }\n    }\n  }\n}\n\n/** @internal */\nexport interface NodeSequenceFactory {\n  createNodeSequence(): INodeSequence;\n}\n\n/** @internal */\nexport class NodeSequenceFactory implements NodeSequenceFactory {\n  private readonly dom: IDOM;\n  private readonly deepClone: boolean;\n  private readonly node: Node;\n  private readonly Type: Constructable<INodeSequence>;\n\n  constructor(dom: IDOM, markupOrNode: string | Node) {\n    this.dom = dom;\n    const fragment = dom.createDocumentFragment(markupOrNode) as DocumentFragment;\n    const childNodes = fragment.childNodes;\n    switch (childNodes.length) {\n      case 0:\n        this.createNodeSequence = () => NodeSequence.empty;\n        return;\n      case 2:\n        const target = childNodes[0];\n        if (target.nodeName === 'AU-M' || target.nodeName === '#comment') {\n          const text = childNodes[1];\n          if (text.nodeType === NodeType.Text && text.textContent.length === 0) {\n            this.deepClone = false;\n            this.node = text;\n            this.Type = TextNodeSequence;\n            return;\n          }\n        }\n      // falls through if not returned\n      default:\n        this.deepClone = true;\n        this.node = fragment;\n        this.Type = FragmentNodeSequence;\n    }\n  }\n\n  public createNodeSequence(): INodeSequence {\n    return new this.Type(this.dom, this.node.cloneNode(this.deepClone));\n  }\n}\n\nexport interface AuMarker extends INode { }\n\n/** @internal */\nexport class AuMarker implements INode {\n  public get parentNode(): Node & ParentNode {\n    return this.nextSibling.parentNode;\n  }\n\n  public readonly nextSibling: Node;\n  public readonly previousSibling: Node;\n  public readonly content?: Node;\n  public readonly childNodes: ArrayLike<ChildNode>;\n  public readonly nodeName: 'AU-M';\n  public readonly nodeType: NodeType.Element;\n\n  public textContent: string;\n\n  constructor(next: Node) {\n    this.nextSibling = next;\n    this.textContent = '';\n  }\n\n  public remove(): void { /* do nothing */ }\n}\n\n(proto => {\n  proto.previousSibling = null;\n  proto.childNodes = PLATFORM.emptyArray;\n  proto.nodeName = 'AU-M';\n  proto.nodeType = NodeType.Element;\n})(AuMarker.prototype as Writable<AuMarker>);\n\n/** @internal */\nexport class HTMLTemplateFactory implements ITemplateFactory {\n  public static readonly inject: InjectArray = [IDOM];\n\n  private readonly dom: IDOM;\n\n  constructor(dom: IDOM) {\n    this.dom = dom;\n  }\n\n  public static register(container: IContainer): IResolver<ITemplateFactory> {\n    return Registration.singleton(ITemplateFactory, this).register(container);\n  }\n\n  public create(parentRenderContext: IRenderContext, definition: TemplateDefinition): ITemplate {\n    return new CompiledTemplate(this.dom, definition, new NodeSequenceFactory(this.dom, definition.template as string | Node), parentRenderContext);\n  }\n}\n","import { InjectArray, InterfaceSymbol, IRegistry, Tracer } from '@aurelia/kernel';\nimport {\n  addBinding,\n  Binding,\n  BindingMode,\n  BindingType,\n  ensureExpression,\n  IDOM,\n  IExpressionParser,\n  IInstructionRenderer,\n  instructionRenderer,\n  InterpolationBinding,\n  IObserverLocator,\n  IRenderable,\n  IRenderContext,\n  LifecycleFlags,\n  MultiInterpolationBinding\n} from '@aurelia/runtime';\nimport { AttributeBinding } from './binding/attribute';\nimport { Listener } from './binding/listener';\nimport {\n  HTMLTargetedInstructionType,\n  IAttributeBindingInstruction,\n  IListenerBindingInstruction,\n  ISetAttributeInstruction,\n  IStylePropertyBindingInstruction,\n  ITextBindingInstruction\n} from './definitions';\nimport { IEventManager } from './observation/event-manager';\n\nconst slice = Array.prototype.slice;\n\n@instructionRenderer(HTMLTargetedInstructionType.textBinding)\n/** @internal */\nexport class TextBindingRenderer implements IInstructionRenderer {\n  public static readonly inject: InjectArray = [IExpressionParser, IObserverLocator];\n  public static readonly register: IRegistry['register'];\n\n  private readonly parser: IExpressionParser;\n  private readonly observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: ChildNode, instruction: ITextBindingInstruction): void {\n    if (Tracer.enabled) { Tracer.enter('TextBindingRenderer', 'render', slice.call(arguments)); }\n    const next = target.nextSibling;\n    if (dom.isMarker(target)) {\n      dom.remove(target);\n    }\n    let binding: MultiInterpolationBinding | InterpolationBinding;\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.Interpolation);\n    if (expr.isMulti) {\n      binding = new MultiInterpolationBinding(this.observerLocator, expr, next, 'textContent', BindingMode.toView, context);\n    } else {\n      binding = new InterpolationBinding(expr.firstExpression, expr, next, 'textContent', BindingMode.toView, this.observerLocator, context, true);\n    }\n    addBinding(renderable, binding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n@instructionRenderer(HTMLTargetedInstructionType.listenerBinding)\n/** @internal */\nexport class ListenerBindingRenderer implements IInstructionRenderer {\n  public static readonly inject: InjectArray = [IExpressionParser, IEventManager];\n  public static readonly register: IRegistry['register'];\n\n  private readonly parser: IExpressionParser;\n  private readonly eventManager: IEventManager;\n\n  constructor(parser: IExpressionParser, eventManager: IEventManager) {\n    this.parser = parser;\n    this.eventManager = eventManager;\n  }\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: HTMLElement, instruction: IListenerBindingInstruction): void {\n    if (Tracer.enabled) { Tracer.enter('ListenerBindingRenderer', 'render', slice.call(arguments)); }\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.IsEventCommand | (instruction.strategy + BindingType.DelegationStrategyDelta));\n    const binding = new Listener(dom, instruction.to, instruction.strategy, expr, target, instruction.preventDefault, this.eventManager, context);\n    addBinding(renderable, binding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n@instructionRenderer(HTMLTargetedInstructionType.setAttribute)\n/** @internal */\nexport class SetAttributeRenderer implements IInstructionRenderer {\n  public static readonly register: IRegistry['register'];\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: HTMLElement, instruction: ISetAttributeInstruction): void {\n    if (Tracer.enabled) { Tracer.enter('SetAttributeRenderer', 'render', slice.call(arguments)); }\n    target.setAttribute(instruction.to, instruction.value);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n@instructionRenderer(HTMLTargetedInstructionType.stylePropertyBinding)\n/** @internal */\nexport class StylePropertyBindingRenderer implements IInstructionRenderer {\n  public static readonly inject: InjectArray = [IExpressionParser, IObserverLocator];\n  public static readonly register: IRegistry['register'];\n\n  private readonly parser: IExpressionParser;\n  private readonly observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: HTMLElement, instruction: IStylePropertyBindingInstruction): void {\n    if (Tracer.enabled) { Tracer.enter('StylePropertyBindingRenderer', 'render', slice.call(arguments)); }\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.IsPropertyCommand | BindingMode.toView);\n    const binding = new Binding(expr, target.style, instruction.to, BindingMode.toView, this.observerLocator, context);\n    addBinding(renderable, binding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n@instructionRenderer(HTMLTargetedInstructionType.attributeBinding)\n/** @internal */\nexport class AttributeBindingRenderer implements IInstructionRenderer {\n  public static readonly inject: ReadonlyArray<InterfaceSymbol> = [IExpressionParser, IObserverLocator];\n  public static readonly register: IRegistry['register'];\n\n  private readonly parser: IExpressionParser;\n  private readonly observerLocator: IObserverLocator;\n\n  constructor(parser: IExpressionParser, observerLocator: IObserverLocator) {\n    this.parser = parser;\n    this.observerLocator = observerLocator;\n  }\n\n  public render(flags: LifecycleFlags, dom: IDOM, context: IRenderContext, renderable: IRenderable, target: HTMLElement, instruction: IAttributeBindingInstruction): void {\n    if (Tracer.enabled) { Tracer.enter('StylePropertyBindingRenderer', 'render', slice.call(arguments)); }\n    const expr = ensureExpression(this.parser, instruction.from, BindingType.IsPropertyCommand | BindingMode.toView);\n    const binding = new AttributeBinding(\n      expr,\n      target,\n      instruction.attr/*targetAttribute*/,\n      instruction.to/*targetKey*/,\n      BindingMode.toView,\n      this.observerLocator,\n      context\n    );\n    addBinding(renderable, binding);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n","import { IContainer, IResolver, PLATFORM, Registration, Reporter, Tracer } from '@aurelia/kernel';\nimport {\n  CustomElementHost,\n  ICustomElement,\n  IDOM,\n  IElementProjector,\n  INodeSequence,\n  IProjectorLocator,\n  TemplateDefinition\n} from '@aurelia/runtime';\n\nconst slice = Array.prototype.slice;\n\nconst defaultShadowOptions = {\n  mode: 'open' as 'open' | 'closed'\n};\n\nexport class HTMLProjectorLocator implements IProjectorLocator<Node> {\n  public static register(container: IContainer): IResolver<IProjectorLocator> {\n    return Registration.singleton(IProjectorLocator, this).register(container);\n  }\n\n  public getElementProjector(dom: IDOM<Node>, $component: ICustomElement<Node>, host: CustomElementHost<HTMLElement>, def: TemplateDefinition): IElementProjector<Node> {\n    if (def.shadowOptions || def.hasSlots) {\n      if (def.containerless) {\n        throw Reporter.error(21);\n      }\n\n      return new ShadowDOMProjector(dom, $component, host, def);\n    }\n\n    if (def.containerless) {\n      return new ContainerlessProjector(dom, $component, host);\n    }\n\n    return new HostProjector($component, host);\n  }\n}\n\nconst childObserverOptions = { childList: true };\n\n/** @internal */\nexport class ShadowDOMProjector implements IElementProjector<Node> {\n  public host: CustomElementHost<Node>;\n  public shadowRoot: CustomElementHost<ShadowRoot>;\n  public dom: IDOM<Node>;\n\n  constructor(dom: IDOM<Node>, $customElement: ICustomElement<Node>, host: CustomElementHost<HTMLElement>, definition: TemplateDefinition) {\n    this.dom = dom;\n    this.host = host;\n\n    let shadowOptions: ShadowRootInit;\n    if (\n      definition.shadowOptions !== undefined &&\n      definition.shadowOptions !== null &&\n      typeof definition.shadowOptions === 'object' &&\n      'mode' in definition.shadowOptions\n    ) {\n      shadowOptions = definition.shadowOptions as unknown as ShadowRootInit;\n    } else {\n      shadowOptions = defaultShadowOptions;\n    }\n    this.shadowRoot = host.attachShadow(shadowOptions);\n    this.host.$customElement = $customElement;\n    this.shadowRoot.$customElement = $customElement as ICustomElement<ShadowRoot>;\n  }\n\n  public get children(): ArrayLike<CustomElementHost<Node>> {\n    return this.shadowRoot.childNodes;\n  }\n\n  public subscribeToChildrenChange(callback: () => void): void {\n    // TODO: add a way to dispose/disconnect\n    this.dom.createNodeObserver(this.shadowRoot, callback, childObserverOptions);\n  }\n\n  public provideEncapsulationSource(): CustomElementHost<ShadowRoot> {\n    return this.shadowRoot;\n  }\n\n  public project(nodes: INodeSequence<Node>): void {\n    if (Tracer.enabled) { Tracer.enter('ShadowDOMProjector', 'project', slice.call(arguments)); }\n    nodes.appendTo(this.shadowRoot);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public take(nodes: INodeSequence<Node>): void {\n    if (Tracer.enabled) { Tracer.enter('ShadowDOMProjector', 'take', slice.call(arguments)); }\n    nodes.remove();\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n/** @internal */\nexport class ContainerlessProjector implements IElementProjector<Node> {\n  public host: CustomElementHost<Node>;\n\n  private readonly childNodes: ReadonlyArray<CustomElementHost<Node>>;\n\n  constructor(dom: IDOM<Node>, $customElement: ICustomElement<Node>, host: Node) {\n    if (host.childNodes.length) {\n      this.childNodes = PLATFORM.toArray(host.childNodes);\n    } else {\n      this.childNodes = PLATFORM.emptyArray;\n    }\n\n    this.host = dom.convertToRenderLocation(host) as CustomElementHost<Node>;\n    this.host.$customElement = $customElement;\n  }\n\n  public get children(): ArrayLike<CustomElementHost<Node>> {\n    return this.childNodes;\n  }\n\n  public subscribeToChildrenChange(callback: () => void): void {\n    // TODO: add a way to dispose/disconnect\n    const observer = new MutationObserver(callback);\n    observer.observe(this.host, childObserverOptions);\n  }\n\n  public provideEncapsulationSource(): Node {\n    return this.host.getRootNode();\n  }\n\n  public project(nodes: INodeSequence<Node>): void {\n    if (Tracer.enabled) { Tracer.enter('ContainerlessProjector', 'project', slice.call(arguments)); }\n    nodes.insertBefore(this.host);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public take(nodes: INodeSequence<Node>): void {\n    if (Tracer.enabled) { Tracer.enter('ContainerlessProjector', 'take', slice.call(arguments)); }\n    nodes.remove();\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n\n/** @internal */\nexport class HostProjector implements IElementProjector<Node> {\n  public host: CustomElementHost<Node>;\n\n  constructor($customElement: ICustomElement<Node>, host: CustomElementHost<Node>) {\n    this.host = host;\n    this.host.$customElement = $customElement;\n  }\n\n  public get children(): ArrayLike<CustomElementHost<Node>> {\n    return this.host.childNodes;\n  }\n\n  public subscribeToChildrenChange(callback: () => void): void {\n    // Do nothing since this scenario will never have children.\n  }\n\n  public provideEncapsulationSource(): Node {\n    return this.host.getRootNode();\n  }\n\n  public project(nodes: INodeSequence<Node>): void {\n    if (Tracer.enabled) { Tracer.enter('HostProjector', 'project', slice.call(arguments)); }\n    nodes.appendTo(this.host);\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n\n  public take(nodes: INodeSequence<Node>): void {\n    if (Tracer.enabled) { Tracer.enter('HostProjector', 'take', slice.call(arguments)); }\n    nodes.remove();\n    if (Tracer.enabled) { Tracer.leave(); }\n  }\n}\n","import { DI, IContainer, IRegistry } from '@aurelia/kernel';\nimport { RuntimeBasicConfiguration } from '@aurelia/runtime';\nimport { HTMLTemplateFactory } from './dom';\nimport {\n  AttributeBindingRenderer,\n  ListenerBindingRenderer,\n  SetAttributeRenderer,\n  StylePropertyBindingRenderer,\n  TextBindingRenderer\n} from './html-renderer';\nimport { TargetAccessorLocator, TargetObserverLocator } from './observation/observer-locator';\nimport { HTMLProjectorLocator } from './projectors';\nimport { AttrBindingBehavior } from './resources/binding-behaviors/attr';\nimport { SelfBindingBehavior } from './resources/binding-behaviors/self';\nimport { UpdateTriggerBindingBehavior } from './resources/binding-behaviors/update-trigger';\nimport { Compose } from './resources/custom-elements/compose';\n\nexport const IProjectorLocatorRegistration = HTMLProjectorLocator as IRegistry;\nexport const ITargetAccessorLocatorRegistration = TargetAccessorLocator as IRegistry;\nexport const ITargetObserverLocatorRegistration = TargetObserverLocator as IRegistry;\nexport const ITemplateFactoryRegistration = HTMLTemplateFactory as IRegistry;\n\n/**\n * Default HTML-specific (but environment-agnostic) implementations for the following interfaces:\n * - `IProjectorLocator`\n * - `ITargetAccessorLocator`\n * - `ITargetObserverLocator`\n * - `ITemplateFactory`\n */\nexport const DefaultComponents = [\n  IProjectorLocatorRegistration,\n  ITargetAccessorLocatorRegistration,\n  ITargetObserverLocatorRegistration,\n  ITemplateFactoryRegistration\n];\n\nexport const AttrBindingBehaviorRegistration = AttrBindingBehavior as IRegistry;\nexport const SelfBindingBehaviorRegistration = SelfBindingBehavior as IRegistry;\nexport const UpdateTriggerBindingBehaviorRegistration = UpdateTriggerBindingBehavior as IRegistry;\nexport const ComposeRegistration = Compose as IRegistry;\n\n/**\n * Default HTML-specific (but environment-agnostic) resources:\n * - Binding Behaviors: `attr`, `self`, `updateTrigger`\n * - Custom Elements: `au-compose`\n */\nexport const DefaultResources = [\n  AttrBindingBehaviorRegistration,\n  SelfBindingBehaviorRegistration,\n  UpdateTriggerBindingBehaviorRegistration,\n  ComposeRegistration,\n];\n\nexport const ListenerBindingRendererRegistration = ListenerBindingRenderer as IRegistry;\nexport const AttributeBindingRendererRegistration = AttributeBindingRenderer as IRegistry;\nexport const SetAttributeRendererRegistration = SetAttributeRenderer as IRegistry;\nexport const StylePropertyBindingRendererRegistration = StylePropertyBindingRenderer as IRegistry;\nexport const TextBindingRendererRegistration = TextBindingRenderer as IRegistry;\n\n/**\n * Default HTML-specfic (but environment-agnostic) renderers for:\n * - Listener Bindings: `trigger`, `capture`, `delegate`\n * - SetAttribute\n * - StyleProperty: `style`, `css`\n * - TextBinding: `${}`\n */\nexport const DefaultRenderers = [\n  ListenerBindingRendererRegistration,\n  AttributeBindingRendererRegistration,\n  SetAttributeRendererRegistration,\n  StylePropertyBindingRendererRegistration,\n  TextBindingRendererRegistration\n];\n\n/**\n * A DI configuration object containing html-specific (but environment-agnostic) registrations:\n * - `BasicConfiguration` from `@aurelia/runtime`\n * - `DefaultComponents`\n * - `DefaultResources`\n * - `DefaultRenderers`\n */\nexport const BasicConfiguration = {\n  /**\n   * Apply this configuration to the provided container.\n   */\n  register(container: IContainer): IContainer {\n    return RuntimeBasicConfiguration\n      .register(container)\n      .register(\n        ...DefaultComponents,\n        ...DefaultResources,\n        ...DefaultRenderers\n      );\n  },\n  /**\n   * Create a new container with this configuration applied to it.\n   */\n  createContainer(): IContainer {\n    return this.register(DI.createContainer());\n  }\n};\n"],"names":["hasBind","hasUnbind","targetObserver","DOM","BindingMode","AttributeBinding","connectable","ILifecycle","Reporter","AttributeNSAccessor","CheckedObserver","ClassAttributeAccessor","DataAttributeAccessor","ElementPropertyAccessor","DI","DelegationStrategy","defaultMatcher","SelectValueObserver","StyleAttributeAccessor","ValueAttributeObserver","Registration","ITargetObserverLocator","SetterObserver","IDOM","ITargetAccessorLocator","BindingBehaviorResource","IObserverLocator","HTMLTargetedInstructionType","buildTemplateDefinition","HydrateElementInstruction","IRenderable","ITargetedInstruction","IRenderingEngine","CompositionCoordinator","tslib_1.__decorate","bindable","CustomElementResource","NodeType","PLATFORM","INode","NodeSequence","ITemplateFactory","CompiledTemplate","ensureExpression","MultiInterpolationBinding","InterpolationBinding","addBinding","IExpressionParser","instructionRenderer","Binding","IProjectorLocator","childObserverOptions","RuntimeBasicConfiguration"],"mappings":"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"}