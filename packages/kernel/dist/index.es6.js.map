{"version":3,"file":"index.es6.js","sources":["../src/platform.ts","../src/reporter.ts","../src/di.ts","../src/path.ts","../src/profiler.ts","../src/resource.ts","../src/eventaggregator.ts"],"sourcesContent":["import { IPerformanceEntry, ITimerHandler, IWindowOrWorkerGlobalScope } from './interfaces';\n\n// tslint:disable-next-line:no-redundant-jump\nfunction $noop(): void { return; }\n\ndeclare var global: IWindowOrWorkerGlobalScope;\ndeclare var self: IWindowOrWorkerGlobalScope;\ndeclare var window: IWindowOrWorkerGlobalScope;\ndeclare function setTimeout(handler: (...args: unknown[]) => void, timeout: number): unknown;\n\nconst $global: IWindowOrWorkerGlobalScope = (function (): IWindowOrWorkerGlobalScope {\n  // https://github.com/Microsoft/tslint-microsoft-contrib/issues/415\n  // tslint:disable:no-typeof-undefined\n  if (typeof global !== 'undefined') {\n    return global as unknown as IWindowOrWorkerGlobalScope;\n  }\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  // tslint:enable:no-typeof-undefined\n  try {\n    // Not all environments allow eval and Function. Use only as a last resort:\n    // tslint:disable-next-line:no-function-constructor-with-string-args function-constructor\n    return new Function('return this')();\n  } catch {\n    // If all fails, give up and create an object.\n    // tslint:disable-next-line:no-object-literal-type-assertion\n    return {} as IWindowOrWorkerGlobalScope;\n  }\n})();\n\n// performance.now polyfill for non-browser envs based on https://github.com/myrne/performance-now\nconst $now = (function (): () => number {\n  let getNanoSeconds: () => number;\n  let hrtime: (time?: [number, number]) => [number, number];\n  let moduleLoadTime: number;\n  let nodeLoadTime: number;\n  let upTime: number;\n\n  if (($global.performance !== undefined && $global.performance !== null) && $global.performance.now) {\n    const $performance = $global.performance;\n    return function (): number {\n      return $performance.now();\n    };\n  } else if (($global.process !== undefined && $global.process !== null) && $global.process.hrtime) {\n    const now = function (): number {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = $global.process.hrtime;\n    getNanoSeconds = function (): number {\n      let hr: [number, number];\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = $global.process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n    return now;\n  }\n})();\n\n// performance.mark / measure polyfill based on https://github.com/blackswanny/performance-polyfill\n// note: this is NOT intended to be a polyfill for browsers that don't support it; it's just for NodeJS\n// TODO: probably want to move environment-specific logic to the appropriate runtime (e.g. the NodeJS polyfill\n// to runtime-html-jsdom)\nconst {\n  $mark,\n  $measure,\n  $getEntriesByName,\n  $getEntriesByType,\n  $clearMarks,\n  $clearMeasures\n} = (function (): {\n  $mark: IWindowOrWorkerGlobalScope['performance']['mark'];\n  $measure: IWindowOrWorkerGlobalScope['performance']['measure'];\n  $getEntriesByName: IWindowOrWorkerGlobalScope['performance']['getEntriesByName'];\n  $getEntriesByType: IWindowOrWorkerGlobalScope['performance']['getEntriesByType'];\n  $clearMarks: IWindowOrWorkerGlobalScope['performance']['clearMarks'];\n  $clearMeasures: IWindowOrWorkerGlobalScope['performance']['clearMeasures'];\n } {\n  if (\n    $global.performance !== undefined &&\n    $global.performance !== null &&\n    $global.performance.mark &&\n    $global.performance.measure &&\n    $global.performance.getEntriesByName &&\n    $global.performance.getEntriesByType &&\n    $global.performance.clearMarks &&\n    $global.performance.clearMeasures\n  ) {\n    const $performance = $global.performance;\n    return {\n      $mark: function(name: string): void {\n        $performance.mark(name);\n      },\n      $measure: function(name: string, start?: string, end?: string): void {\n        $performance.measure(name, start, end);\n      },\n      $getEntriesByName: function(name: string): IPerformanceEntry[] {\n        return $performance.getEntriesByName(name);\n      },\n      $getEntriesByType: function(type: string): IPerformanceEntry[] {\n        return $performance.getEntriesByType(type);\n      },\n      $clearMarks: function(name?: string): void {\n        $performance.clearMarks(name);\n      },\n      $clearMeasures: function(name?: string): void {\n        $performance.clearMeasures(name);\n      }\n    };\n  } else if ($global.process !== undefined && $global.process !== null && $global.process.hrtime) {\n    const entries: IPerformanceEntry[] = [];\n    const marksIndex: Record<string, IPerformanceEntry> = {};\n\n    const filterEntries = function (key: string, value: string): IPerformanceEntry[] {\n      let i = 0;\n      const n = entries.length;\n      const result = [];\n      for (; i < n; i++) {\n        if (entries[i][key] === value) {\n          result.push(entries[i]);\n        }\n      }\n      return\tresult;\n    };\n\n    const clearEntries = function (type: string, name: string): void {\n      let i = entries.length;\n      let entry: IPerformanceEntry;\n      while (i--) {\n        entry = entries[i];\n        if (entry.entryType === type && (name === void 0 || entry.name === name)) {\n          entries.splice(i, 1);\n        }\n      }\n    };\n\n    return {\n      $mark: function(name: string): void {\n        const mark: IPerformanceEntry = {\n          name,\n          entryType: 'mark',\n          startTime: $now(),\n          duration: 0\n        };\n        entries.push(mark);\n        marksIndex[name] = mark;\n      },\n      $measure: function(name: string, startMark?: string, endMark?: string): void {\n        let startTime: number;\n        let endTime: number;\n\n        if (endMark !== undefined && marksIndex[endMark] === undefined) {\n          throw new SyntaxError(`Failed to execute 'measure' on 'Performance': The mark '${endMark}' does not exist.`);\n        }\n        if (startMark !== undefined && marksIndex[startMark] === undefined) {\n          throw new SyntaxError(`Failed to execute 'measure' on 'Performance': The mark '${startMark}' does not exist.`);\n        }\n\n        if (marksIndex[startMark]) {\n          startTime = marksIndex[startMark].startTime;\n        } else {\n          startTime = 0;\n        }\n        if (marksIndex[endMark]) {\n          endTime = marksIndex[endMark].startTime;\n        } else {\n          endTime = $now();\n        }\n        entries.push({\n          name,\n          entryType: 'measure',\n          startTime,\n          duration: endTime - startTime\n        });\n      },\n      $getEntriesByName: function(name: string): IPerformanceEntry[] {\n        return filterEntries('name', name);\n      },\n      $getEntriesByType: function(type: string): IPerformanceEntry[] {\n        return filterEntries('entryType', type);\n      },\n      $clearMarks: function(name?: string): void {\n        clearEntries('mark', name);\n      },\n      $clearMeasures: function(name?: string): void {\n        clearEntries('measure', name);\n      }\n    };\n  }\n})();\n\n// RAF polyfill for non-browser envs from https://github.com/chrisdickinson/raf/blob/master/index.js\nconst { $raf, $caf } = (function (): { $raf(callback: (time: number) => void): number; $caf(handle: number): void } {\n  const vendors = ['moz', 'webkit'];\n  const suffix = 'AnimationFrame';\n  let raf: (callback: (time: number) => void) => number = $global[`request${suffix}`];\n  let caf: (handle: number) => void = $global[`cancel${suffix}`] || $global[`cancelRequest${suffix}`];\n\n  for (let i = 0; !raf && i < vendors.length; ++i) {\n    raf = $global[`${vendors[i]}Request${suffix}`];\n    caf = $global[`${vendors[i]}Cancel${suffix}`] || $global[`${vendors[i]}CancelRequest${suffix}`];\n  }\n\n  // Some versions of FF have rAF but not cAF\n  if (!raf || !caf) {\n    let last = 0;\n    let id = 0;\n    const queue: { handle: number; cancelled: boolean; callback(time: number): void }[] = [];\n    const frameDuration = 1000 / 60;\n\n    raf = function(callback: (time: number) => void): number {\n      let _now: number;\n      let next: number;\n      if (queue.length === 0) {\n        _now = $now();\n        next = Math.max(0, frameDuration - (_now - last));\n        last = next + _now;\n        setTimeout(\n          function (): void {\n            const cp = queue.slice(0);\n            // Clear queue here to prevent callbacks from appending listeners to the current frame's queue\n            queue.length = 0;\n            for (let i = 0; i < cp.length; ++i) {\n              if (!cp[i].cancelled) {\n                try {\n                  cp[i].callback(last);\n                } catch (e) {\n                  setTimeout(function (): void { throw e; }, 0);\n                }\n              }\n            }\n          },\n          Math.round(next)\n        );\n      }\n      queue.push({\n        handle: ++id,\n        callback: callback,\n        cancelled: false\n      });\n      return id;\n    };\n\n    caf = function(handle: number): void {\n      for (let i = 0; i < queue.length; ++i) {\n        if (queue[i].handle === handle) {\n          queue[i].cancelled = true;\n        }\n      }\n    };\n  }\n\n  const $$raf = function(callback: (time: number) => void): number {\n    return raf.call($global, callback);\n  };\n  $$raf.cancel = function (): void {\n    caf.apply($global, arguments);\n  };\n  $global.requestAnimationFrame = raf;\n  $global.cancelAnimationFrame = caf;\n  return { $raf: $$raf, $caf: caf };\n})();\n\n// A stripped-down version of pixijs's ticker @ https://github.com/pixijs/pixi.js/tree/dev/packages/ticker/src\nconst fpms = 0.06;\n\nclass Notifier {\n  public fn: (frameDelta?: number) => void;\n  public context: unknown;\n  public next: this;\n  public prev: this;\n  public disconnected: boolean;\n\n  constructor(fn: (frameDelta?: number) => void, context: unknown = null) {\n    this.fn = fn;\n    this.context = context;\n    this.next = null;\n    this.prev = null;\n    this.disconnected = false;\n  }\n\n  public equals(fn: (frameDelta?: number) => void, context: unknown): boolean {\n    return this.fn === fn && this.context === (context === undefined ? null : context);\n  }\n\n  public notify(frameDelta: number): this {\n    if (this.fn !== null) {\n      if (this.context !== null) {\n        this.fn.call(this.context, frameDelta);\n      } else {\n        this.fn(frameDelta);\n      }\n    }\n    const next = this.next;\n    if (this.disconnected) {\n      this.next = null;\n    }\n    return next;\n  }\n\n  public connect(prev: this): void {\n    this.prev = prev;\n    if (prev.next !== null) {\n      prev.next.prev = this;\n    }\n    this.next = prev.next;\n    prev.next = this;\n  }\n\n  public disconnect(hard: boolean = false): this {\n    this.disconnected = true;\n    this.fn = null;\n    this.context = null;\n    if (this.prev !== null) {\n      this.prev.next = this.next;\n    }\n    if (this.next !== null) {\n      this.next.prev = this.prev;\n    }\n    const next = this.next;\n    this.next = hard ? null : next;\n    this.prev = null;\n    return next;\n  }\n}\n\nexport class Ticker {\n  private requestId: number;\n  private frameDelta: number;\n  private lastTime: number;\n  private started: boolean;\n  private promise: Promise<number>;\n  private resolve: (deltaTime: number) => void;\n  private readonly head: Notifier;\n  private readonly tick: (deltaTime: number) => void;\n\n  constructor() {\n    this.head = new Notifier(null, null);\n    this.requestId = -1;\n    this.frameDelta = 1;\n    this.lastTime = -1;\n    this.started = false;\n    this.promise = null;\n    this.resolve = $noop;\n    this.tick = (deltaTime: number) => {\n      this.requestId = -1;\n      if (this.started) {\n        this.update(deltaTime);\n        if (this.started && this.requestId === -1 && this.head.next !== null) {\n          this.requestId = $raf(this.tick);\n        }\n      }\n      this.resolve(deltaTime);\n      this.resolve = $noop;\n      this.promise = null;\n    };\n  }\n\n  public add(fn: (frameDelta?: number) => void, context: unknown): this {\n    const notifier = new Notifier(fn, context);\n    let cur = this.head.next;\n    let prev = this.head;\n    if (cur === null) {\n      notifier.connect(prev);\n    } else {\n      while (cur !== null) {\n        prev = cur;\n        cur = cur.next;\n      }\n      if (notifier.prev === null) {\n        notifier.connect(prev);\n      }\n    }\n    if (this.started) {\n      this.tryRequest();\n    } else {\n      this.start();\n    }\n    return this;\n  }\n\n  public remove(fn: (frameDelta?: number) => void, context: unknown): this {\n    let notifier = this.head.next;\n    while (notifier !== null) {\n      if (notifier.equals(fn, context)) {\n        notifier = notifier.disconnect();\n      } else {\n        notifier = notifier.next;\n      }\n    }\n    if (this.head.next === null) {\n      this.tryCancel();\n    }\n    return this;\n  }\n\n  public start(): void {\n    if (!this.started) {\n      this.started = true;\n      this.tryRequest();\n    }\n  }\n\n  public stop(): void {\n    if (this.started) {\n      this.started = false;\n      this.tryCancel();\n    }\n  }\n\n  public update(currentTime: number = $now()): void {\n    let elapsedMS: number;\n\n    if (currentTime > this.lastTime) {\n      elapsedMS = currentTime - this.lastTime;\n      // ElapsedMS * 60 / 1000 is to get the frame delta as calculated based on the elapsed time.\n      // Adding half a rounding margin to that and performing a double bitwise negate rounds it to the rounding margin which is the nearest\n      // 1/1000th of a frame (this algorithm is about twice as fast as Math.round - every CPU cycle counts :)).\n      // The rounding is to account for floating point imprecisions in performance.now caused by the browser, and accounts for frame counting mismatch\n      // caused by frame delta's like 0.999238239.\n      this.frameDelta = (~~(elapsedMS * 60 + 0.5)) / 1000;\n      const head = this.head;\n      let notifier = head.next;\n      while (notifier !== null) {\n        notifier = notifier.notify(this.frameDelta);\n      }\n      if (head.next === null) {\n        this.tryCancel();\n      }\n    } else {\n      this.frameDelta = 0;\n    }\n    this.lastTime = currentTime;\n  }\n\n  public waitForNextTick(): Promise<number> {\n    if (this.promise === null) {\n      // tslint:disable-next-line:promise-must-complete\n      this.promise = new Promise(resolve => {\n        this.resolve = resolve;\n      });\n    }\n    return this.promise;\n  }\n\n  private tryRequest(): void {\n    if (this.requestId === -1 && this.head.next !== null) {\n      this.lastTime = $now();\n      this.requestId = $raf(this.tick);\n    }\n  }\n\n  private tryCancel(): void {\n    if (this.requestId !== -1) {\n      $caf(this.requestId);\n      this.requestId = -1;\n    }\n  }\n}\n\nconst camelCaseLookup: Record<string, string> = {};\nconst kebabCaseLookup: Record<string, string> = {};\n\nexport const PLATFORM = {\n  global: $global,\n  ticker: new Ticker(),\n  emptyArray: Object.freeze([]),\n  emptyObject: Object.freeze({}),\n  noop: $noop,\n  now: $now,\n  mark: $mark,\n  measure: $measure,\n  getEntriesByName: $getEntriesByName,\n  getEntriesByType: $getEntriesByType,\n  clearMarks: $clearMarks,\n  clearMeasures: $clearMeasures,\n\n  camelCase(input: string): string {\n    // benchmark: http://jsben.ch/qIz4Z\n    let value = camelCaseLookup[input];\n    if (value !== undefined) return value;\n    value = '';\n    let first = true;\n    let sep = false;\n    let char: string;\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      char = input.charAt(i);\n      if (char === '-' || char === '.' || char === '_') {\n        sep = true; // skip separators\n      } else {\n        value = value + (first ? char.toLowerCase() : (sep ? char.toUpperCase() : char));\n        sep = false;\n      }\n      first = false;\n    }\n    return camelCaseLookup[input] = value;\n  },\n\n  kebabCase(input: string): string {\n    // benchmark: http://jsben.ch/v7K9T\n    let value = kebabCaseLookup[input];\n    if (value !== undefined) return value;\n    value = '';\n    let first = true;\n    let char: string, lower: string;\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      char = input.charAt(i);\n      lower = char.toLowerCase();\n      value = value + (first ? lower : (char !== lower ? `-${lower}` : lower));\n      first = false;\n    }\n    return kebabCaseLookup[input] = value;\n  },\n\n  toArray<T = unknown>(input: ArrayLike<T>): T[] {\n    // benchmark: http://jsben.ch/xjsyF\n    const len = input.length;\n    const arr = Array(len);\n    for (let i = 0; i < len; ++i) {\n        arr[i] = input[i];\n    }\n    return arr;\n  },\n\n  requestAnimationFrame(callback: (time: number) => void): number {\n    return $raf(callback);\n  },\n\n  clearInterval(handle?: number): void {\n    $global.clearInterval(handle);\n  },\n\n  clearTimeout(handle?: number): void {\n    $global.clearTimeout(handle);\n  },\n\n  // tslint:disable-next-line:no-any\n  setInterval(handler: ITimerHandler, timeout?: number, ...args: any[]): number {\n    return $global.setInterval(handler, timeout, ...args);\n  },\n\n  // tslint:disable-next-line:no-any\n  setTimeout(handler: ITimerHandler, timeout?: number, ...args: any[]): number {\n    return $global.setTimeout(handler, timeout, ...args);\n  }\n};\n","\nexport interface ITraceInfo {\n  readonly objName: string;\n  readonly methodName: string;\n  readonly depth: number;\n  params: ReadonlyArray<unknown> | null;\n  next: ITraceInfo | null;\n  prev: ITraceInfo | null;\n}\nexport interface ITraceWriter {\n  write(info: ITraceInfo): void;\n}\nexport interface ILiveLoggingOptions {\n  rendering?: boolean;\n  binding?: boolean;\n  observation?: boolean;\n  attaching?: boolean;\n  mounting?: boolean;\n  di?: boolean;\n  lifecycle?: boolean;\n  jit?: boolean;\n}\nexport const Reporter = {\n  write(code: number, ...params: unknown[]): void { return; },\n  error(code: number, ...params: unknown[]): Error { return new Error(`Code ${code}`); }\n};\nexport const Tracer = {\n  /**\n   * A convenience property for the user to conditionally call the tracer.\n   * This saves unnecessary `noop` and `slice` calls in non-AOT scenarios even if debugging is disabled.\n   * In AOT these calls will simply be removed entirely.\n   *\n   * This property **only** turns on tracing if `@aurelia/debug` is included and configured as well.\n   */\n  enabled: false,\n  liveLoggingEnabled: false,\n  liveWriter: null,\n  /**\n   * Call this at the start of a method/function.\n   * Each call to `enter` **must** have an accompanying call to `leave` for the tracer to work properly.\n   * @param objName Any human-friendly name to identify the traced object with.\n   * @param methodName Any human-friendly name to identify the traced method with.\n   * @param args Pass in `Array.prototype.slice.call(arguments)` to also trace the parameters, or `null` if this is not needed (to save memory/cpu)\n   */\n  enter(objName: string, methodName: string, args: unknown[] | null): void { return; },\n  /**\n   * Call this at the end of a method/function. Pops one trace item off the stack.\n   */\n  leave(): void { return; },\n  /**\n   * Writes only the trace info leading up to the current method call.\n   * @param writer An object to write the output to.\n   */\n  writeStack(writer: ITraceWriter): void { return; },\n  /**\n   * Writes all trace info captured since the previous flushAll operation.\n   * @param writer An object to write the output to. Can be null to simply reset the tracer state.\n   */\n  flushAll(writer: ITraceWriter | null): void { return; },\n  enableLiveLogging,\n  /**\n   * Stops writing out each trace info item as they are traced.\n   */\n  disableLiveLogging(): void { return; }\n};\n\n/**\n * Writes out each trace info item as they are traced.\n * @param writer An object to write the output to.\n */\nfunction enableLiveLogging(writer: ITraceWriter): void;\n/**\n * Writes out each trace info item as they are traced.\n * @param options Optional. Specify which logging categories to output. If omitted, all will be logged.\n */\nfunction enableLiveLogging(options?: ILiveLoggingOptions): void;\n// tslint:disable-next-line:no-redundant-jump\nfunction enableLiveLogging(optionsOrWriter?: ILiveLoggingOptions | ITraceWriter): void { return; }\n","/// <reference types=\"reflect-metadata\" />\nimport { Class, Constructable, IIndexable, Injectable, InterfaceSymbol, Primitive } from './interfaces';\nimport { PLATFORM } from './platform';\nimport { Reporter, Tracer } from './reporter';\nimport { IResourceType } from './resource';\n\n// tslint:disable: no-any\n\nconst slice = Array.prototype.slice;\n\nexport type ResolveCallback<T = any> = (handler?: IContainer, requestor?: IContainer, resolver?: IResolver) => T;\n\nexport type Key<T> = InterfaceSymbol<T> | Primitive | IIndexable | Constructable;\n\nexport interface IDefaultableInterfaceSymbol<T> extends InterfaceSymbol<T> {\n  withDefault(configure: (builder: IResolverBuilder<T>) => IResolver): InterfaceSymbol<T>;\n  noDefault(): InterfaceSymbol<T>;\n}\n\n// This interface exists only to break a circular type referencing issue in the IServiceLocator interface.\n// Otherwise IServiceLocator references IResolver, which references IContainer, which extends IServiceLocator.\ninterface IResolverLike<TValue, TContainer> {\n  resolve(handler: TContainer, requestor: TContainer): TValue;\n  getFactory?(container: TContainer): IFactory<TValue> | null;\n}\n\nexport interface IResolver<T = any> extends IResolverLike<T, IContainer> { }\n\nexport interface IRegistration<T = any> {\n  register(container: IContainer, key?: Key<T>): IResolver<T>;\n}\n\nexport interface IFactory<T = any> {\n  readonly Type: Constructable;\n  registerTransformer(transformer: (instance: T) => T): boolean;\n  construct(container: IContainer, dynamicDependencies?: Key<unknown>[]): T;\n}\n\nexport interface IServiceLocator {\n  has<K>(key: Constructable | Key<unknown> | IResolver<unknown> | K, searchAncestors: boolean): boolean;\n\n  get<K>(key: Constructable | Key<unknown> | IResolver<unknown> | K):\n    K extends InterfaceSymbol<infer T> ? T :\n    K extends Constructable ? InstanceType<K> :\n    K extends IResolverLike<infer T1, unknown> ? T1 extends Constructable ? InstanceType<T1> : T1 :\n    K;\n\n  getAll<K>(key: Constructable | Key<unknown> | IResolver<unknown> | K):\n    K extends InterfaceSymbol<infer T> ? ReadonlyArray<T> :\n    K extends Constructable ? ReadonlyArray<InstanceType<K>> :\n    K extends IResolverLike<infer T1, unknown> ? T1 extends Constructable ? ReadonlyArray<InstanceType<T1>> : ReadonlyArray<T1> :\n    ReadonlyArray<K>;\n}\n\nexport interface IRegistry {\n  register(container: IContainer): void;\n}\n\nexport interface IContainer extends IServiceLocator {\n  register(...params: IRegistry[]): IContainer;\n  register(...params: Record<string, Partial<IRegistry>>[]): IContainer;\n  register(...params: (IRegistry | Record<string, Partial<IRegistry>>)[]): IContainer;\n  register(registry: Record<string, Partial<IRegistry>>): IContainer;\n  register(registry: IRegistry): IContainer;\n  register(registry: IRegistry | Record<string, Partial<IRegistry>>): IContainer;\n\n  registerResolver<T>(key: Key<T>, resolver: IResolver<T>): IResolver<T>;\n  registerResolver<T extends Constructable>(key: T, resolver: IResolver<InstanceType<T>>): IResolver<InstanceType<T>>;\n\n  registerTransformer<T>(key: Key<T>, transformer: (instance: T) => T): boolean;\n  registerTransformer<T extends Constructable>(key: T, transformer: (instance: InstanceType<T>) => T): boolean;\n\n  getResolver<T>(key: Key<T>, autoRegister?: boolean): IResolver<T> | null;\n  getResolver<T extends Constructable>(key: T, autoRegister?: boolean): IResolver<InstanceType<T>> | null;\n\n  getFactory<T extends Constructable>(Type: T): IFactory<InstanceType<T>>;\n\n  createChild(): IContainer;\n}\n\nexport interface IResolverBuilder<T> {\n  instance(value: T & IIndexable): IResolver;\n  singleton(value: Constructable): IResolver;\n  transient(value: Constructable): IResolver;\n  callback(value: ResolveCallback<T>): IResolver;\n  aliasTo(destinationKey: Key<T>): IResolver;\n}\n\nexport type RegisterSelf<T extends Constructable> = {\n  register(container: IContainer): IResolver<InstanceType<T>>;\n};\n\n// Shims to augment the Reflect object with methods used from the Reflect Metadata API proposal:\n// https://www.typescriptlang.org/docs/handbook/decorators.html#metadata\n// https://rbuckton.github.io/reflect-metadata/\n// As the official spec proposal uses \"any\", we use it here as well and suppress related typedef linting warnings.\n// tslint:disable:no-any ban-types\nif (!('getOwnMetadata' in Reflect)) {\n  Reflect.getOwnMetadata = function(metadataKey: any, target: Object): any {\n    return (target as IIndexable)[metadataKey];\n  };\n\n  Reflect.metadata = function(metadataKey: any, metadataValue: any): (target: Function) => void {\n    return function(target: Function): void {\n      (target as IIndexable)[metadataKey] = metadataValue;\n    };\n  } as (metadataKey: any, metadataValue: any) => {\n    (target: Function): void;\n    (target: Object, propertyKey: string | symbol): void;\n  };\n}\n// tslint:enable:no-any ban-types\n\nfunction createContainer(...params: IRegistry[]): IContainer;\nfunction createContainer(...params: Record<string, Partial<IRegistry>>[]): IContainer;\nfunction createContainer(...params: (IRegistry | Record<string, Partial<IRegistry>>)[]): IContainer;\nfunction createContainer(registry: Record<string, Partial<IRegistry>>): IContainer;\nfunction createContainer(registry: IRegistry): IContainer;\nfunction createContainer(registry: IRegistry | Record<string, Partial<IRegistry>>): IContainer;\nfunction createContainer(...params: (IRegistry | Record<string, Partial<IRegistry>>)[]): IContainer {\n  if (arguments.length === 0) {\n    return new Container();\n  } else {\n    return new Container().register(...params);\n  }\n}\n\nexport const DI = {\n  createContainer,\n\n  getDesignParamTypes(target: Constructable): Key<unknown>[] {\n    return Reflect.getOwnMetadata('design:paramtypes', target) || PLATFORM.emptyArray;\n  },\n\n  getDependencies(Type: Constructable | Injectable): Key<unknown>[] {\n    let dependencies: Key<unknown>[];\n\n    if ((Type as Injectable).inject === undefined) {\n      dependencies = DI.getDesignParamTypes(Type);\n    } else {\n      dependencies = [];\n      let ctor = Type as Injectable;\n\n      while (typeof ctor === 'function') {\n        if (ctor.hasOwnProperty('inject')) {\n          dependencies.push(...ctor.inject);\n        }\n\n        ctor = Object.getPrototypeOf(ctor);\n      }\n    }\n\n    return dependencies;\n  },\n\n  createInterface<T = any>(friendlyName?: string): IDefaultableInterfaceSymbol<T> {\n    const Interface: IDefaultableInterfaceSymbol<T> & Partial<IRegistration<T> & {friendlyName: string}> = function(target: Injectable, property: string, index: number): any {\n      if (target === undefined) {\n        throw Reporter.error(16, Interface.friendlyName, Interface); // TODO: add error (trying to resolve an InterfaceSymbol that has no registrations)\n      }\n      (target.inject || (target.inject = []))[index] = Interface;\n      return target;\n    };\n    Interface.friendlyName = friendlyName || 'Interface';\n\n    Interface.noDefault = function (): InterfaceSymbol<T> {\n      return Interface;\n    };\n\n    Interface.withDefault = function(configure: (builder: IResolverBuilder<T>) => IResolver): InterfaceSymbol<T> {\n      Interface.withDefault = function (): InterfaceSymbol<T> {\n        throw Reporter.error(17, Interface);\n      };\n\n      Interface.register = function(container: IContainer, key?: Key<T>): IResolver<T> {\n        const trueKey = key || Interface;\n        return configure({\n          instance(value: T): IResolver {\n            return container.registerResolver(trueKey, new Resolver(trueKey, ResolverStrategy.instance, value));\n          },\n          singleton(value: Constructable): IResolver {\n            return container.registerResolver(trueKey, new Resolver(trueKey, ResolverStrategy.singleton, value));\n          },\n          transient(value: Constructable): IResolver {\n            return container.registerResolver(trueKey, new Resolver(trueKey, ResolverStrategy.transient, value));\n          },\n          callback(value: ResolveCallback): IResolver {\n            return container.registerResolver(trueKey, new Resolver(trueKey, ResolverStrategy.callback, value));\n          },\n          aliasTo(destinationKey: T): IResolver {\n            return container.registerResolver(trueKey, new Resolver(trueKey, ResolverStrategy.alias, destinationKey));\n          },\n        });\n      };\n\n      return Interface;\n    };\n\n    return Interface;\n  },\n\n  inject(...dependencies: Key<any>[]): (target: Injectable, key?: string, descriptor?: PropertyDescriptor | number) => void {\n    return function(target: Injectable, key?: string, descriptor?: PropertyDescriptor | number): void {\n      if (typeof descriptor === 'number') { // It's a parameter decorator.\n        if (!target.hasOwnProperty('inject')) {\n          const types = DI.getDesignParamTypes(target);\n          target.inject = types.slice() as Constructable[];\n        }\n\n        if (dependencies.length === 1) {\n          target.inject[descriptor] = dependencies[0] as Constructable;\n        }\n      } else if (key) { // It's a property decorator. Not supported by the container without plugins.\n        const actualTarget = target.constructor as Injectable;\n        (actualTarget.inject || ((actualTarget.inject as unknown) = {}))[key] = dependencies[0];\n      } else if (descriptor) { // It's a function decorator (not a Class constructor)\n        const fn = descriptor.value;\n        fn.inject = dependencies;\n      } else { // It's a class decorator.\n        if (dependencies.length === 0) {\n          const types = DI.getDesignParamTypes(target);\n          target.inject = types.slice() as Constructable[];\n        } else {\n          target.inject = dependencies as Constructable[];\n        }\n      }\n    };\n  },\n\n  // tslint:disable:jsdoc-format\n  /**\n   * Registers the `target` class as a transient dependency; each time the dependency is resolved\n   * a new instance will be created.\n   *\n   * @param target The class / constructor function to register as transient.\n   * @returns The same class, with a static `register` method that takes a container and returns the appropriate resolver.\n   *\n   * Example usage:\n```ts\n// On an existing class\nclass Foo { }\nDI.transient(Foo);\n\n// Inline declaration\nconst Foo = DI.transient(class { });\n// Foo is now strongly typed with register\nFoo.register(container);\n```\n   */\n  // tslint:enable:jsdoc-format\n  transient<T extends Constructable>(target: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T> {\n    target.register = function register(container: IContainer): IResolver<InstanceType<T>> {\n      const registration = Registration.transient(target, target);\n      return registration.register(container, target);\n    };\n    return target as T & RegisterSelf<T>;\n  },\n\n  // tslint:disable:jsdoc-format\n  /**\n   * Registers the `target` class as a singleton dependency; the class will only be created once. Each\n   * consecutive time the dependency is resolved, the same instance will be returned.\n   *\n   * @param target The class / constructor function to register as a singleton.\n   * @returns The same class, with a static `register` method that takes a container and returns the appropriate resolver.\n   * Example usage:\n```ts\n// On an existing class\nclass Foo { }\nDI.singleton(Foo);\n\n// Inline declaration\nconst Foo = DI.singleton(class { });\n// Foo is now strongly typed with register\nFoo.register(container);\n```\n   */\n  // tslint:enable:jsdoc-format\n  singleton<T extends Constructable>(target: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T> {\n    target.register = function register(container: IContainer): IResolver<InstanceType<T>> {\n      const registration = Registration.singleton(target, target);\n      return registration.register(container, target);\n    };\n    return target as T & RegisterSelf<T>;\n  }\n};\n\nexport const IContainer = DI.createInterface<IContainer>('IContainer').noDefault();\nexport const IServiceLocator = IContainer as InterfaceSymbol<IServiceLocator>;\n\nfunction createResolver(getter: (key: unknown, handler: IContainer, requestor: IContainer) => any): (key: unknown) => ReturnType<typeof DI.inject> {\n  return function(key: unknown): ReturnType<typeof DI.inject> {\n    const resolver: InterfaceSymbol<{}> & Partial<Pick<IResolver, 'resolve'>> = function (target: Injectable, property?: string, descriptor?: PropertyDescriptor | number): void {\n      DI.inject(resolver)(target, property, descriptor);\n    };\n\n    resolver.resolve = function(handler: IContainer, requestor: IContainer): any {\n      return getter(key, handler, requestor);\n    };\n\n    return resolver;\n  };\n}\n\nexport const inject = DI.inject;\n\nfunction transientDecorator<T extends Constructable>(target: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T> {\n  return DI.transient(target);\n}\n// tslint:disable:jsdoc-format\n/**\n * Registers the decorated class as a transient dependency; each time the dependency is resolved\n * a new instance will be created.\n *\n * Example usage:\n```ts\n@transient\nclass Foo { }\n```\n */\n// tslint:enable:jsdoc-format\nexport function transient<T extends Constructable>(): typeof transientDecorator;\n// tslint:disable:jsdoc-format\n/**\n * Registers the `target` class as a transient dependency; each time the dependency is resolved\n * a new instance will be created.\n *\n * @param target The class / constructor function to register as transient.\n *\n * Example usage:\n```ts\n@transient()\nclass Foo { }\n```\n */\n// tslint:enable:jsdoc-format\nexport function transient<T extends Constructable>(target: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T>;\nexport function transient<T extends Constructable>(target?: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T> | typeof transientDecorator {\n  return target === undefined ? transientDecorator : transientDecorator(target);\n}\n\nfunction singletonDecorator<T extends Constructable>(target: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T> {\n  return DI.singleton(target);\n}\n// tslint:disable:jsdoc-format\n/**\n * Registers the decorated class as a singleton dependency; the class will only be created once. Each\n * consecutive time the dependency is resolved, the same instance will be returned.\n *\n * Example usage:\n```ts\n@singleton\nclass Foo { }\n```\n */\n// tslint:enable:jsdoc-format\nexport function singleton<T extends Constructable>(): typeof singletonDecorator;\n// tslint:disable:jsdoc-format\n/**\n * Registers the `target` class as a singleton dependency; the class will only be created once. Each\n * consecutive time the dependency is resolved, the same instance will be returned.\n *\n * @param target The class / constructor function to register as a singleton.\n *\n * Example usage:\n```ts\n@singleton()\nclass Foo { }\n```\n */\n// tslint:enable:jsdoc-format\nexport function singleton<T extends Constructable>(target: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T>;\nexport function singleton<T extends Constructable>(target?: T & Partial<RegisterSelf<T>>): T & RegisterSelf<T> | typeof singletonDecorator {\n  return target === undefined ? singletonDecorator : singletonDecorator(target);\n}\n\nexport const all = createResolver((key: unknown, handler: IContainer, requestor: IContainer) => requestor.getAll(key));\n\nexport const lazy = createResolver((key: unknown, handler: IContainer, requestor: IContainer) =>  {\n  let instance: unknown = null; // cache locally so that lazy always returns the same instance once resolved\n  return () => {\n    if (instance === null) {\n      instance = requestor.get(key);\n    }\n\n    return instance;\n  };\n});\n\nexport const optional = createResolver((key: unknown, handler: IContainer, requestor: IContainer) =>  {\n  if (requestor.has(key, true)) {\n    return requestor.get(key);\n  } else {\n    return null;\n  }\n});\n\n/** @internal */\nexport const enum ResolverStrategy {\n  instance = 0,\n  singleton = 1,\n  transient = 2,\n  callback = 3,\n  array = 4,\n  alias = 5\n}\n\n/** @internal */\nexport class Resolver implements IResolver, IRegistration {\n  public key: Key<unknown>;\n  public strategy: ResolverStrategy;\n  public state: unknown;\n  constructor(key: Key<unknown>, strategy: ResolverStrategy, state: unknown) {\n    this.key = key;\n    this.strategy = strategy;\n    this.state = state;\n  }\n\n  public register(container: IContainer, key?: Key<unknown>): IResolver {\n    return container.registerResolver(key || this.key, this);\n  }\n\n  public resolve(handler: IContainer, requestor: IContainer): unknown {\n    switch (this.strategy) {\n      case ResolverStrategy.instance:\n        return this.state;\n      case ResolverStrategy.singleton: {\n        this.strategy = ResolverStrategy.instance;\n        const factory = handler.getFactory(this.state as Constructable);\n        return this.state = factory.construct(handler);\n      }\n      case ResolverStrategy.transient: {\n        // Always create transients from the requesting container\n        const factory = handler.getFactory(this.state as Constructable);\n        return factory.construct(requestor);\n      }\n      case ResolverStrategy.callback:\n        return (this.state as ResolveCallback)(handler, requestor, this);\n      case ResolverStrategy.array:\n        return (this.state as IResolver[])[0].resolve(handler, requestor);\n      case ResolverStrategy.alias:\n        return handler.get(this.state);\n      default:\n        throw Reporter.error(6, this.strategy);\n    }\n  }\n\n  public getFactory(container: IContainer): IFactory | null {\n    switch (this.strategy) {\n      case ResolverStrategy.singleton:\n      case ResolverStrategy.transient:\n        return container.getFactory(this.state as Constructable);\n      default:\n        return null;\n    }\n  }\n}\n\n/** @internal */\nexport interface IInvoker<T = {}> {\n  invoke(container: IContainer, fn: Constructable<T>, dependencies: Key<unknown>[]): T;\n  invokeWithDynamicDependencies(\n    container: IContainer,\n    fn: Constructable<T>,\n    staticDependencies: Key<unknown>[],\n    dynamicDependencies: Key<unknown>[]\n  ): T;\n}\n\n/** @internal */\nexport class Factory implements IFactory {\n  public Type: Constructable;\n  private readonly invoker: IInvoker;\n  private readonly dependencies: Key<unknown>[];\n  private transformers: ((instance: any) => any)[] | null;\n\n  constructor(Type: Constructable, invoker: IInvoker, dependencies: Key<unknown>[]) {\n    this.Type = Type;\n    this.invoker = invoker;\n    this.dependencies = dependencies;\n    this.transformers = null;\n  }\n\n  public static create(Type: Constructable): IFactory {\n    const dependencies = DI.getDependencies(Type);\n    const invoker = classInvokers[dependencies.length] || fallbackInvoker;\n    return new Factory(Type, invoker, dependencies);\n  }\n\n  public construct(container: IContainer, dynamicDependencies?: Key<unknown>[]): {} {\n    if (Tracer.enabled) { Tracer.enter('Factory', 'construct', [this.Type, ...slice.call(arguments)]); }\n    const transformers = this.transformers;\n    let instance = dynamicDependencies !== undefined\n      ? this.invoker.invokeWithDynamicDependencies(container, this.Type, this.dependencies, dynamicDependencies)\n      : this.invoker.invoke(container, this.Type, this.dependencies);\n\n    if (transformers === null) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return instance;\n    }\n\n    for (let i = 0, ii = transformers.length; i < ii; ++i) {\n      instance = transformers[i](instance);\n    }\n\n    if (Tracer.enabled) { Tracer.leave(); }\n    return instance;\n  }\n\n  public registerTransformer(transformer: (instance: any) => any): boolean {\n    if (this.transformers === null) {\n      this.transformers = [];\n    }\n\n    this.transformers.push(transformer);\n    return true;\n  }\n}\n\n/** @internal */\nexport interface IContainerConfiguration {\n  factories?: Map<Constructable, IFactory>;\n  resourceLookup?: Record<string, IResourceType<unknown, unknown>>;\n}\n\nconst containerResolver: IResolver = {\n  resolve(handler: IContainer, requestor: IContainer): IContainer {\n    return requestor;\n  }\n};\n\nfunction isRegistry(obj: IRegistry | Record<string, IRegistry>): obj is IRegistry {\n  return typeof obj.register === 'function';\n}\n\nfunction isClass<T extends { prototype?: unknown }>(obj: T): obj is Class<unknown, T> {\n  return obj.prototype !== undefined;\n}\n\n/** @internal */\nexport class Container implements IContainer {\n  private parent: Container | null;\n  private registerDepth: number;\n  private readonly resolvers: Map<InterfaceSymbol<IContainer>, IResolver>;\n  private readonly factories: Map<Constructable, IFactory>;\n  private readonly configuration: IContainerConfiguration;\n  private readonly resourceLookup: Record<string, IResolver>;\n\n  constructor(configuration: IContainerConfiguration = {}) {\n    this.parent = null;\n    this.registerDepth = 0;\n    this.resolvers = new Map<InterfaceSymbol<IContainer>, IResolver>();\n    this.configuration = configuration;\n    this.factories = configuration.factories || (configuration.factories = new Map());\n    this.resourceLookup = configuration.resourceLookup || (configuration.resourceLookup = Object.create(null));\n    this.resolvers.set(IContainer, containerResolver);\n  }\n\n  public register(...params: IRegistry[]): this;\n  public register(...params: Record<string, Partial<IRegistry>>[]): this;\n  public register(...params: (IRegistry | Record<string, Partial<IRegistry>>)[]): this;\n  public register(registry: Record<string, Partial<IRegistry>>): this;\n  public register(registry: IRegistry): this;\n  public register(registry: IRegistry | Record<string, Partial<IRegistry>>): this;\n  public register(...params: (IRegistry | Record<string, Partial<IRegistry>>)[]): this {\n    if (Tracer.enabled) { Tracer.enter('Container', 'register', slice.call(arguments)); }\n    if (++this.registerDepth === 100) {\n      throw new Error('Unable to autoregister dependency');\n      // TODO: change to reporter.error and add various possible causes in description.\n      // Most likely cause is trying to register a plain object that does not have a\n      // register method and is not a class constructor\n    }\n    let current: IRegistry | Record<string, IRegistry>;\n    let keys: string[];\n    let value: IRegistry;\n    let j: number;\n    let jj: number;\n    for (let i = 0, ii = params.length; i < ii; ++i) {\n      current = params[i] as IRegistry | Record<string, IRegistry>;\n      if (isRegistry(current)) {\n        current.register(this);\n      } else if (isClass(current)) {\n        Registration.singleton(current, current as Constructable).register(this);\n      } else {\n        keys = Object.keys(current);\n        j = 0;\n        jj = keys.length;\n        for (; j < jj; ++j) {\n          value = current[keys[j]];\n          // note: we could remove this if-branch and call this.register directly\n          // - the extra check is just a perf tweak to create fewer unnecessary arrays by the spread operator\n          if (isRegistry(value)) {\n            value.register(this);\n          } else {\n            this.register(value);\n          }\n        }\n      }\n    }\n    --this.registerDepth;\n    if (Tracer.enabled) { Tracer.leave(); }\n    return this;\n  }\n\n  public registerResolver(key: Key<IContainer>, resolver: IResolver): IResolver {\n    validateKey(key);\n\n    const resolvers = this.resolvers;\n    const result = resolvers.get(key as InterfaceSymbol<IContainer>);\n\n    if (result === undefined) {\n      resolvers.set(key as InterfaceSymbol<IContainer>, resolver);\n      if (typeof key === 'string') {\n        this.resourceLookup[key] = resolver;\n      }\n    } else if (result instanceof Resolver && result.strategy === ResolverStrategy.array) {\n      (result.state as IResolver[]).push(resolver);\n    } else {\n      resolvers.set(key as InterfaceSymbol<IContainer>, new Resolver(key, ResolverStrategy.array, [result, resolver]));\n    }\n\n    return resolver;\n  }\n\n  public registerTransformer(key: IResolver, transformer: (instance: any) => any): boolean {\n    const resolver = this.getResolver(key);\n\n    if (resolver === null) {\n      return false;\n    }\n\n    if (resolver.getFactory) {\n      const handler = resolver.getFactory(this);\n\n      if (handler === null) {\n        return false;\n      }\n\n      return handler.registerTransformer(transformer);\n    }\n\n    return false;\n  }\n\n  public getResolver(key: Key<IContainer> | IResolver, autoRegister: boolean = true): IResolver | null {\n    validateKey(key);\n\n    if ((key as IResolver).resolve) {\n      return key as IResolver;\n    }\n\n    let current: Container = this;\n    let resolver: IResolver;\n\n    while (current !== null) {\n      resolver = current.resolvers.get(key as InterfaceSymbol<IContainer>);\n\n      if (resolver === undefined) {\n        if (current.parent === null) {\n          return autoRegister ? this.jitRegister(key as InterfaceSymbol<IContainer>, current) : null;\n        }\n\n        current = current.parent;\n      } else {\n        return resolver;\n      }\n    }\n\n    return null;\n  }\n\n  public has(key: Key<IContainer>, searchAncestors: boolean = false): boolean {\n    return this.resolvers.has(key as InterfaceSymbol<IContainer>)\n      ? true\n      : searchAncestors && this.parent !== null\n      ? this.parent.has(key, true)\n      : false;\n  }\n\n  public get(key: Key<IContainer>|IResolver): any {\n    if (Tracer.enabled) { Tracer.enter('Container', 'get', slice.call(arguments)); }\n    validateKey(key);\n\n    if ((key as IResolver).resolve) {\n      if (Tracer.enabled) { Tracer.leave(); }\n      return (key as IResolver).resolve(this, this);\n    }\n\n    let current: Container = this;\n    let resolver: IResolver;\n\n    while (current !== null) {\n      resolver = current.resolvers.get(key as InterfaceSymbol<IContainer>);\n\n      if (resolver === undefined) {\n        if (current.parent === null) {\n          resolver = this.jitRegister(key as InterfaceSymbol<IContainer>, current);\n          if (Tracer.enabled) { Tracer.leave(); }\n          return resolver.resolve(current, this);\n        }\n\n        current = current.parent;\n      } else {\n        if (Tracer.enabled) { Tracer.leave(); }\n        return resolver.resolve(current, this);\n      }\n    }\n  }\n\n  public getAll(key: Key<IContainer>): any {\n    if (Tracer.enabled) { Tracer.enter('Container', 'getAll', slice.call(arguments)); }\n    validateKey(key);\n\n    let current: Container | null = this;\n    let resolver: IResolver;\n\n    while (current !== null) {\n      resolver = current.resolvers.get(key as InterfaceSymbol<IContainer>);\n\n      if (resolver === undefined) {\n        if (this.parent === null) {\n          if (Tracer.enabled) { Tracer.leave(); }\n          return PLATFORM.emptyArray;\n        }\n\n        current = current.parent;\n      } else {\n        if (Tracer.enabled) { Tracer.leave(); }\n        return buildAllResponse(resolver, current, this);\n      }\n    }\n\n    if (Tracer.enabled) { Tracer.leave(); }\n    return PLATFORM.emptyArray;\n  }\n\n  public getFactory(Type: Constructable): IFactory {\n    let factory = this.factories.get(Type);\n\n    if (factory === undefined) {\n      factory = Factory.create(Type);\n      this.factories.set(Type, factory);\n    }\n\n    return factory;\n  }\n\n  public createChild(): IContainer {\n    if (Tracer.enabled) { Tracer.enter('Container', 'createChild', slice.call(arguments)); }\n    const config = this.configuration;\n    const childConfig = { factories: config.factories, resourceLookup: { ...config.resourceLookup } };\n    const child = new Container(childConfig);\n    child.parent = this;\n    if (Tracer.enabled) { Tracer.leave(); }\n    return child;\n  }\n\n  private jitRegister(keyAsValue: Key<IContainer>|IRegistration, handler: Container): IResolver {\n    if ((keyAsValue as IRegistration).register) {\n      const registrationResolver = (keyAsValue as IRegistration).register(handler, keyAsValue);\n      if (!(registrationResolver && registrationResolver.resolve)) {\n        throw Reporter.error(40); // did not return a valid resolver from the static register method\n      }\n      return registrationResolver;\n    }\n\n    const resolver = new Resolver(keyAsValue, ResolverStrategy.singleton, keyAsValue);\n    handler.resolvers.set(keyAsValue as InterfaceSymbol<IContainer>, resolver);\n    return resolver;\n  }\n}\n\nexport const Registration = {\n  instance(key: Key<unknown>, value: unknown): IRegistration {\n    return new Resolver(key, ResolverStrategy.instance, value);\n  },\n\n  singleton(key: Key<unknown>, value: Constructable): IRegistration {\n    return new Resolver(key, ResolverStrategy.singleton, value);\n  },\n\n  transient(key: Key<unknown>, value: Constructable): IRegistration {\n    return new Resolver(key, ResolverStrategy.transient, value);\n  },\n\n  callback(key: Key<unknown>, callback: ResolveCallback): IRegistration {\n    return new Resolver(key, ResolverStrategy.callback, callback);\n  },\n\n  alias(originalKey: Key<unknown>, aliasKey: Key<unknown>): IRegistration {\n    return new Resolver(aliasKey, ResolverStrategy.alias, originalKey);\n  },\n\n  interpret(interpreterKey: Key<{}>, ...rest: Constructable[]): IRegistry {\n    return {\n      register(container: IContainer): void {\n        const resolver = container.getResolver<IRegistry>(interpreterKey);\n\n        if (resolver !== null) {\n          let registry: IRegistry | null =  null;\n\n          if (resolver.getFactory) {\n            const factory = resolver.getFactory(container);\n\n            if (factory !== null) {\n              registry = factory.construct(container, rest);\n            }\n          } else {\n            registry = resolver.resolve(container, container);\n          }\n\n          if (registry !== null) {\n            registry.register(container);\n          }\n        }\n      }\n    };\n  }\n};\n\n/** @internal */\nexport function validateKey(key: unknown): void {\n  // note: design:paramTypes which will default to Object if the param types cannot be statically analyzed by tsc\n  // this check is intended to properly report on that problem - under no circumstance should Object be a valid key anyway\n  if (key === null || key === undefined || key === Object) {\n    throw Reporter.error(5);\n  }\n}\n\nfunction buildAllResponse(resolver: IResolver, handler: IContainer, requestor: IContainer): any[] {\n  if (resolver instanceof Resolver && resolver.strategy === ResolverStrategy.array) {\n    const state = resolver.state as IResolver[];\n    let i = state.length;\n    const results = new Array(i);\n\n    while (i--) {\n      results[i] = state[i].resolve(handler, requestor);\n    }\n\n    return results;\n  }\n\n  return [resolver.resolve(handler, requestor)];\n}\n\n/** @internal */\nexport const classInvokers: IInvoker[] = [\n  {\n    invoke<T>(container: IContainer, Type: Constructable<T>): T {\n      return new Type();\n    },\n    invokeWithDynamicDependencies\n  },\n  {\n    invoke<T>(container: IContainer, Type: Constructable<T>, deps: Key<unknown>[]): T {\n      return new Type(container.get(deps[0]));\n    },\n    invokeWithDynamicDependencies\n  },\n  {\n    invoke<T>(container: IContainer, Type: Constructable<T>, deps: Key<unknown>[]): T {\n      return new Type(container.get(deps[0]), container.get(deps[1]));\n    },\n    invokeWithDynamicDependencies\n  },\n  {\n    invoke<T>(container: IContainer, Type: Constructable<T>, deps: Key<unknown>[]): T {\n      return new Type(container.get(deps[0]), container.get(deps[1]), container.get(deps[2]));\n    },\n    invokeWithDynamicDependencies\n  },\n  {\n    invoke<T>(container: IContainer, Type: Constructable<T>, deps: Key<unknown>[]): T {\n      return new Type(\n        container.get(deps[0]),\n        container.get(deps[1]),\n        container.get(deps[2]),\n        container.get(deps[3])\n      );\n    },\n    invokeWithDynamicDependencies\n  },\n  {\n    invoke<T>(container: IContainer, Type: Constructable<T>, deps: Key<unknown>[]): T {\n      return new Type(\n        container.get(deps[0]),\n        container.get(deps[1]),\n        container.get(deps[2]),\n        container.get(deps[3]),\n        container.get(deps[4])\n      );\n    },\n    invokeWithDynamicDependencies\n  }\n];\n\n/** @internal */\nexport const fallbackInvoker: IInvoker = {\n  invoke: invokeWithDynamicDependencies as (container: IContainer, fn: Constructable, dependencies: Key<unknown>[]) => Constructable,\n  invokeWithDynamicDependencies\n};\n\n/** @internal */\nexport function invokeWithDynamicDependencies<T>(\n  container: IContainer,\n  Type: Constructable<T>,\n  staticDependencies: Key<unknown>[],\n  dynamicDependencies: Key<unknown>[]\n): T {\n  let i = staticDependencies.length;\n  let args: Key<unknown>[] = new Array(i);\n  let lookup: Key<unknown>;\n\n  while (i--) {\n    lookup = staticDependencies[i];\n\n    if (lookup === null || lookup === undefined) {\n      throw Reporter.error(7, `Index ${i}.`);\n    } else {\n      args[i] = container.get(lookup);\n    }\n  }\n\n  if (dynamicDependencies !== undefined) {\n    args = args.concat(dynamicDependencies);\n  }\n\n  return Reflect.construct(Type, args);\n}\n","function trimDots(ary: string[]): void {\n  const len = ary.length;\n  let i = 0;\n  let part: string;\n  for (; i < len; ++i) {\n    part = ary[i];\n    if (part === '.') {\n      ary.splice(i, 1);\n      i -= 1;\n    } else if (part === '..') {\n      // If at the start, or previous value is still ..,\n      // keep them so that when converted to a path it may\n      // still work when converted to a path, even though\n      // as an ID it is less than ideal. In larger point\n      // releases, may be better to just kick out an error.\n      if (i === 0 || (i === 1 && ary[2] === '..') || ary[i - 1] === '..') {\n        continue;\n      }\n      if (i > 0) {\n        ary.splice(i - 1, 2);\n        i -= 2;\n      }\n    }\n  }\n}\n\n/**\n * Calculates a path relative to a file.\n *\n * @param name The relative path.\n * @param file The file path.\n * @return The calculated path.\n */\nexport function relativeToFile(name: string, file: string): string {\n  const fileParts = file && file.split('/');\n  const nameParts = name.trim().split('/');\n\n  if (nameParts[0].charAt(0) === '.' && fileParts) {\n    //Convert file to array, and lop off the last part,\n    //so that . matches that 'directory' and not name of the file's\n    //module. For instance, file of 'one/two/three', maps to\n    //'one/two/three.js', but we want the directory, 'one/two' for\n    //this normalization.\n    const normalizedBaseParts = fileParts.slice(0, fileParts.length - 1);\n    nameParts.unshift(...normalizedBaseParts);\n  }\n\n  trimDots(nameParts);\n\n  return nameParts.join('/');\n}\n\n/**\n * Joins two paths.\n *\n * @param path1 The first path.\n * @param path2 The second path.\n * @return The joined path.\n */\nexport function join(path1: string, path2: string): string {\n  if (!path1) {\n    return path2;\n  }\n  if (!path2) {\n    return path1;\n  }\n  const schemeMatch = path1.match(/^([^/]*?:)\\//);\n  const scheme = (schemeMatch && schemeMatch.length > 0) ? schemeMatch[1] : '';\n  path1 = path1.slice(scheme.length);\n\n  let urlPrefix: string;\n  if (path1.indexOf('///') === 0 && scheme === 'file:') {\n    urlPrefix = '///';\n  } else if (path1.indexOf('//') === 0) {\n    urlPrefix = '//';\n  } else if (path1.indexOf('/') === 0) {\n    urlPrefix = '/';\n  } else {\n    urlPrefix = '';\n  }\n\n  const trailingSlash = path2.slice(-1) === '/' ? '/' : '';\n\n  const url1 = path1.split('/');\n  const url2 = path2.split('/');\n  const url3 = [];\n\n  for (let i = 0, ii = url1.length; i < ii; ++i) {\n    if (url1[i] === '..') {\n      url3.pop();\n    } else if (url1[i] !== '.' && url1[i] !== '') {\n      url3.push(url1[i]);\n    }\n  }\n\n  for (let i = 0, ii = url2.length; i < ii; ++i) {\n    if (url2[i] === '..') {\n      url3.pop();\n    } else if (url2[i] !== '.' && url2[i] !== '') {\n      url3.push(url2[i]);\n    }\n  }\n\n  return scheme + urlPrefix + url3.join('/') + trailingSlash;\n}\n\nconst encode = encodeURIComponent;\nconst encodeKey = (k: string) => encode(k).replace('%24', '$');\n\n// these types are reverse-engineered from aurelia-path.. don't shoot the messenger..\ntype Scalar = null | undefined | boolean | number | string;\nexport interface IQueryParams {\n  [key: string]: Scalar | this | (string | string[] | this)[];\n}\ntype ComplexQueryParams = Scalar | IQueryParams | (string | string[] | IQueryParams)[];\ntype SimpleQueryParams = string | IQueryParams | (string | IQueryParams)[];\n\n/**\n * Recursively builds part of query string for parameter.\n *\n * @param key Parameter name for query string.\n * @param value Parameter value to deserialize.\n * @param traditional Boolean Use the old URI template standard (RFC6570)\n * @return Array with serialized parameter(s)\n */\nfunction buildParam(key: string, value: ComplexQueryParams, traditional?: boolean): string[] {\n  let result: string[] = [];\n  if (value === null || value === undefined) {\n    return result;\n  }\n  if (Array.isArray(value)) {\n    for (let i = 0, l = value.length; i < l; i++) {\n      if (traditional) {\n        result.push(`${encodeKey(key)}=${encode(value[i] as string)}`);\n      } else {\n        const arrayKey = `${key}[${(typeof value[i] === 'object' && value[i] !== null ? i : '')}]`;\n        result = result.concat(buildParam(arrayKey, value[i]));\n      }\n    }\n  } else if (typeof value === 'object' && !traditional) {\n    for (const propertyName in value) {\n      result = result.concat(buildParam(`${key}[${propertyName}]`, value[propertyName]));\n    }\n  } else {\n    result.push(`${encodeKey(key)}=${encode(value as string)}`);\n  }\n  return result;\n}\n\n/**\n * Generate a query string from an object.\n *\n * @param params Object containing the keys and values to be used.\n * @param traditional Boolean Use the old URI template standard (RFC6570)\n * @returns The generated query string, excluding leading '?'.\n */\nexport function buildQueryString(params?: IQueryParams, traditional?: boolean): string {\n  let pairs: string[] = [];\n  const keys = Object.keys(params || {}).sort();\n  for (let i = 0, len = keys.length; i < len; i++) {\n    const key = keys[i];\n    pairs = pairs.concat(buildParam(key, params[key], traditional));\n  }\n\n  if (pairs.length === 0) {\n    return '';\n  }\n\n  return pairs.join('&');\n}\n\n/**\n * Process parameter that was recognized as scalar param (primitive value or shallow array).\n *\n * @param existedParam Object with previously parsed values for specified key.\n * @param value Parameter value to append.\n * @returns Initial primitive value or transformed existedParam if parameter was recognized as an array.\n */\nfunction processScalarParam(existedParam: SimpleQueryParams, value: string | IQueryParams): SimpleQueryParams {\n  if (Array.isArray(existedParam)) {\n    // value is already an array, so push on the next value.\n    existedParam.push(value);\n    return existedParam;\n  }\n  if (existedParam !== undefined) {\n    // value isn't an array, but since a second value has been specified,\n    // convert value into an array.\n    return [existedParam, value];\n  }\n  // value is a scalar.\n  return value;\n}\n/**\n * Sequentially process parameter that was recognized as complex value (object or array).\n * For each keys part, if the current level is undefined create an\n *   object or array based on the type of the next keys part.\n *\n * @param queryParams root-level result object.\n * @param keys Collection of keys related to this parameter.\n * @param value Parameter value to append.\n */\nfunction parseComplexParam(queryParams: IQueryParams, keys: (string | number)[], value: string): void {\n  let currentParams: SimpleQueryParams = queryParams;\n  const keysLastIndex = keys.length - 1;\n  for (let j = 0; j <= keysLastIndex; j++) {\n    const key = keys[j] === '' ? currentParams.length : keys[j];\n    if (j < keysLastIndex) {\n      // The value has to be an array or a false value\n      // It can happen that the value is no array if the key was repeated with traditional style like `list=1&list[]=2`\n      const prevValue = !currentParams[key] || typeof currentParams[key] === 'object' ? currentParams[key] : [currentParams[key]];\n      currentParams = currentParams[key] = prevValue || (isNaN(keys[j + 1] as number) ? {} : []);\n    } else {\n      currentParams = currentParams[key] = value;\n    }\n  }\n}\n\n/**\n * Parse a query string into a queryParams object.\n *\n * @param queryString The query string to parse.\n * @returns Object with keys and values mapped from the query string.\n */\nexport function parseQueryString(queryString: string): IQueryParams {\n  const queryParams: IQueryParams = {};\n  if (!queryString || typeof queryString !== 'string') {\n    return queryParams;\n  }\n\n  let query = queryString;\n  if (query.charAt(0) === '?') {\n    query = query.slice(1);\n  }\n\n  const pairs = query.replace(/\\+/g, ' ').split('&');\n  for (let i = 0; i < pairs.length; i++) {\n    const pair = pairs[i].split('=');\n    const key = decodeURIComponent(pair[0]);\n    if (!key) {\n      continue;\n    }\n    //split object key into its parts\n    let keys = key.split('][');\n    let keysLastIndex = keys.length - 1;\n\n    // If the first keys part contains [ and the last ends with ], then []\n    // are correctly balanced, split key to parts\n    //Else it's basic key\n    if (/\\[/.test(keys[0]) && /\\]$/.test(keys[keysLastIndex])) {\n      keys[keysLastIndex] = keys[keysLastIndex].replace(/\\]$/, '');\n      keys = keys.shift().split('[').concat(keys);\n      keysLastIndex = keys.length - 1;\n    } else {\n      keysLastIndex = 0;\n    }\n\n    if (pair.length >= 2) {\n      const value = pair[1] ? decodeURIComponent(pair[1]) : '';\n      if (keysLastIndex) {\n        parseComplexParam(queryParams, keys, value);\n      } else {\n        queryParams[key] = processScalarParam(queryParams[key] as SimpleQueryParams, value);\n      }\n    } else {\n      queryParams[key] = true;\n    }\n  }\n  return queryParams;\n}\n","import { PLATFORM } from './platform';\n\nexport interface ITimer {\n  enter(): void;\n  leave(): void;\n}\n\nexport interface IProfile {\n  name: string;\n  duration: number;\n  topLevelCount: number;\n  totalCount: number;\n}\n\nexport const Profiler = (function (): {\n  createTimer: typeof createTimer;\n  enable: typeof enable;\n  disable: typeof disable;\n  report: typeof report;\n  readonly enabled: boolean;\n} {\n  const now = PLATFORM.now;\n  const timers: string[] = [];\n  let profileMap: Record<string, IProfile>;\n\n  const profiler = {\n    createTimer,\n    enable,\n    disable,\n    report,\n    enabled: false\n  };\n  return profiler;\n\n  function createTimer(name: string): ITimer {\n    timers.push(name);\n    let depth = 0;\n    let mark = 0;\n\n    return {\n      enter,\n      leave\n    };\n\n    function enter(): void {\n      if (++depth === 1) {\n        mark = now();\n        ++profileMap[name].topLevelCount;\n      }\n      ++profileMap[name].totalCount;\n    }\n    function leave(): void {\n      if (--depth === 0) {\n        profileMap[name].duration += (now() - mark);\n      }\n    }\n  }\n\n  function enable(): void {\n    profileMap = {};\n    for (const timer of timers) {\n      profileMap[timer] = {\n        name: timer,\n        duration: 0,\n        topLevelCount: 0,\n        totalCount: 0\n      };\n    }\n    profiler.enabled = true;\n  }\n\n  function disable(): void {\n    profiler.enabled = false;\n  }\n\n  function report(cb: (name: string, duration: number, topLevelCount: number, totalCount: number) => void): void {\n    Object.keys(profileMap).map(key => profileMap[key]).sort((a, b) => b.duration - a.duration).forEach(p => {\n      cb(p.name, p.duration, p.topLevelCount, p.totalCount);\n    });\n  }\n})();\n","import { IContainer, IRegistry, IResolver } from './di';\nimport { Constructable, ConstructableClass, Immutable } from './interfaces';\n\nexport interface IResourceDefinition extends Object {\n  name: string;\n}\n\nexport interface IResourceKind<TDef, TProto, TClass extends ConstructableClass<TProto, unknown> = ConstructableClass<TProto>> {\n  readonly name: string;\n  keyFrom(name: string): string;\n  isType<T>(Type: T & Partial<IResourceType<TDef, TProto>>): Type is T & TClass & IResourceType<TDef, TProto>;\n\n  define<T extends Constructable>(name: string, ctor?: T): T & TClass & IResourceType<TDef, TProto>;\n  define<T extends Constructable>(definition: TDef, ctor?: T): T & TClass & IResourceType<TDef, TProto>;\n  define<T extends Constructable>(nameOrDefinition: string | TDef, ctor?: T): T & TClass & IResourceType<TDef, TProto>;\n}\n\nexport type ResourceDescription<TDef> = Immutable<Required<TDef>>;\n\nexport type ResourcePartDescription<TDef> = Immutable<TDef>;\n\nexport interface IResourceType<TDef, TProto, TClass extends ConstructableClass<TProto, unknown> = ConstructableClass<TProto>> extends ConstructableClass<TProto, unknown>, IRegistry {\n  readonly kind: IResourceKind<TDef, TProto, TClass>;\n  readonly description: ResourceDescription<TDef>;\n}\n\nexport interface IResourceDescriptions {\n  find<TDef, TProto>(kind: IResourceKind<TDef, TProto>, name: string): ResourceDescription<TDef> | null;\n  create<TDef, TProto>(kind: IResourceKind<TDef, TProto>, name: string): TProto | null;\n}\n\nexport class RuntimeCompilationResources implements IResourceDescriptions {\n  private readonly context: IContainer;\n\n  constructor(context: IContainer) {\n    this.context = context;\n  }\n\n  public find<TDef, TProto>(kind: IResourceKind<TDef, TProto>, name: string): ResourceDescription<TDef> | null {\n    const key = kind.keyFrom(name);\n    const resourceLookup = (this.context as unknown as { resourceLookup: Record<string, IResolver> }).resourceLookup;\n    let resolver = resourceLookup[key];\n    if (resolver === undefined) {\n      resolver = resourceLookup[key] = this.context.getResolver(key, false);\n    }\n\n    if (resolver !== null && resolver.getFactory) {\n      const factory = resolver.getFactory(this.context);\n\n      if (factory !== null) {\n        const description = (factory.Type as IResourceType<TDef, TProto>).description;\n        return description === undefined ? null : description;\n      }\n    }\n\n    return null;\n  }\n\n  public create<TDef, TProto>(kind: IResourceKind<TDef, TProto>, name: string): TProto | null {\n    const key = kind.keyFrom(name);\n    const resourceLookup = (this.context as unknown as { resourceLookup: Record<string, IResolver> }).resourceLookup;\n    let resolver = resourceLookup[key];\n    if (resolver === undefined) {\n      resolver = resourceLookup[key] = this.context.getResolver(key, false);\n    }\n    if (resolver !== null) {\n      const instance = resolver.resolve(this.context, this.context);\n      return instance === undefined ? null : instance;\n    }\n    return null;\n  }\n}\n","import { IContainer, IResolver, Registration } from './di';\nimport { Constructable, IDisposable } from './interfaces';\nimport { Reporter } from './reporter';\n\n/**\n * Represents a handler for an EventAggregator event.\n */\nclass Handler {\n  /** @internal */\n  public readonly messageType: Constructable;\n  /** @internal */\n  public readonly callback: EventAggregatorCallback;\n\n  constructor(messageType: Constructable, callback: EventAggregatorCallback) {\n    this.messageType = messageType;\n    this.callback = callback;\n  }\n\n  public handle(message: InstanceType<Constructable>): void {\n    if (message instanceof this.messageType) {\n      this.callback.call(null, message);\n    }\n  }\n}\n\nfunction invokeCallback(callback: EventAggregatorCallback, data: unknown, event: string): void {\n  try {\n    callback(data, event);\n  } catch (e) {\n    Reporter.error(0, e); // TODO: create error code\n  }\n}\n\nfunction invokeHandler(handler: Handler, data: InstanceType<Constructable>): void {\n  try {\n    handler.handle(data);\n  } catch (e) {\n    Reporter.error(0, e); // TODO: create error code\n  }\n}\n\n// TODO: move this to a v1-compat package\nexport interface Subscription extends IDisposable {}\n\n/**\n * Enables loosely coupled publish/subscribe messaging.\n * @param data The optional data published on the channel.\n * @param event The event that triggered the callback. Only available on channel based messaging.\n */\nexport type EventAggregatorCallback<T = unknown> = (data?: T, event?: string) => unknown;\n\n/**\n * Enables loosely coupled publish/subscribe messaging.\n */\nexport class EventAggregator {\n  /** @internal */\n  public readonly eventLookup: Record<string, EventAggregatorCallback[]>;\n  /** @internal */\n  public readonly messageHandlers: Handler[];\n\n  /**\n   * Creates an instance of the EventAggregator class.\n   */\n  constructor() {\n    this.eventLookup = {};\n    this.messageHandlers = [];\n  }\n\n  /**\n   * Publishes a message.\n   * @param channel The channel to publish to.\n   * @param data The data to publish on the channel.\n   */\n  public publish(channel: string, data?: unknown): void;\n  /**\n   * Publishes a message.\n   * @param instance The instance to publish to.\n   */\n  public publish(instance: InstanceType<Constructable>): void;\n  public publish(channelOrInstance: string | InstanceType<Constructable>, data?: unknown): void {\n    let subscribers: (EventAggregatorCallback | Handler)[];\n    let i: number;\n\n    if (!channelOrInstance) {\n      throw Reporter.error(0); // TODO: create error code for 'Event was invalid.'\n    }\n\n    if (typeof channelOrInstance === 'string') {\n      const channel: string = channelOrInstance;\n      subscribers = this.eventLookup[channel];\n      if (subscribers) {\n        subscribers = subscribers.slice();\n        i = subscribers.length;\n\n        while (i--) {\n          invokeCallback(subscribers[i] as EventAggregatorCallback, data, channel);\n        }\n      }\n    } else {\n      const instance: InstanceType<Constructable> = channelOrInstance;\n      subscribers = this.messageHandlers.slice();\n      i = subscribers.length;\n\n      while (i--) {\n        invokeHandler(subscribers[i] as Handler, instance);\n      }\n    }\n  }\n\n  /**\n   * Subscribes to a message channel.\n   * @param channel The event channel.\n   * @param callback The callback to be invoked when the specified message is published.\n   */\n  public subscribe<T>(channel: string, callback: EventAggregatorCallback<T>): IDisposable;\n  /**\n   * Subscribes to a message type.\n   * @param type The event data type.\n   * @param callback The callback to be invoked when the specified message is published.\n   */\n  public subscribe<T extends Constructable>(type: T, callback: EventAggregatorCallback<InstanceType<T>>): IDisposable;\n  public subscribe<T extends Constructable>(channelOrType: string | T, callback: EventAggregatorCallback<T | InstanceType<T>>): IDisposable {\n    let handler: EventAggregatorCallback | Handler;\n    let subscribers: (EventAggregatorCallback | Handler)[];\n\n    if (!channelOrType) {\n      throw Reporter.error(0); // TODO: create error code for 'Event channel/type was invalid.'\n    }\n\n    if (typeof channelOrType === 'string') {\n      const channel: string = channelOrType;\n      handler = callback;\n      subscribers = this.eventLookup[channel] || (this.eventLookup[channel] = []);\n    } else {\n      const type: T = channelOrType;\n      handler = new Handler(type, callback);\n      subscribers = this.messageHandlers;\n    }\n\n    subscribers.push(handler);\n\n    return {\n      dispose(): void {\n        const idx = subscribers.indexOf(handler);\n        if (idx !== -1) {\n          subscribers.splice(idx, 1);\n        }\n      }\n    };\n  }\n\n  /**\n   * Subscribes to a message channel, then disposes the subscription automatically after the first message is received.\n   * @param channel The event channel.\n   * @param callback The callback to be invoked when the specified message is published.\n   */\n  public subscribeOnce<T>(channel: string, callback: EventAggregatorCallback<T>): IDisposable;\n  /**\n   * Subscribes to a message type, then disposes the subscription automatically after the first message is received.\n   * @param type The event data type.\n   * @param callback The callback to be invoked when the specified message is published.\n   */\n  public subscribeOnce<T extends Constructable>(type: T, callback: EventAggregatorCallback<InstanceType<T>>): IDisposable;\n  public subscribeOnce<T extends Constructable>(channelOrType: string | T, callback: EventAggregatorCallback<T | InstanceType<T>>): IDisposable {\n    const sub = this.subscribe(channelOrType as T, (data?: T, event?: string) => {\n      sub.dispose();\n      return callback(data, event);\n    });\n\n    return sub;\n  }\n}\n"],"names":[],"mappings":"AAEA;AACA,SAAS,KAAK,KAAW,OAAO,EAAE;AAOlC,MAAM,OAAO,GAA+B,CAAC;;;IAG3C,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QACjC,OAAO,MAA+C,CAAC;KACxD;IACD,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;QAC/B,OAAO,IAAI,CAAC;KACb;IACD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QACjC,OAAO,MAAM,CAAC;KACf;;IAED,IAAI;;;QAGF,OAAO,IAAI,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;KACtC;IAAC,WAAM;;;QAGN,OAAO,EAAgC,CAAC;KACzC;CACF,GAAG,CAAC;;AAGL,MAAM,IAAI,GAAG,CAAC;IACZ,IAAI,cAA4B,CAAC;IACjC,IAAI,MAAqD,CAAC;IAC1D,IAAI,cAAsB,CAAC;IAC3B,IAAI,YAAoB,CAAC;IACzB,IAAI,MAAc,CAAC;IAEnB,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,SAAS,IAAI,OAAO,CAAC,WAAW,KAAK,IAAI,KAAK,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE;QAClG,MAAM,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC;QACzC,OAAO;YACL,OAAO,YAAY,CAAC,GAAG,EAAE,CAAC;SAC3B,CAAC;KACH;SAAM,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,OAAO,KAAK,IAAI,KAAK,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE;QAChG,MAAM,GAAG,GAAG;YACV,OAAO,CAAC,cAAc,EAAE,GAAG,YAAY,IAAI,GAAG,CAAC;SAChD,CAAC;QACF,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;QAChC,cAAc,GAAG;YACf,IAAI,EAAoB,CAAC;YACzB,EAAE,GAAG,MAAM,EAAE,CAAC;YACd,OAAO,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SAC5B,CAAC;QACF,cAAc,GAAG,cAAc,EAAE,CAAC;QAClC,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;QACxC,YAAY,GAAG,cAAc,GAAG,MAAM,CAAC;QACvC,OAAO,GAAG,CAAC;KACZ;CACF,GAAG,CAAC;;;;;AAML,MAAM,EACJ,KAAK,EACL,QAAQ,EACR,iBAAiB,EACjB,iBAAiB,EACjB,WAAW,EACX,cAAc,EACf,GAAG,CAAC;IAQH,IACE,OAAO,CAAC,WAAW,KAAK,SAAS;QACjC,OAAO,CAAC,WAAW,KAAK,IAAI;QAC5B,OAAO,CAAC,WAAW,CAAC,IAAI;QACxB,OAAO,CAAC,WAAW,CAAC,OAAO;QAC3B,OAAO,CAAC,WAAW,CAAC,gBAAgB;QACpC,OAAO,CAAC,WAAW,CAAC,gBAAgB;QACpC,OAAO,CAAC,WAAW,CAAC,UAAU;QAC9B,OAAO,CAAC,WAAW,CAAC,aAAa,EACjC;QACA,MAAM,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC;QACzC,OAAO;YACL,KAAK,EAAE,UAAS,IAAY;gBAC1B,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACzB;YACD,QAAQ,EAAE,UAAS,IAAY,EAAE,KAAc,EAAE,GAAY;gBAC3D,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;aACxC;YACD,iBAAiB,EAAE,UAAS,IAAY;gBACtC,OAAO,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;aAC5C;YACD,iBAAiB,EAAE,UAAS,IAAY;gBACtC,OAAO,YAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;aAC5C;YACD,WAAW,EAAE,UAAS,IAAa;gBACjC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aAC/B;YACD,cAAc,EAAE,UAAS,IAAa;gBACpC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;aAClC;SACF,CAAC;KACH;SAAM,IAAI,OAAO,CAAC,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE;QAC9F,MAAM,OAAO,GAAwB,EAAE,CAAC;QACxC,MAAM,UAAU,GAAsC,EAAE,CAAC;QAEzD,MAAM,aAAa,GAAG,UAAU,GAAW,EAAE,KAAa;YACxD,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;YACzB,MAAM,MAAM,GAAG,EAAE,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE;oBAC7B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBACzB;aACF;YACD,OAAO,MAAM,CAAC;SACf,CAAC;QAEF,MAAM,YAAY,GAAG,UAAU,IAAY,EAAE,IAAY;YACvD,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;YACvB,IAAI,KAAwB,CAAC;YAC7B,OAAO,CAAC,EAAE,EAAE;gBACV,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAI,KAAK,CAAC,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,EAAE;oBACxE,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACtB;aACF;SACF,CAAC;QAEF,OAAO;YACL,KAAK,EAAE,UAAS,IAAY;gBAC1B,MAAM,IAAI,GAAsB;oBAC9B,IAAI;oBACJ,SAAS,EAAE,MAAM;oBACjB,SAAS,EAAE,IAAI,EAAE;oBACjB,QAAQ,EAAE,CAAC;iBACZ,CAAC;gBACF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACnB,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;aACzB;YACD,QAAQ,EAAE,UAAS,IAAY,EAAE,SAAkB,EAAE,OAAgB;gBACnE,IAAI,SAAiB,CAAC;gBACtB,IAAI,OAAe,CAAC;gBAEpB,IAAI,OAAO,KAAK,SAAS,IAAI,UAAU,CAAC,OAAO,CAAC,KAAK,SAAS,EAAE;oBAC9D,MAAM,IAAI,WAAW,CAAC,2DAA2D,OAAO,mBAAmB,CAAC,CAAC;iBAC9G;gBACD,IAAI,SAAS,KAAK,SAAS,IAAI,UAAU,CAAC,SAAS,CAAC,KAAK,SAAS,EAAE;oBAClE,MAAM,IAAI,WAAW,CAAC,2DAA2D,SAAS,mBAAmB,CAAC,CAAC;iBAChH;gBAED,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;oBACzB,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC;iBAC7C;qBAAM;oBACL,SAAS,GAAG,CAAC,CAAC;iBACf;gBACD,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE;oBACvB,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;iBACzC;qBAAM;oBACL,OAAO,GAAG,IAAI,EAAE,CAAC;iBAClB;gBACD,OAAO,CAAC,IAAI,CAAC;oBACX,IAAI;oBACJ,SAAS,EAAE,SAAS;oBACpB,SAAS;oBACT,QAAQ,EAAE,OAAO,GAAG,SAAS;iBAC9B,CAAC,CAAC;aACJ;YACD,iBAAiB,EAAE,UAAS,IAAY;gBACtC,OAAO,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aACpC;YACD,iBAAiB,EAAE,UAAS,IAAY;gBACtC,OAAO,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;aACzC;YACD,WAAW,EAAE,UAAS,IAAa;gBACjC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aAC5B;YACD,cAAc,EAAE,UAAS,IAAa;gBACpC,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;aAC/B;SACF,CAAC;KACH;CACF,GAAG,CAAC;;AAGL,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;IACtB,MAAM,OAAO,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAClC,MAAM,MAAM,GAAG,gBAAgB,CAAC;IAChC,IAAI,GAAG,GAAiD,OAAO,CAAC,UAAU,MAAM,EAAE,CAAC,CAAC;IACpF,IAAI,GAAG,GAA6B,OAAO,CAAC,SAAS,MAAM,EAAE,CAAC,IAAI,OAAO,CAAC,gBAAgB,MAAM,EAAE,CAAC,CAAC;IAEpG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QAC/C,GAAG,GAAG,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,UAAU,MAAM,EAAE,CAAC,CAAC;QAC/C,GAAG,GAAG,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,SAAS,MAAM,EAAE,CAAC,IAAI,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,gBAAgB,MAAM,EAAE,CAAC,CAAC;KACjG;;IAGD,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE;QAChB,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,MAAM,KAAK,GAA2E,EAAE,CAAC;QACzF,MAAM,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;QAEhC,GAAG,GAAG,UAAS,QAAgC;YAC7C,IAAI,IAAY,CAAC;YACjB,IAAI,IAAY,CAAC;YACjB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,IAAI,GAAG,IAAI,EAAE,CAAC;gBACd,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,aAAa,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;gBAClD,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;gBACnB,UAAU,CACR;oBACE,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;oBAE1B,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;oBACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;wBAClC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;4BACpB,IAAI;gCACF,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;6BACtB;4BAAC,OAAO,CAAC,EAAE;gCACV,UAAU,CAAC,cAAoB,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;6BAC/C;yBACF;qBACF;iBACF,EACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CACjB,CAAC;aACH;YACD,KAAK,CAAC,IAAI,CAAC;gBACT,MAAM,EAAE,EAAE,EAAE;gBACZ,QAAQ,EAAE,QAAQ;gBAClB,SAAS,EAAE,KAAK;aACjB,CAAC,CAAC;YACH,OAAO,EAAE,CAAC;SACX,CAAC;QAEF,GAAG,GAAG,UAAS,MAAc;YAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACrC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,MAAM,EAAE;oBAC9B,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;iBAC3B;aACF;SACF,CAAC;KACH;IAED,MAAM,KAAK,GAAG,UAAS,QAAgC;QACrD,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;KACpC,CAAC;IACF,KAAK,CAAC,MAAM,GAAG;QACb,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;KAC/B,CAAC;IACF,OAAO,CAAC,qBAAqB,GAAG,GAAG,CAAC;IACpC,OAAO,CAAC,oBAAoB,GAAG,GAAG,CAAC;IACnC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;CACnC,GAAG,CAAC;AAEL,AAGA,MAAM,QAAQ;IAOZ,YAAY,EAAiC,EAAE,UAAmB,IAAI;QACpE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC3B;IAEM,MAAM,CAAC,EAAiC,EAAE,OAAgB;QAC/D,OAAO,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,OAAO,MAAM,OAAO,KAAK,SAAS,GAAG,IAAI,GAAG,OAAO,CAAC,CAAC;KACpF;IAEM,MAAM,CAAC,UAAkB;QAC9B,IAAI,IAAI,CAAC,EAAE,KAAK,IAAI,EAAE;YACpB,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;gBACzB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;aACxC;iBAAM;gBACL,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;aACrB;SACF;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;QACD,OAAO,IAAI,CAAC;KACb;IAEM,OAAO,CAAC,IAAU;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;YACtB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACvB;QACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;IAEM,UAAU,CAAC,OAAgB,KAAK;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;YACtB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAC5B;QACD,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;YACtB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;SAC5B;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,OAAO,IAAI,CAAC;KACb;CACF;AAED,MAAa,MAAM;IAUjB;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,CAAC,SAAiB;YAC5B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YACpB,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;gBACvB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;oBACpE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAClC;aACF;YACD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB,CAAC;KACH;IAEM,GAAG,CAAC,EAAiC,EAAE,OAAgB;QAC5D,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;QAC3C,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QACzB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACrB,IAAI,GAAG,KAAK,IAAI,EAAE;YAChB,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACxB;aAAM;YACL,OAAO,GAAG,KAAK,IAAI,EAAE;gBACnB,IAAI,GAAG,GAAG,CAAC;gBACX,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;aAChB;YACD,IAAI,QAAQ,CAAC,IAAI,KAAK,IAAI,EAAE;gBAC1B,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACxB;SACF;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;aAAM;YACL,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;QACD,OAAO,IAAI,CAAC;KACb;IAEM,MAAM,CAAC,EAAiC,EAAE,OAAgB;QAC/D,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;QAC9B,OAAO,QAAQ,KAAK,IAAI,EAAE;YACxB,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE;gBAChC,QAAQ,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC;aAClC;iBAAM;gBACL,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;aAC1B;SACF;QACD,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;YAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QACD,OAAO,IAAI,CAAC;KACb;IAEM,KAAK;QACV,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;KACF;IAEM,IAAI;QACT,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;KACF;IAEM,MAAM,CAAC,cAAsB,IAAI,EAAE;QACxC,IAAI,SAAiB,CAAC;QAEtB,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,EAAE;YAC/B,SAAS,GAAG,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;;;;;;YAMxC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,SAAS,GAAG,EAAE,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC;YACpD,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;YACzB,OAAO,QAAQ,KAAK,IAAI,EAAE;gBACxB,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC7C;YACD,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;gBACtB,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB;SACF;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;SACrB;QACD,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;KAC7B;IAEM,eAAe;QACpB,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,EAAE;;YAEzB,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO;gBAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;aACxB,CAAC,CAAC;SACJ;QACD,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IAEO,UAAU;QAChB,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;YACpD,IAAI,CAAC,QAAQ,GAAG,IAAI,EAAE,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;KACF;IAEO,SAAS;QACf,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC,EAAE;YACzB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;SACrB;KACF;CACF;AAED,MAAM,eAAe,GAA2B,EAAE,CAAC;AACnD,MAAM,eAAe,GAA2B,EAAE,CAAC;AAEnD,MAAa,QAAQ,GAAG;IACtB,MAAM,EAAE,OAAO;IACf,MAAM,EAAE,IAAI,MAAM,EAAE;IACpB,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;IAC7B,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;IAC9B,IAAI,EAAE,KAAK;IACX,GAAG,EAAE,IAAI;IACT,IAAI,EAAE,KAAK;IACX,OAAO,EAAE,QAAQ;IACjB,gBAAgB,EAAE,iBAAiB;IACnC,gBAAgB,EAAE,iBAAiB;IACnC,UAAU,EAAE,WAAW;IACvB,aAAa,EAAE,cAAc;IAE7B,SAAS,CAAC,KAAa;;QAErB,IAAI,KAAK,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,KAAK,KAAK,SAAS;YAAE,OAAO,KAAK,CAAC;QACtC,KAAK,GAAG,EAAE,CAAC;QACX,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,GAAG,GAAG,KAAK,CAAC;QAChB,IAAI,IAAY,CAAC;QACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YAC9C,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,EAAE;gBAChD,GAAG,GAAG,IAAI,CAAC;aACZ;iBAAM;gBACL,KAAK,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;gBACjF,GAAG,GAAG,KAAK,CAAC;aACb;YACD,KAAK,GAAG,KAAK,CAAC;SACf;QACD,OAAO,eAAe,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;KACvC;IAED,SAAS,CAAC,KAAa;;QAErB,IAAI,KAAK,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,KAAK,KAAK,SAAS;YAAE,OAAO,KAAK,CAAC;QACtC,KAAK,GAAG,EAAE,CAAC;QACX,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,IAAY,EAAE,KAAa,CAAC;QAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YAC9C,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACvB,KAAK,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAC3B,KAAK,GAAG,KAAK,IAAI,KAAK,GAAG,KAAK,IAAI,IAAI,KAAK,KAAK,GAAG,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;YACzE,KAAK,GAAG,KAAK,CAAC;SACf;QACD,OAAO,eAAe,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;KACvC;IAED,OAAO,CAAc,KAAmB;;QAEtC,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;QACzB,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAC1B,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SACrB;QACD,OAAO,GAAG,CAAC;KACZ;IAED,qBAAqB,CAAC,QAAgC;QACpD,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;KACvB;IAED,aAAa,CAAC,MAAe;QAC3B,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;KAC/B;IAED,YAAY,CAAC,MAAe;QAC1B,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;KAC9B;;IAGD,WAAW,CAAC,OAAsB,EAAE,OAAgB,EAAE,GAAG,IAAW;QAClE,OAAO,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;KACvD;;IAGD,UAAU,CAAC,OAAsB,EAAE,OAAgB,EAAE,GAAG,IAAW;QACjE,OAAO,OAAO,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC;KACtD;CACF;;MChhBY,QAAQ,GAAG;IACtB,KAAK,CAAC,IAAY,EAAE,GAAG,MAAiB,IAAU,OAAO,EAAE;IAC3D,KAAK,CAAC,IAAY,EAAE,GAAG,MAAiB,IAAW,OAAO,IAAI,KAAK,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,EAAE;CACvF,CAAC;AACF,MAAa,MAAM,GAAG;;;;;;;;IAQpB,OAAO,EAAE,KAAK;IACd,kBAAkB,EAAE,KAAK;IACzB,UAAU,EAAE,IAAI;;;;;;;;IAQhB,KAAK,CAAC,OAAe,EAAE,UAAkB,EAAE,IAAsB,IAAU,OAAO,EAAE;;;;IAIpF,KAAK,KAAW,OAAO,EAAE;;;;;IAKzB,UAAU,CAAC,MAAoB,IAAU,OAAO,EAAE;;;;;IAKlD,QAAQ,CAAC,MAA2B,IAAU,OAAO,EAAE;IACvD,iBAAiB;;;;IAIjB,kBAAkB,KAAW,OAAO,EAAE;CACvC,CAAC;;AAaF,SAAS,iBAAiB,CAAC,eAAoD,IAAU,OAAO,EAAE;;ACelG;;;;;AAKA,IAAI,EAAE,gBAAgB,IAAI,OAAO,CAAC,EAAE;IAClC,OAAO,CAAC,cAAc,GAAG,UAAS,WAAgB,EAAE,MAAc;QAChE,OAAQ,MAAqB,CAAC,WAAW,CAAC,CAAC;KAC5C,CAAC;IAEF,OAAO,CAAC,QAAQ,GAAG,UAAS,WAAgB,EAAE,aAAkB;QAC9D,OAAO,UAAS,MAAgB;YAC7B,MAAqB,CAAC,WAAW,CAAC,GAAG,aAAa,CAAC;SACrD,CAAC;KAIH,CAAC;CACH;AASD,SAAS,eAAe,CAAC,GAAG,MAA0D;IACpF,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;QAC1B,OAAO,IAAI,SAAS,EAAE,CAAC;KACxB;SAAM;QACL,OAAO,IAAI,SAAS,EAAE,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,CAAC;KAC5C;CACF;AAED,MAAa,EAAE,GAAG;IAChB,eAAe;IAEf,mBAAmB,CAAC,MAAqB;QACvC,OAAO,OAAO,CAAC,cAAc,CAAC,mBAAmB,EAAE,MAAM,CAAC,IAAI,QAAQ,CAAC,UAAU,CAAC;KACnF;IAED,eAAe,CAAC,IAAgC;QAC9C,IAAI,YAA4B,CAAC;QAEjC,IAAK,IAAmB,CAAC,MAAM,KAAK,SAAS,EAAE;YAC7C,YAAY,GAAG,EAAE,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;SAC7C;aAAM;YACL,YAAY,GAAG,EAAE,CAAC;YAClB,IAAI,IAAI,GAAG,IAAkB,CAAC;YAE9B,OAAO,OAAO,IAAI,KAAK,UAAU,EAAE;gBACjC,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;oBACjC,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;iBACnC;gBAED,IAAI,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;aACpC;SACF;QAED,OAAO,YAAY,CAAC;KACrB;IAED,eAAe,CAAU,YAAqB;QAC5C,MAAM,SAAS,GAAwF,UAAS,MAAkB,EAAE,QAAgB,EAAE,KAAa;YACjK,IAAI,MAAM,KAAK,SAAS,EAAE;gBACxB,MAAM,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;aAC7D;YACD,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,SAAS,CAAC;YAC3D,OAAO,MAAM,CAAC;SACf,CAAC;QACF,SAAS,CAAC,YAAY,GAAG,YAAY,IAAI,WAAW,CAAC;QAErD,SAAS,CAAC,SAAS,GAAG;YACpB,OAAO,SAAS,CAAC;SAClB,CAAC;QAEF,SAAS,CAAC,WAAW,GAAG,UAAS,SAAsD;YACrF,SAAS,CAAC,WAAW,GAAG;gBACtB,MAAM,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;aACrC,CAAC;YAEF,SAAS,CAAC,QAAQ,GAAG,UAAS,SAAqB,EAAE,GAAY;gBAC/D,MAAM,OAAO,GAAG,GAAG,IAAI,SAAS,CAAC;gBACjC,OAAO,SAAS,CAAC;oBACf,QAAQ,CAAC,KAAQ;wBACf,OAAO,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,QAAQ,CAAC,OAAO,oBAA6B,KAAK,CAAC,CAAC,CAAC;qBACrG;oBACD,SAAS,CAAC,KAAoB;wBAC5B,OAAO,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,QAAQ,CAAC,OAAO,qBAA8B,KAAK,CAAC,CAAC,CAAC;qBACtG;oBACD,SAAS,CAAC,KAAoB;wBAC5B,OAAO,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,QAAQ,CAAC,OAAO,qBAA8B,KAAK,CAAC,CAAC,CAAC;qBACtG;oBACD,QAAQ,CAAC,KAAsB;wBAC7B,OAAO,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,QAAQ,CAAC,OAAO,oBAA6B,KAAK,CAAC,CAAC,CAAC;qBACrG;oBACD,OAAO,CAAC,cAAiB;wBACvB,OAAO,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,QAAQ,CAAC,OAAO,iBAA0B,cAAc,CAAC,CAAC,CAAC;qBAC3G;iBACF,CAAC,CAAC;aACJ,CAAC;YAEF,OAAO,SAAS,CAAC;SAClB,CAAC;QAEF,OAAO,SAAS,CAAC;KAClB;IAED,MAAM,CAAC,GAAG,YAAwB;QAChC,OAAO,UAAS,MAAkB,EAAE,GAAY,EAAE,UAAwC;YACxF,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;gBAClC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;oBACpC,MAAM,KAAK,GAAG,EAAE,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;oBAC7C,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,EAAqB,CAAC;iBAClD;gBAED,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC7B,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,YAAY,CAAC,CAAC,CAAkB,CAAC;iBAC9D;aACF;iBAAM,IAAI,GAAG,EAAE;gBACd,MAAM,YAAY,GAAG,MAAM,CAAC,WAAyB,CAAC;gBACtD,CAAC,YAAY,CAAC,MAAM,KAAM,YAAY,CAAC,MAAkB,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;aACzF;iBAAM,IAAI,UAAU,EAAE;gBACrB,MAAM,EAAE,GAAG,UAAU,CAAC,KAAK,CAAC;gBAC5B,EAAE,CAAC,MAAM,GAAG,YAAY,CAAC;aAC1B;iBAAM;gBACL,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC7B,MAAM,KAAK,GAAG,EAAE,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;oBAC7C,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,EAAqB,CAAC;iBAClD;qBAAM;oBACL,MAAM,CAAC,MAAM,GAAG,YAA+B,CAAC;iBACjD;aACF;SACF,CAAC;KACH;;;;;;;;;;;;;;;;;;;;;;IAuBD,SAAS,CAA0B,MAAoC;QACrE,MAAM,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAC,SAAqB;YACvD,MAAM,YAAY,GAAG,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAC5D,OAAO,YAAY,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;SACjD,CAAC;QACF,OAAO,MAA6B,CAAC;KACtC;;;;;;;;;;;;;;;;;;;;;IAsBD,SAAS,CAA0B,MAAoC;QACrE,MAAM,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAC,SAAqB;YACvD,MAAM,YAAY,GAAG,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAC5D,OAAO,YAAY,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;SACjD,CAAC;QACF,OAAO,MAA6B,CAAC;KACtC;CACF,CAAC;AAEF,MAAa,UAAU,GAAG,EAAE,CAAC,eAAe,CAAa,YAAY,CAAC,CAAC,SAAS,EAAE,CAAC;AACnF,MAAa,eAAe,GAAG,UAA8C,CAAC;AAE9E,SAAS,cAAc,CAAC,MAAyE;IAC/F,OAAO,UAAS,GAAY;QAC1B,MAAM,QAAQ,GAA8D,UAAU,MAAkB,EAAE,QAAiB,EAAE,UAAwC;YACnK,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;SACnD,CAAC;QAEF,QAAQ,CAAC,OAAO,GAAG,UAAS,OAAmB,EAAE,SAAqB;YACpE,OAAO,MAAM,CAAC,GAAG,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;SACxC,CAAC;QAEF,OAAO,QAAQ,CAAC;KACjB,CAAC;CACH;AAED,MAAa,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;AAEhC,SAAS,kBAAkB,CAA0B,MAAoC;IACvF,OAAO,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;CAC7B;AA6BD,SAAgB,SAAS,CAA0B,MAAqC;IACtF,OAAO,MAAM,KAAK,SAAS,GAAG,kBAAkB,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;CAC/E;AAED,SAAS,kBAAkB,CAA0B,MAAoC;IACvF,OAAO,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;CAC7B;AA6BD,SAAgB,SAAS,CAA0B,MAAqC;IACtF,OAAO,MAAM,KAAK,SAAS,GAAG,kBAAkB,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;CAC/E;AAED,MAAa,GAAG,GAAG,cAAc,CAAC,CAAC,GAAY,EAAE,OAAmB,EAAE,SAAqB,KAAK,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AAEvH,MAAa,IAAI,GAAG,cAAc,CAAC,CAAC,GAAY,EAAE,OAAmB,EAAE,SAAqB;IAC1F,IAAI,QAAQ,GAAY,IAAI,CAAC;IAC7B,OAAO;QACL,IAAI,QAAQ,KAAK,IAAI,EAAE;YACrB,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAC/B;QAED,OAAO,QAAQ,CAAC;KACjB,CAAC;CACH,CAAC,CAAC;AAEH,MAAa,QAAQ,GAAG,cAAc,CAAC,CAAC,GAAY,EAAE,OAAmB,EAAE,SAAqB;IAC9F,IAAI,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;QAC5B,OAAO,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAC3B;SAAM;QACL,OAAO,IAAI,CAAC;KACb;CACF,CAAC,CAAC;;AAGH,AAAA,IAAkB,gBAOjB;AAPD,WAAkB,gBAAgB;IAChC,+DAAY,CAAA;IACZ,iEAAa,CAAA;IACb,iEAAa,CAAA;IACb,+DAAY,CAAA;IACZ,yDAAS,CAAA;IACT,yDAAS,CAAA;CACV,EAPiB,gBAAgB,KAAhB,gBAAgB,QAOjC;;AAGD,MAAa,QAAQ;IAInB,YAAY,GAAiB,EAAE,QAA0B,EAAE,KAAc;QACvE,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IAEM,QAAQ,CAAC,SAAqB,EAAE,GAAkB;QACvD,OAAO,SAAS,CAAC,gBAAgB,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KAC1D;IAEM,OAAO,CAAC,OAAmB,EAAE,SAAqB;QACvD,QAAQ,IAAI,CAAC,QAAQ;YACnB;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC;YACpB,wBAAiC;gBAC/B,IAAI,CAAC,QAAQ,oBAA6B;gBAC1C,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,KAAsB,CAAC,CAAC;gBAChE,OAAO,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;aAChD;YACD,wBAAiC;;gBAE/B,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,KAAsB,CAAC,CAAC;gBAChE,OAAO,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;aACrC;YACD;gBACE,OAAQ,IAAI,CAAC,KAAyB,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;YACnE;gBACE,OAAQ,IAAI,CAAC,KAAqB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YACpE;gBACE,OAAO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjC;gBACE,MAAM,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC1C;KACF;IAEM,UAAU,CAAC,SAAqB;QACrC,QAAQ,IAAI,CAAC,QAAQ;YACnB,uBAAgC;YAChC;gBACE,OAAO,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,KAAsB,CAAC,CAAC;YAC3D;gBACE,OAAO,IAAI,CAAC;SACf;KACF;CACF;;AAcD,MAAa,OAAO;IAMlB,YAAY,IAAmB,EAAE,OAAiB,EAAE,YAA4B;QAC9E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;KAC1B;IAEM,OAAO,MAAM,CAAC,IAAmB;QACtC,MAAM,YAAY,GAAG,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QAC9C,MAAM,OAAO,GAAG,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,eAAe,CAAC;QACtE,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;KACjD;IAEM,SAAS,CAAC,SAAqB,EAAE,mBAAoC;QAE1E,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,QAAQ,GAAG,mBAAmB,KAAK,SAAS;cAC5C,IAAI,CAAC,OAAO,CAAC,6BAA6B,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,EAAE,mBAAmB,CAAC;cACxG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAEjE,IAAI,YAAY,KAAK,IAAI,EAAE;YAEzB,OAAO,QAAQ,CAAC;SACjB;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YACrD,QAAQ,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;SACtC;QAGD,OAAO,QAAQ,CAAC;KACjB;IAEM,mBAAmB,CAAC,WAAmC;QAC5D,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;YAC9B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SACxB;QAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC;KACb;CACF;AAQD,MAAM,iBAAiB,GAAc;IACnC,OAAO,CAAC,OAAmB,EAAE,SAAqB;QAChD,OAAO,SAAS,CAAC;KAClB;CACF,CAAC;AAEF,SAAS,UAAU,CAAC,GAA0C;IAC5D,OAAO,OAAO,GAAG,CAAC,QAAQ,KAAK,UAAU,CAAC;CAC3C;AAED,SAAS,OAAO,CAAoC,GAAM;IACxD,OAAO,GAAG,CAAC,SAAS,KAAK,SAAS,CAAC;CACpC;;AAGD,MAAa,SAAS;IAQpB,YAAY,gBAAyC,EAAE;QACrD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAA0C,CAAC;QACnE,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,SAAS,KAAK,aAAa,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;QAClF,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC,cAAc,KAAK,aAAa,CAAC,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3G,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE,iBAAiB,CAAC,CAAC;KACnD;IAQM,QAAQ,CAAC,GAAG,MAA0D;QAE3E,IAAI,EAAE,IAAI,CAAC,aAAa,KAAK,GAAG,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;;;;SAItD;QACD,IAAI,OAA8C,CAAC;QACnD,IAAI,IAAc,CAAC;QACnB,IAAI,KAAgB,CAAC;QACrB,IAAI,CAAS,CAAC;QACd,IAAI,EAAU,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YAC/C,OAAO,GAAG,MAAM,CAAC,CAAC,CAA0C,CAAC;YAC7D,IAAI,UAAU,CAAC,OAAO,CAAC,EAAE;gBACvB,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACxB;iBAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC3B,YAAY,CAAC,SAAS,CAAC,OAAO,EAAE,OAAwB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aAC1E;iBAAM;gBACL,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC5B,CAAC,GAAG,CAAC,CAAC;gBACN,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;gBACjB,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;oBAClB,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;;oBAGzB,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;wBACrB,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;qBACtB;yBAAM;wBACL,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;qBACtB;iBACF;aACF;SACF;QACD,EAAE,IAAI,CAAC,aAAa,CAAC;QAErB,OAAO,IAAI,CAAC;KACb;IAEM,gBAAgB,CAAC,GAAoB,EAAE,QAAmB;QAC/D,WAAW,CAAC,GAAG,CAAC,CAAC;QAEjB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,GAAkC,CAAC,CAAC;QAEjE,IAAI,MAAM,KAAK,SAAS,EAAE;YACxB,SAAS,CAAC,GAAG,CAAC,GAAkC,EAAE,QAAQ,CAAC,CAAC;YAC5D,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;gBAC3B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;aACrC;SACF;aAAM,IAAI,MAAM,YAAY,QAAQ,IAAI,MAAM,CAAC,QAAQ,oBAA6B;YAClF,MAAM,CAAC,KAAqB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC9C;aAAM;YACL,SAAS,CAAC,GAAG,CAAC,GAAkC,EAAE,IAAI,QAAQ,CAAC,GAAG,iBAA0B,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;SAClH;QAED,OAAO,QAAQ,CAAC;KACjB;IAEM,mBAAmB,CAAC,GAAc,EAAE,WAAmC;QAC5E,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAEvC,IAAI,QAAQ,KAAK,IAAI,EAAE;YACrB,OAAO,KAAK,CAAC;SACd;QAED,IAAI,QAAQ,CAAC,UAAU,EAAE;YACvB,MAAM,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAE1C,IAAI,OAAO,KAAK,IAAI,EAAE;gBACpB,OAAO,KAAK,CAAC;aACd;YAED,OAAO,OAAO,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;SACjD;QAED,OAAO,KAAK,CAAC;KACd;IAEM,WAAW,CAAC,GAAgC,EAAE,eAAwB,IAAI;QAC/E,WAAW,CAAC,GAAG,CAAC,CAAC;QAEjB,IAAK,GAAiB,CAAC,OAAO,EAAE;YAC9B,OAAO,GAAgB,CAAC;SACzB;QAED,IAAI,OAAO,GAAc,IAAI,CAAC;QAC9B,IAAI,QAAmB,CAAC;QAExB,OAAO,OAAO,KAAK,IAAI,EAAE;YACvB,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,GAAkC,CAAC,CAAC;YAErE,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC1B,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,EAAE;oBAC3B,OAAO,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,GAAkC,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC;iBAC5F;gBAED,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;aAC1B;iBAAM;gBACL,OAAO,QAAQ,CAAC;aACjB;SACF;QAED,OAAO,IAAI,CAAC;KACb;IAEM,GAAG,CAAC,GAAoB,EAAE,kBAA2B,KAAK;QAC/D,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAkC,CAAC;cACzD,IAAI;cACJ,eAAe,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI;kBACvC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC;kBAC1B,KAAK,CAAC;KACX;IAEM,GAAG,CAAC,GAA8B;QAEvC,WAAW,CAAC,GAAG,CAAC,CAAC;QAEjB,IAAK,GAAiB,CAAC,OAAO,EAAE;YAE9B,OAAQ,GAAiB,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SAC/C;QAED,IAAI,OAAO,GAAc,IAAI,CAAC;QAC9B,IAAI,QAAmB,CAAC;QAExB,OAAO,OAAO,KAAK,IAAI,EAAE;YACvB,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,GAAkC,CAAC,CAAC;YAErE,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC1B,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI,EAAE;oBAC3B,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,GAAkC,EAAE,OAAO,CAAC,CAAC;oBAEzE,OAAO,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;iBACxC;gBAED,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;aAC1B;iBAAM;gBAEL,OAAO,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aACxC;SACF;KACF;IAEM,MAAM,CAAC,GAAoB;QAEhC,WAAW,CAAC,GAAG,CAAC,CAAC;QAEjB,IAAI,OAAO,GAAqB,IAAI,CAAC;QACrC,IAAI,QAAmB,CAAC;QAExB,OAAO,OAAO,KAAK,IAAI,EAAE;YACvB,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,GAAkC,CAAC,CAAC;YAErE,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC1B,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,EAAE;oBAExB,OAAO,QAAQ,CAAC,UAAU,CAAC;iBAC5B;gBAED,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;aAC1B;iBAAM;gBAEL,OAAO,gBAAgB,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;aAClD;SACF;QAGD,OAAO,QAAQ,CAAC,UAAU,CAAC;KAC5B;IAEM,UAAU,CAAC,IAAmB;QACnC,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEvC,IAAI,OAAO,KAAK,SAAS,EAAE;YACzB,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SACnC;QAED,OAAO,OAAO,CAAC;KAChB;IAEM,WAAW;QAEhB,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;QAClC,MAAM,WAAW,GAAG,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,cAAc,oBAAO,MAAM,CAAC,cAAc,CAAE,EAAE,CAAC;QAClG,MAAM,KAAK,GAAG,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC;QACzC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;QAEpB,OAAO,KAAK,CAAC;KACd;IAEO,WAAW,CAAC,UAAyC,EAAE,OAAkB;QAC/E,IAAK,UAA4B,CAAC,QAAQ,EAAE;YAC1C,MAAM,oBAAoB,GAAI,UAA4B,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;YACzF,IAAI,EAAE,oBAAoB,IAAI,oBAAoB,CAAC,OAAO,CAAC,EAAE;gBAC3D,MAAM,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC1B;YACD,OAAO,oBAAoB,CAAC;SAC7B;QAED,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,UAAU,qBAA8B,UAAU,CAAC,CAAC;QAClF,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,UAAyC,EAAE,QAAQ,CAAC,CAAC;QAC3E,OAAO,QAAQ,CAAC;KACjB;CACF;AAED,MAAa,YAAY,GAAG;IAC1B,QAAQ,CAAC,GAAiB,EAAE,KAAc;QACxC,OAAO,IAAI,QAAQ,CAAC,GAAG,oBAA6B,KAAK,CAAC,CAAC;KAC5D;IAED,SAAS,CAAC,GAAiB,EAAE,KAAoB;QAC/C,OAAO,IAAI,QAAQ,CAAC,GAAG,qBAA8B,KAAK,CAAC,CAAC;KAC7D;IAED,SAAS,CAAC,GAAiB,EAAE,KAAoB;QAC/C,OAAO,IAAI,QAAQ,CAAC,GAAG,qBAA8B,KAAK,CAAC,CAAC;KAC7D;IAED,QAAQ,CAAC,GAAiB,EAAE,QAAyB;QACnD,OAAO,IAAI,QAAQ,CAAC,GAAG,oBAA6B,QAAQ,CAAC,CAAC;KAC/D;IAED,KAAK,CAAC,WAAyB,EAAE,QAAsB;QACrD,OAAO,IAAI,QAAQ,CAAC,QAAQ,iBAA0B,WAAW,CAAC,CAAC;KACpE;IAED,SAAS,CAAC,cAAuB,EAAE,GAAG,IAAqB;QACzD,OAAO;YACL,QAAQ,CAAC,SAAqB;gBAC5B,MAAM,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAY,cAAc,CAAC,CAAC;gBAElE,IAAI,QAAQ,KAAK,IAAI,EAAE;oBACrB,IAAI,QAAQ,GAAsB,IAAI,CAAC;oBAEvC,IAAI,QAAQ,CAAC,UAAU,EAAE;wBACvB,MAAM,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;wBAE/C,IAAI,OAAO,KAAK,IAAI,EAAE;4BACpB,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;yBAC/C;qBACF;yBAAM;wBACL,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;qBACnD;oBAED,IAAI,QAAQ,KAAK,IAAI,EAAE;wBACrB,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;qBAC9B;iBACF;aACF;SACF,CAAC;KACH;CACF,CAAC;;AAGF,SAAgB,WAAW,CAAC,GAAY;;;IAGtC,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,MAAM,EAAE;QACvD,MAAM,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACzB;CACF;AAED,SAAS,gBAAgB,CAAC,QAAmB,EAAE,OAAmB,EAAE,SAAqB;IACvF,IAAI,QAAQ,YAAY,QAAQ,IAAI,QAAQ,CAAC,QAAQ,oBAA6B;QAChF,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAoB,CAAC;QAC5C,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;QACrB,MAAM,OAAO,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;QAE7B,OAAO,CAAC,EAAE,EAAE;YACV,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;SACnD;QAED,OAAO,OAAO,CAAC;KAChB;IAED,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;CAC/C;;AAGD,AAAO,MAAM,aAAa,GAAe;IACvC;QACE,MAAM,CAAI,SAAqB,EAAE,IAAsB;YACrD,OAAO,IAAI,IAAI,EAAE,CAAC;SACnB;QACD,6BAA6B;KAC9B;IACD;QACE,MAAM,CAAI,SAAqB,EAAE,IAAsB,EAAE,IAAoB;YAC3E,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACzC;QACD,6BAA6B;KAC9B;IACD;QACE,MAAM,CAAI,SAAqB,EAAE,IAAsB,EAAE,IAAoB;YAC3E,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE;QACD,6BAA6B;KAC9B;IACD;QACE,MAAM,CAAI,SAAqB,EAAE,IAAsB,EAAE,IAAoB;YAC3E,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACzF;QACD,6BAA6B;KAC9B;IACD;QACE,MAAM,CAAI,SAAqB,EAAE,IAAsB,EAAE,IAAoB;YAC3E,OAAO,IAAI,IAAI,CACb,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EACtB,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EACtB,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EACtB,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACvB,CAAC;SACH;QACD,6BAA6B;KAC9B;IACD;QACE,MAAM,CAAI,SAAqB,EAAE,IAAsB,EAAE,IAAoB;YAC3E,OAAO,IAAI,IAAI,CACb,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EACtB,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EACtB,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EACtB,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EACtB,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACvB,CAAC;SACH;QACD,6BAA6B;KAC9B;CACF,CAAC;;AAGF,AAAO,MAAM,eAAe,GAAa;IACvC,MAAM,EAAE,6BAA0H;IAClI,6BAA6B;CAC9B,CAAC;;AAGF,SAAgB,6BAA6B,CAC3C,SAAqB,EACrB,IAAsB,EACtB,kBAAkC,EAClC,mBAAmC;IAEnC,IAAI,CAAC,GAAG,kBAAkB,CAAC,MAAM,CAAC;IAClC,IAAI,IAAI,GAAmB,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IACxC,IAAI,MAAoB,CAAC;IAEzB,OAAO,CAAC,EAAE,EAAE;QACV,MAAM,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;QAE/B,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE;YAC3C,MAAM,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;SACxC;aAAM;YACL,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SACjC;KACF;IAED,IAAI,mBAAmB,KAAK,SAAS,EAAE;QACrC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;KACzC;IAED,OAAO,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;CACtC;;ACh6BD,SAAS,QAAQ,CAAC,GAAa;IAC7B,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;IACvB,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,IAAY,CAAC;IACjB,OAAO,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;QACnB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QACd,IAAI,IAAI,KAAK,GAAG,EAAE;YAChB,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjB,CAAC,IAAI,CAAC,CAAC;SACR;aAAM,IAAI,IAAI,KAAK,IAAI,EAAE;;;;;;YAMxB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;gBAClE,SAAS;aACV;YACD,IAAI,CAAC,GAAG,CAAC,EAAE;gBACT,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;gBACrB,CAAC,IAAI,CAAC,CAAC;aACR;SACF;KACF;CACF;;;;;;;;AASD,SAAgB,cAAc,CAAC,IAAY,EAAE,IAAY;IACvD,MAAM,SAAS,GAAG,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAEzC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,SAAS,EAAE;;;;;;QAM/C,MAAM,mBAAmB,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACrE,SAAS,CAAC,OAAO,CAAC,GAAG,mBAAmB,CAAC,CAAC;KAC3C;IAED,QAAQ,CAAC,SAAS,CAAC,CAAC;IAEpB,OAAO,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC5B;;;;;;;;AASD,SAAgB,IAAI,CAAC,KAAa,EAAE,KAAa;IAC/C,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,KAAK,CAAC;KACd;IACD,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,KAAK,CAAC;KACd;IACD,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;IAChD,MAAM,MAAM,GAAG,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC7E,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAEnC,IAAI,SAAiB,CAAC;IACtB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,MAAM,KAAK,OAAO,EAAE;QACpD,SAAS,GAAG,KAAK,CAAC;KACnB;SAAM,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QACpC,SAAS,GAAG,IAAI,CAAC;KAClB;SAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QACnC,SAAS,GAAG,GAAG,CAAC;KACjB;SAAM;QACL,SAAS,GAAG,EAAE,CAAC;KAChB;IAED,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;IAEzD,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9B,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9B,MAAM,IAAI,GAAG,EAAE,CAAC;IAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;QAC7C,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;YACpB,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;aAAM,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;YAC5C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACpB;KACF;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;QAC7C,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;YACpB,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;aAAM,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;YAC5C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACpB;KACF;IAED,OAAO,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,aAAa,CAAC;CAC5D;AAED,MAAM,MAAM,GAAG,kBAAkB,CAAC;AAClC,MAAM,SAAS,GAAG,CAAC,CAAS,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;;;;;;;;;AAkB/D,SAAS,UAAU,CAAC,GAAW,EAAE,KAAyB,EAAE,WAAqB;IAC/E,IAAI,MAAM,GAAa,EAAE,CAAC;IAC1B,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;QACzC,OAAO,MAAM,CAAC;KACf;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACxB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,WAAW,EAAE;gBACf,MAAM,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAW,CAAC,EAAE,CAAC,CAAC;aAChE;iBAAM;gBACL,MAAM,QAAQ,GAAG,GAAG,GAAG,KAAK,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC;gBAC3F,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACxD;SACF;KACF;SAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,WAAW,EAAE;QACpD,KAAK,MAAM,YAAY,IAAI,KAAK,EAAE;YAChC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,GAAG,IAAI,YAAY,GAAG,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;SACpF;KACF;SAAM;QACL,MAAM,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,KAAe,CAAC,EAAE,CAAC,CAAC;KAC7D;IACD,OAAO,MAAM,CAAC;CACf;;;;;;;;AASD,SAAgB,gBAAgB,CAAC,MAAqB,EAAE,WAAqB;IAC3E,IAAI,KAAK,GAAa,EAAE,CAAC;IACzB,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;IAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC/C,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;KACjE;IAED,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACtB,OAAO,EAAE,CAAC;KACX;IAED,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CACxB;;;;;;;;AASD,SAAS,kBAAkB,CAAC,YAA+B,EAAE,KAA4B;IACvF,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;;QAE/B,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,OAAO,YAAY,CAAC;KACrB;IACD,IAAI,YAAY,KAAK,SAAS,EAAE;;;QAG9B,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;KAC9B;;IAED,OAAO,KAAK,CAAC;CACd;;;;;;;;;;AAUD,SAAS,iBAAiB,CAAC,WAAyB,EAAE,IAAyB,EAAE,KAAa;IAC5F,IAAI,aAAa,GAAsB,WAAW,CAAC;IACnD,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,aAAa,EAAE,CAAC,EAAE,EAAE;QACvC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,GAAG,aAAa,EAAE;;;YAGrB,MAAM,SAAS,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,OAAO,aAAa,CAAC,GAAG,CAAC,KAAK,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5H,aAAa,GAAG,aAAa,CAAC,GAAG,CAAC,GAAG,SAAS,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAW,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;SAC5F;aAAM;YACL,aAAa,GAAG,aAAa,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;SAC5C;KACF;CACF;;;;;;;AAQD,SAAgB,gBAAgB,CAAC,WAAmB;IAClD,MAAM,WAAW,GAAiB,EAAE,CAAC;IACrC,IAAI,CAAC,WAAW,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE;QACnD,OAAO,WAAW,CAAC;KACpB;IAED,IAAI,KAAK,GAAG,WAAW,CAAC;IACxB,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QAC3B,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACxB;IAED,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACjC,MAAM,GAAG,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACxC,IAAI,CAAC,GAAG,EAAE;YACR,SAAS;SACV;;QAED,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;;;;QAKpC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE;YACzD,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC7D,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5C,aAAa,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACjC;aAAM;YACL,aAAa,GAAG,CAAC,CAAC;SACnB;QAED,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;YACpB,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YACzD,IAAI,aAAa,EAAE;gBACjB,iBAAiB,CAAC,WAAW,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;aAC7C;iBAAM;gBACL,WAAW,CAAC,GAAG,CAAC,GAAG,kBAAkB,CAAC,WAAW,CAAC,GAAG,CAAsB,EAAE,KAAK,CAAC,CAAC;aACrF;SACF;aAAM;YACL,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;SACzB;KACF;IACD,OAAO,WAAW,CAAC;CACpB;;MC9PY,QAAQ,GAAG,CAAC;IAOvB,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;IACzB,MAAM,MAAM,GAAa,EAAE,CAAC;IAC5B,IAAI,UAAoC,CAAC;IAEzC,MAAM,QAAQ,GAAG;QACf,WAAW;QACX,MAAM;QACN,OAAO;QACP,MAAM;QACN,OAAO,EAAE,KAAK;KACf,CAAC;IACF,OAAO,QAAQ,CAAC;IAEhB,SAAS,WAAW,CAAC,IAAY;QAC/B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,IAAI,GAAG,CAAC,CAAC;QAEb,OAAO;YACL,KAAK;YACL,KAAK;SACN,CAAC;QAEF,SAAS,KAAK;YACZ,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;gBACjB,IAAI,GAAG,GAAG,EAAE,CAAC;gBACb,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC;aAClC;YACD,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC;SAC/B;QACD,SAAS,KAAK;YACZ,IAAI,EAAE,KAAK,KAAK,CAAC,EAAE;gBACjB,UAAU,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;aAC7C;SACF;KACF;IAED,SAAS,MAAM;QACb,UAAU,GAAG,EAAE,CAAC;QAChB,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YAC1B,UAAU,CAAC,KAAK,CAAC,GAAG;gBAClB,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,CAAC;gBACX,aAAa,EAAE,CAAC;gBAChB,UAAU,EAAE,CAAC;aACd,CAAC;SACH;QACD,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC;KACzB;IAED,SAAS,OAAO;QACd,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;KAC1B;IAED,SAAS,MAAM,CAAC,EAAuF;QACrG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;YACnG,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC;SACvD,CAAC,CAAC;KACJ;CACF,GAAG;;MCjDS,2BAA2B;IAGtC,YAAY,OAAmB;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;IAEM,IAAI,CAAe,IAAiC,EAAE,IAAY;QACvE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,cAAc,GAAI,IAAI,CAAC,OAAoE,CAAC,cAAc,CAAC;QACjH,IAAI,QAAQ,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC1B,QAAQ,GAAG,cAAc,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SACvE;QAED,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,CAAC,UAAU,EAAE;YAC5C,MAAM,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAElD,IAAI,OAAO,KAAK,IAAI,EAAE;gBACpB,MAAM,WAAW,GAAI,OAAO,CAAC,IAAoC,CAAC,WAAW,CAAC;gBAC9E,OAAO,WAAW,KAAK,SAAS,GAAG,IAAI,GAAG,WAAW,CAAC;aACvD;SACF;QAED,OAAO,IAAI,CAAC;KACb;IAEM,MAAM,CAAe,IAAiC,EAAE,IAAY;QACzE,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,MAAM,cAAc,GAAI,IAAI,CAAC,OAAoE,CAAC,cAAc,CAAC;QACjH,IAAI,QAAQ,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;QACnC,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC1B,QAAQ,GAAG,cAAc,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;SACvE;QACD,IAAI,QAAQ,KAAK,IAAI,EAAE;YACrB,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9D,OAAO,QAAQ,KAAK,SAAS,GAAG,IAAI,GAAG,QAAQ,CAAC;SACjD;QACD,OAAO,IAAI,CAAC;KACb;CACF;;ACnED;;;AAGA,MAAM,OAAO;IAMX,YAAY,WAA0B,EAAE,QAAiC;QACvE,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;IAEM,MAAM,CAAC,OAAoC;QAChD,IAAI,OAAO,YAAY,IAAI,CAAC,WAAW,EAAE;YACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SACnC;KACF;CACF;AAED,SAAS,cAAc,CAAC,QAAiC,EAAE,IAAa,EAAE,KAAa;IACrF,IAAI;QACF,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KACvB;IAAC,OAAO,CAAC,EAAE;QACV,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACtB;CACF;AAED,SAAS,aAAa,CAAC,OAAgB,EAAE,IAAiC;IACxE,IAAI;QACF,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACtB;IAAC,OAAO,CAAC,EAAE;QACV,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACtB;CACF;;;;AAeD,MAAa,eAAe;;;;IAS1B;QACE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;KAC3B;IAaM,OAAO,CAAC,iBAAuD,EAAE,IAAc;QACpF,IAAI,WAAkD,CAAC;QACvD,IAAI,CAAS,CAAC;QAEd,IAAI,CAAC,iBAAiB,EAAE;YACtB,MAAM,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACzB;QAED,IAAI,OAAO,iBAAiB,KAAK,QAAQ,EAAE;YACzC,MAAM,OAAO,GAAW,iBAAiB,CAAC;YAC1C,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACxC,IAAI,WAAW,EAAE;gBACf,WAAW,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC;gBAClC,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC;gBAEvB,OAAO,CAAC,EAAE,EAAE;oBACV,cAAc,CAAC,WAAW,CAAC,CAAC,CAA4B,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;iBAC1E;aACF;SACF;aAAM;YACL,MAAM,QAAQ,GAAgC,iBAAiB,CAAC;YAChE,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;YAC3C,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC;YAEvB,OAAO,CAAC,EAAE,EAAE;gBACV,aAAa,CAAC,WAAW,CAAC,CAAC,CAAY,EAAE,QAAQ,CAAC,CAAC;aACpD;SACF;KACF;IAcM,SAAS,CAA0B,aAAyB,EAAE,QAAsD;QACzH,IAAI,OAA0C,CAAC;QAC/C,IAAI,WAAkD,CAAC;QAEvD,IAAI,CAAC,aAAa,EAAE;YAClB,MAAM,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACzB;QAED,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;YACrC,MAAM,OAAO,GAAW,aAAa,CAAC;YACtC,OAAO,GAAG,QAAQ,CAAC;YACnB,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;SAC7E;aAAM;YACL,MAAM,IAAI,GAAM,aAAa,CAAC;YAC9B,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACtC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC;SACpC;QAED,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAE1B,OAAO;YACL,OAAO;gBACL,MAAM,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBACzC,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE;oBACd,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;iBAC5B;aACF;SACF,CAAC;KACH;IAcM,aAAa,CAA0B,aAAyB,EAAE,QAAsD;QAC7H,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,aAAkB,EAAE,CAAC,IAAQ,EAAE,KAAc;YACtE,GAAG,CAAC,OAAO,EAAE,CAAC;YACd,OAAO,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SAC9B,CAAC,CAAC;QAEH,OAAO,GAAG,CAAC;KACZ;CACF;;;;"}