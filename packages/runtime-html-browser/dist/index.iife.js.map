{"version":3,"file":"index.iife.js","sources":["../src/index.ts"],"sourcesContent":["import { DI, IContainer, IRegistry, IResolver, Key, Registration } from '@aurelia/kernel';\nimport { IDOM, IDOMInitializer, ISinglePageApp } from '@aurelia/runtime';\nimport { BasicConfiguration as RuntimeHtmlConfiguration, HTMLDOM } from '@aurelia/runtime-html';\n\nclass BrowserDOMInitializer implements IDOMInitializer {\n  public static readonly inject: readonly Key[] = [IContainer];\n\n  private readonly container: IContainer;\n\n  constructor(container: IContainer) {\n    this.container = container;\n  }\n\n  public static register(container: IContainer): IResolver<IDOMInitializer> {\n    return Registration.singleton(IDOMInitializer, this).register(container);\n  }\n\n  public initialize(config?: ISinglePageApp<Node>): IDOM {\n    if (this.container.has(IDOM, false)) {\n      return this.container.get(IDOM);\n    }\n    let dom: IDOM;\n    if (config !== undefined) {\n      if (config.dom !== undefined) {\n        dom = config.dom;\n      } else if (config.host.ownerDocument !== null) {\n        dom = new HTMLDOM(\n          window,\n          config.host.ownerDocument,\n          Node,\n          Element,\n          HTMLElement,\n          CustomEvent\n        );\n      } else {\n        dom = new HTMLDOM(\n          window,\n          document,\n          Node,\n          Element,\n          HTMLElement,\n          CustomEvent\n        );\n      }\n    } else {\n      dom = new HTMLDOM(\n        window,\n        document,\n        Node,\n        Element,\n        HTMLElement,\n        CustomEvent\n      );\n    }\n    Registration.instance(IDOM, dom).register(this.container);\n    return dom;\n  }\n}\n\nexport const IDOMInitializerRegistration = BrowserDOMInitializer as IRegistry;\n\n/**\n * Default HTML-specific, browser-specific implementations for the following interfaces:\n * - `IDOMInitializer`\n */\nexport const DefaultComponents = [\n  IDOMInitializerRegistration\n];\n\n/**\n * A DI configuration object containing html-specific, browser-specific registrations:\n * - `BasicConfiguration` from `@aurelia/runtime-html`\n * - `DefaultComponents`\n */\nexport const BasicConfiguration = {\n  /**\n   * Apply this configuration to the provided container.\n   */\n  register(container: IContainer): IContainer {\n    return RuntimeHtmlConfiguration\n      .register(container)\n      .register(...DefaultComponents);\n  },\n  /**\n   * Create a new container with this configuration applied to it.\n   */\n  createContainer(): IContainer {\n    return this.register(DI.createContainer());\n  }\n};\n"],"names":["Registration","IDOMInitializer","IDOM","HTMLDOM","IContainer","RuntimeHtmlConfiguration","DI"],"mappings":";;;;EAIA,MAAM,qBAAqB;MAKzB,YAAY,SAAqB;UAC/B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;OAC5B;MAEM,OAAO,QAAQ,CAAC,SAAqB;UAC1C,OAAOA,mBAAY,CAAC,SAAS,CAACC,uBAAe,EAAE,IAAI,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;OAC1E;MAEM,UAAU,CAAC,MAA6B;UAC7C,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAACC,YAAI,EAAE,KAAK,CAAC,EAAE;cACnC,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAACA,YAAI,CAAC,CAAC;WACjC;UACD,IAAI,GAAS,CAAC;UACd,IAAI,MAAM,KAAK,SAAS,EAAE;cACxB,IAAI,MAAM,CAAC,GAAG,KAAK,SAAS,EAAE;kBAC5B,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;eAClB;mBAAM,IAAI,MAAM,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,EAAE;kBAC7C,GAAG,GAAG,IAAIC,mBAAO,CACf,MAAM,EACN,MAAM,CAAC,IAAI,CAAC,aAAa,EACzB,IAAI,EACJ,OAAO,EACP,WAAW,EACX,WAAW,CACZ,CAAC;eACH;mBAAM;kBACL,GAAG,GAAG,IAAIA,mBAAO,CACf,MAAM,EACN,QAAQ,EACR,IAAI,EACJ,OAAO,EACP,WAAW,EACX,WAAW,CACZ,CAAC;eACH;WACF;eAAM;cACL,GAAG,GAAG,IAAIA,mBAAO,CACf,MAAM,EACN,QAAQ,EACR,IAAI,EACJ,OAAO,EACP,WAAW,EACX,WAAW,CACZ,CAAC;WACH;UACDH,mBAAY,CAAC,QAAQ,CAACE,YAAI,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;UAC1D,OAAO,GAAG,CAAC;OACZ;;EAnDsB,4BAAM,GAAmB,CAACE,iBAAU,CAAC,CAAC;AAsD/D,QAAa,2BAA2B,GAAG,qBAAkC,CAAC;EAE9E;;;;AAIA,QAAa,iBAAiB,GAAG;MAC/B,2BAA2B;GAC5B,CAAC;EAEF;;;;;AAKA,QAAa,kBAAkB,GAAG;;;;MAIhC,QAAQ,CAAC,SAAqB;UAC5B,OAAOC,8BAAwB;eAC5B,QAAQ,CAAC,SAAS,CAAC;eACnB,QAAQ,CAAC,GAAG,iBAAiB,CAAC,CAAC;OACnC;;;;MAID,eAAe;UACb,OAAO,IAAI,CAAC,QAAQ,CAACC,SAAE,CAAC,eAAe,EAAE,CAAC,CAAC;OAC5C;GACF;;;;;;;;;;;;"}