{"version":3,"file":"index.iife.js","sources":["../src/binding/unparser.ts","../src/reporter.ts","../src/tracer.ts","../src/configuration.ts"],"sourcesContent":["import { Unwrap } from '@aurelia/kernel';\nimport * as AST from '@aurelia/runtime';\n\nconst astTypeMap = [\n  { type: AST.AccessKeyed, name: 'AccessKeyed' },\n  { type: AST.AccessMember, name: 'AccessMember' },\n  { type: AST.AccessScope, name: 'AccessScope' },\n  { type: AST.AccessThis, name: 'AccessThis' },\n  { type: AST.ArrayBindingPattern, name: 'ArrayBindingPattern' },\n  { type: AST.ArrayLiteral, name: 'ArrayLiteral' },\n  { type: AST.Assign, name: 'Assign' },\n  { type: AST.Binary, name: 'Binary' },\n  { type: AST.BindingBehavior, name: 'BindingBehavior' },\n  { type: AST.BindingIdentifier, name: 'BindingIdentifier' },\n  { type: AST.CallFunction, name: 'CallFunction' },\n  { type: AST.CallMember, name: 'CallMember' },\n  { type: AST.CallScope, name: 'CallScope' },\n  { type: AST.Conditional, name: 'Conditional' },\n  { type: AST.ForOfStatement, name: 'ForOfStatement' },\n  { type: AST.HtmlLiteral, name: 'HtmlLiteral' },\n  { type: AST.Interpolation, name: 'Interpolation' },\n  { type: AST.ObjectBindingPattern, name: 'ObjectBindingPattern' },\n  { type: AST.ObjectLiteral, name: 'ObjectLiteral' },\n  { type: AST.PrimitiveLiteral, name: 'PrimitiveLiteral' },\n  { type: AST.TaggedTemplate, name: 'TaggedTemplate' },\n  { type: AST.Template, name: 'Template' },\n  { type: AST.Unary, name: 'Unary' },\n  { type: AST.ValueConverter, name: 'ValueConverter' }\n];\n\nexport function enableImprovedExpressionDebugging(): void {\n  astTypeMap.forEach(x => { adoptDebugMethods(x.type, x.name); });\n}\n\n/** @internal */\nexport function adoptDebugMethods($type: Unwrap<typeof astTypeMap>['type'], name: string): void {\n  $type.prototype.toString = function (): string { return Unparser.unparse(this); };\n}\n\n/** @internal */\nexport class Unparser implements AST.IVisitor<void> {\n  public text: string = '';\n\n  public static unparse(expr: AST.IExpression): string {\n    const visitor = new Unparser();\n    expr.accept(visitor);\n    return visitor.text;\n  }\n\n  public visitAccessMember(expr: AST.AccessMember): void {\n    expr.object.accept(this);\n    this.text += `.${expr.name}`;\n  }\n\n  public visitAccessKeyed(expr: AST.AccessKeyed): void {\n    expr.object.accept(this);\n    this.text += '[';\n    expr.key.accept(this);\n    this.text += ']';\n  }\n\n  public visitAccessThis(expr: AST.AccessThis): void {\n    if (expr.ancestor === 0) {\n      this.text += '$this';\n      return;\n    }\n    this.text += '$parent';\n    let i = expr.ancestor - 1;\n    while (i--) {\n      this.text += '.$parent';\n    }\n  }\n\n  public visitAccessScope(expr: AST.AccessScope): void {\n    let i = expr.ancestor;\n    while (i--) {\n      this.text += '$parent.';\n    }\n    this.text += expr.name;\n  }\n\n  public visitArrayLiteral(expr: AST.ArrayLiteral): void {\n    const elements = expr.elements;\n    this.text += '[';\n    for (let i = 0, length = elements.length; i < length; ++i) {\n      if (i !== 0) {\n        this.text += ',';\n      }\n      elements[i].accept(this);\n    }\n    this.text += ']';\n  }\n\n  public visitObjectLiteral(expr: AST.ObjectLiteral): void {\n    const keys = expr.keys;\n    const values = expr.values;\n    this.text += '{';\n    for (let i = 0, length = keys.length; i < length; ++i) {\n      if (i !== 0) {\n        this.text += ',';\n      }\n      this.text += `'${keys[i]}':`;\n      values[i].accept(this);\n    }\n    this.text += '}';\n  }\n\n  public visitPrimitiveLiteral(expr: AST.PrimitiveLiteral): void {\n    this.text += '(';\n    if (typeof expr.value === 'string') {\n      const escaped = expr.value.replace(/'/g, '\\\\\\'');\n      this.text += `'${escaped}'`;\n    } else {\n      this.text += `${expr.value}`;\n    }\n    this.text += ')';\n  }\n\n  public visitCallFunction(expr: AST.CallFunction): void {\n    this.text += '(';\n    expr.func.accept(this);\n    this.writeArgs(expr.args);\n    this.text += ')';\n  }\n\n  public visitCallMember(expr: AST.CallMember): void {\n    this.text += '(';\n    expr.object.accept(this);\n    this.text += `.${expr.name}`;\n    this.writeArgs(expr.args);\n    this.text += ')';\n  }\n\n  public visitCallScope(expr: AST.CallScope): void {\n    this.text += '(';\n    let i = expr.ancestor;\n    while (i--) {\n      this.text += '$parent.';\n    }\n    this.text += expr.name;\n    this.writeArgs(expr.args);\n    this.text += ')';\n  }\n\n  public visitTemplate(expr: AST.Template): void {\n    const { cooked, expressions } = expr;\n    const length = expressions.length;\n    this.text += '`';\n    this.text += cooked[0];\n    for (let i = 0; i < length; i++) {\n      expressions[i].accept(this);\n      this.text += cooked[i + 1];\n    }\n    this.text += '`';\n  }\n\n  public visitTaggedTemplate(expr: AST.TaggedTemplate): void {\n    const { cooked, expressions } = expr;\n    const length = expressions.length;\n    expr.func.accept(this);\n    this.text += '`';\n    this.text += cooked[0];\n    for (let i = 0; i < length; i++) {\n      expressions[i].accept(this);\n      this.text += cooked[i + 1];\n    }\n    this.text += '`';\n  }\n\n  public visitUnary(expr: AST.Unary): void {\n    this.text += `(${expr.operation}`;\n    if (expr.operation.charCodeAt(0) >= /*a*/97) {\n      this.text += ' ';\n    }\n    expr.expression.accept(this);\n    this.text += ')';\n  }\n\n  public visitBinary(expr: AST.Binary): void {\n    this.text += '(';\n    expr.left.accept(this);\n    if (expr.operation.charCodeAt(0) === /*i*/105) {\n      this.text += ` ${expr.operation} `;\n    } else {\n      this.text += expr.operation;\n    }\n    expr.right.accept(this);\n    this.text += ')';\n  }\n\n  public visitConditional(expr: AST.Conditional): void {\n    this.text += '(';\n    expr.condition.accept(this);\n    this.text += '?';\n    expr.yes.accept(this);\n    this.text += ':';\n    expr.no.accept(this);\n    this.text += ')';\n  }\n\n  public visitAssign(expr: AST.Assign): void {\n    this.text += '(';\n    expr.target.accept(this);\n    this.text += '=';\n    expr.value.accept(this);\n    this.text += ')';\n  }\n\n  public visitValueConverter(expr: AST.ValueConverter): void {\n    const args = expr.args;\n    expr.expression.accept(this);\n    this.text += `|${expr.name}`;\n    for (let i = 0, length = args.length; i < length; ++i) {\n      this.text += ':';\n      args[i].accept(this);\n    }\n  }\n\n  public visitBindingBehavior(expr: AST.BindingBehavior): void {\n    const args = expr.args;\n    expr.expression.accept(this);\n    this.text += `&${expr.name}`;\n    for (let i = 0, length = args.length; i < length; ++i) {\n      this.text += ':';\n      args[i].accept(this);\n    }\n  }\n\n  public visitArrayBindingPattern(expr: AST.ArrayBindingPattern): void {\n    const elements = expr.elements;\n    this.text += '[';\n    for (let i = 0, length = elements.length; i < length; ++i) {\n      if (i !== 0) {\n        this.text += ',';\n      }\n      elements[i].accept(this);\n    }\n    this.text += ']';\n  }\n\n  public visitObjectBindingPattern(expr: AST.ObjectBindingPattern): void {\n    const keys = expr.keys;\n    const values = expr.values;\n    this.text += '{';\n    for (let i = 0, length = keys.length; i < length; ++i) {\n      if (i !== 0) {\n        this.text += ',';\n      }\n      this.text += `'${keys[i]}':`;\n      values[i].accept(this);\n    }\n    this.text += '}';\n  }\n\n  public visitBindingIdentifier(expr: AST.BindingIdentifier): void {\n    this.text += expr.name;\n  }\n\n  public visitHtmlLiteral(expr: AST.HtmlLiteral): void { throw new Error('visitHtmlLiteral'); }\n\n  public visitForOfStatement(expr: AST.ForOfStatement): void {\n    expr.declaration.accept(this);\n    this.text += ' of ';\n    expr.iterable.accept(this);\n  }\n\n  public visitInterpolation(expr: AST.Interpolation): void {\n    const { parts, expressions } = expr;\n    const length = expressions.length;\n    // tslint:disable-next-line:no-invalid-template-strings\n    this.text += '${';\n    this.text += parts[0];\n    for (let i = 0; i < length; i++) {\n      expressions[i].accept(this);\n      this.text += parts[i + 1];\n    }\n    this.text += '}';\n  }\n\n  private writeArgs(args: ReadonlyArray<AST.IExpression>): void {\n    this.text += '(';\n    for (let i = 0, length = args.length; i < length; ++i) {\n      if (i !== 0) {\n        this.text += ',';\n      }\n      args[i].accept(this);\n    }\n    this.text += ')';\n  }\n}\n\n/** @internal */\nexport class Serializer implements AST.IVisitor<string> {\n  public static serialize(expr: AST.IExpression): string {\n    const visitor = new Serializer();\n    if (expr === null || expr === undefined || typeof expr.accept !== 'function') {\n      return `${expr}`;\n    }\n    return expr.accept(visitor);\n  }\n\n  public visitAccessMember(expr: AST.AccessMember): string {\n    return `{\"type\":\"AccessMember\",\"name\":${expr.name},\"object\":${expr.object.accept(this)}}`;\n  }\n\n  public visitAccessKeyed(expr: AST.AccessKeyed): string {\n    return `{\"type\":\"AccessKeyed\",\"object\":${expr.object.accept(this)},\"key\":${expr.key.accept(this)}}`;\n  }\n\n  public visitAccessThis(expr: AST.AccessThis): string {\n    return `{\"type\":\"AccessThis\",\"ancestor\":${expr.ancestor}}`;\n  }\n\n  public visitAccessScope(expr: AST.AccessScope): string {\n    return `{\"type\":\"AccessScope\",\"name\":\"${expr.name}\",\"ancestor\":${expr.ancestor}}`;\n  }\n\n  public visitArrayLiteral(expr: AST.ArrayLiteral): string {\n    return `{\"type\":\"ArrayLiteral\",\"elements\":${this.serializeExpressions(expr.elements)}}`;\n  }\n\n  public visitObjectLiteral(expr: AST.ObjectLiteral): string {\n    return `{\"type\":\"ObjectLiteral\",\"keys\":${serializePrimitives(expr.keys)},\"values\":${this.serializeExpressions(expr.values)}}`;\n  }\n\n  public visitPrimitiveLiteral(expr: AST.PrimitiveLiteral): string {\n    return `{\"type\":\"PrimitiveLiteral\",\"value\":${serializePrimitive(expr.value)}}`;\n  }\n\n  public visitCallFunction(expr: AST.CallFunction): string {\n    return `{\"type\":\"CallFunction\",\"func\":${expr.func.accept(this)},\"args\":${this.serializeExpressions(expr.args)}}`;\n  }\n\n  public visitCallMember(expr: AST.CallMember): string {\n    return `{\"type\":\"CallMember\",\"name\":\"${expr.name}\",\"object\":${expr.object.accept(this)},\"args\":${this.serializeExpressions(expr.args)}}`;\n  }\n\n  public visitCallScope(expr: AST.CallScope): string {\n    return `{\"type\":\"CallScope\",\"name\":\"${expr.name}\",\"ancestor\":${expr.ancestor},\"args\":${this.serializeExpressions(expr.args)}}`;\n  }\n\n  public visitTemplate(expr: AST.Template): string {\n    return `{\"type\":\"Template\",\"cooked\":${serializePrimitives(expr.cooked)},\"expressions\":${this.serializeExpressions(expr.expressions)}}`;\n  }\n\n  public visitTaggedTemplate(expr: AST.TaggedTemplate): string {\n    return `{\"type\":\"TaggedTemplate\",\"cooked\":${serializePrimitives(expr.cooked)},\"raw\":${serializePrimitives(expr.cooked.raw as ReadonlyArray<unknown>)},\"expressions\":${this.serializeExpressions(expr.expressions)}}`;\n  }\n\n  public visitUnary(expr: AST.Unary): string {\n    return `{\"type\":\"Unary\",\"operation\":\"${expr.operation}\",\"expression\":${expr.expression.accept(this)}}`;\n  }\n\n  public visitBinary(expr: AST.Binary): string {\n    return `{\"type\":\"Binary\",\"operation\":\"${expr.operation}\",\"left\":${expr.left.accept(this)},\"right\":${expr.right.accept(this)}}`;\n  }\n\n  public visitConditional(expr: AST.Conditional): string {\n    return `{\"type\":\"Conditional\",\"condition\":${expr.condition.accept(this)},\"yes\":${expr.yes.accept(this)},\"no\":${expr.no.accept(this)}}`;\n  }\n\n  public visitAssign(expr: AST.Assign): string {\n    return `{\"type\":\"Assign\",\"target\":${expr.target.accept(this)},\"value\":${expr.value.accept(this)}}`;\n  }\n\n  public visitValueConverter(expr: AST.ValueConverter): string {\n    return `{\"type\":\"ValueConverter\",\"name\":\"${expr.name}\",\"expression\":${expr.expression.accept(this)},\"args\":${this.serializeExpressions(expr.args)}}`;\n  }\n\n  public visitBindingBehavior(expr: AST.BindingBehavior): string {\n    return `{\"type\":\"BindingBehavior\",\"name\":\"${expr.name}\",\"expression\":${expr.expression.accept(this)},\"args\":${this.serializeExpressions(expr.args)}}`;\n  }\n\n  public visitArrayBindingPattern(expr: AST.ArrayBindingPattern): string {\n    return `{\"type\":\"ArrayBindingPattern\",\"elements\":${this.serializeExpressions(expr.elements)}}`;\n  }\n\n  public visitObjectBindingPattern(expr: AST.ObjectBindingPattern): string {\n    return `{\"type\":\"ObjectBindingPattern\",\"keys\":${serializePrimitives(expr.keys)},\"values\":${this.serializeExpressions(expr.values)}}`;\n  }\n\n  public visitBindingIdentifier(expr: AST.BindingIdentifier): string {\n    return `{\"type\":\"BindingIdentifier\",\"name\":\"${expr.name}\"}`;\n  }\n\n  public visitHtmlLiteral(expr: AST.HtmlLiteral): string { throw new Error('visitHtmlLiteral'); }\n\n  public visitForOfStatement(expr: AST.ForOfStatement): string {\n    return `{\"type\":\"ForOfStatement\",\"declaration\":${expr.declaration.accept(this)},\"iterable\":${expr.iterable.accept(this)}}`;\n  }\n\n  public visitInterpolation(expr: AST.Interpolation): string {\n    return `{\"type\":\"Interpolation\",\"cooked\":${serializePrimitives(expr.parts)},\"expressions\":${this.serializeExpressions(expr.expressions)}}`;\n  }\n\n  private serializeExpressions(args: ReadonlyArray<AST.IExpression>): string {\n    let text = '[';\n    for (let i = 0, ii = args.length; i < ii; ++i) {\n      if (i !== 0) {\n        text += ',';\n      }\n      text += args[i].accept(this);\n    }\n    text += ']';\n    return text;\n  }\n}\n\nfunction serializePrimitives(values: ReadonlyArray<unknown>): string {\n  let text = '[';\n  for (let i = 0, ii = values.length; i < ii; ++i) {\n    if (i !== 0) {\n      text += ',';\n    }\n    text += serializePrimitive(values[i]);\n  }\n  text += ']';\n  return text;\n}\n\nfunction serializePrimitive(value: unknown): string {\n  if (typeof value === 'string') {\n    return `\"\\\\\"${escapeString(value)}\\\\\"\"`;\n  } else if (value === null || value === undefined) {\n    return `\"${value}\"`;\n  } else {\n    return `${value}`;\n  }\n}\n\nfunction escapeString(str: string): string {\n  let ret = '';\n  for (let i = 0, ii = str.length; i < ii; ++i) {\n    ret += escape(str.charAt(i));\n  }\n  return ret;\n}\n\nfunction escape(ch: string): string {\n  switch (ch) {\n    case '\\b': return '\\\\b';\n    case '\\t': return '\\\\t';\n    case '\\n': return '\\\\n';\n    case '\\v': return '\\\\v';\n    case '\\f': return '\\\\f';\n    case '\\r': return '\\\\r';\n    case '\\\"': return '\\\\\"';\n    case '\\'': return '\\\\\\'';\n    case '\\\\': return '\\\\\\\\';\n    default: return ch;\n  }\n}\n","import { Reporter as RuntimeReporter } from '@aurelia/kernel';\n\ndeclare var console: {\n  log(...args: unknown[]): void;\n  debug(...args: unknown[]): void;\n  info(...args: unknown[]): void;\n  warn(...args: unknown[]): void;\n  error(...args: unknown[]): void;\n};\n\nconst enum MessageType {\n  error,\n  warn,\n  info,\n  debug\n}\n\ninterface IMessageInfo {\n  message: string;\n  type: MessageType;\n}\n\nexport const Reporter: typeof RuntimeReporter = {\n  ...RuntimeReporter,\n  write(code: number, ...params: unknown[]): void {\n    const info = getMessageInfoForCode(code);\n\n    // tslint:disable:no-console\n    switch (info.type) {\n      case MessageType.debug:\n        console.debug(info.message, ...params);\n        break;\n      case MessageType.info:\n        console.info(info.message, ...params);\n        break;\n      case MessageType.warn:\n        console.warn(info.message, ...params);\n        break;\n      case MessageType.error:\n        throw this.error(code, ...params);\n    }\n    // tslint:enable:no-console\n  },\n  error(code: number, ...params: unknown[]): Error {\n    const info = getMessageInfoForCode(code);\n    const error = new Error(info.message);\n    (error as Error & {data: unknown}).data = params;\n    return error;\n  }\n};\n\nfunction getMessageInfoForCode(code: number): IMessageInfo {\n  const info = codeLookup[code];\n  return info !== undefined ? info : createInvalidCodeMessageInfo(code);\n}\n\nfunction createInvalidCodeMessageInfo(code: number): IMessageInfo {\n  return {\n    type: MessageType.error,\n    message: `Attempted to report with unknown code ${code}.`\n  };\n}\n\nconst codeLookup: Record<string, IMessageInfo> = {\n  0: {\n    type: MessageType.warn,\n    message: 'Cannot add observers to object.'\n  },\n  1: {\n    type: MessageType.warn,\n    message: 'Cannot observe property of object.'\n  },\n  2: {\n    type: MessageType.info,\n    message: 'Starting application in debug mode.'\n  },\n  3: {\n    type: MessageType.error,\n    message: 'Runtime expression compilation is only available when including JIT support.'\n  },\n  4: {\n    type: MessageType.error,\n    message: 'Invalid animation direction.'\n  },\n  5: {\n    type: MessageType.error,\n    message: 'key/value cannot be null or undefined. Are you trying to inject/register something that doesn\\'t exist with DI?'\n  },\n  6: {\n    type: MessageType.error,\n    message: 'Invalid resolver strategy specified.'\n  },\n  7: {\n    type: MessageType.error,\n    message: 'Constructor Parameter with index cannot be null or undefined. Are you trying to inject/register something that doesn\\'t exist with DI?'\n  },\n  8: {\n    type: MessageType.error,\n    message: 'Self binding behavior only supports events.'\n  },\n  9: {\n    type: MessageType.error,\n    message: 'The updateTrigger binding behavior requires at least one event name argument: eg <input value.bind=\"firstName & updateTrigger:\\'blur\\'\">'\n  },\n  10: {\n    type: MessageType.error,\n    message: 'The updateTrigger binding behavior can only be applied to two-way/ from-view bindings on input/select elements.'\n  },\n  11: {\n    type: MessageType.error,\n    message: 'Only property bindings and string interpolation bindings can be signaled. Trigger, delegate and call bindings cannot be signaled.'\n  },\n  12: {\n    type: MessageType.error,\n    message: 'Signal name is required.'\n  },\n  14: {\n    type: MessageType.error,\n    message: 'Property cannot be assigned.'\n  },\n  15: {\n    type: MessageType.error,\n    message: 'Unexpected call context.'\n  },\n  16: {\n    type: MessageType.error,\n    message: 'Only one child observer per content view is supported for the life of the content view.'\n  },\n  17: {\n    type: MessageType.error,\n    message: 'You can only define one default implementation for an interface.'\n  },\n  18: {\n    type: MessageType.error,\n    message: 'You cannot observe a setter only property.'\n  },\n  19: {\n    type: MessageType.error,\n    message: 'Value for expression is non-repeatable.'\n  },\n  20: {\n    type: MessageType.error,\n    message: 'No template compiler found with the specified name. JIT support or a custom compiler is required.'\n  },\n  21: {\n    type: MessageType.error,\n    message: 'You cannot combine the containerless custom element option with Shadow DOM.'\n  },\n  22: {\n    type: MessageType.error,\n    message: 'A containerless custom element cannot be the root component of an application.'\n  },\n  30: {\n    type: MessageType.error,\n    message: 'There are more targets than there are target instructions.'\n  },\n  31: {\n    type: MessageType.error,\n    message: 'There are more target instructions than there are targets.'\n  },\n  100: {\n    type: MessageType.error,\n    message: 'Invalid start of expression.'\n  },\n  101: {\n    type: MessageType.error,\n    message: 'Unconsumed token.'\n  },\n  102: {\n    type: MessageType.error,\n    message: 'Double dot and spread operators are not supported.'\n  },\n  103: {\n    type: MessageType.error,\n    message: 'Invalid member expression.'\n  },\n  104: {\n    type: MessageType.error,\n    message: 'Unexpected end of expression.'\n  },\n  105: {\n    type: MessageType.error,\n    message: 'Expected identifier.'\n  },\n  106: {\n    type: MessageType.error,\n    message: 'Invalid BindingIdentifier at left hand side of \"of\".'\n  },\n  107: {\n    type: MessageType.error,\n    message: 'Invalid or unsupported property definition in object literal.'\n  },\n  108: {\n    type: MessageType.error,\n    message: 'Unterminated quote in string literal.'\n  },\n  109: {\n    type: MessageType.error,\n    message: 'Unterminated template string.'\n  },\n  110: {\n    type: MessageType.error,\n    message: 'Missing expected token.'\n  },\n  111: {\n    type: MessageType.error,\n    message: 'Unexpected character.'\n  },\n  150: {\n    type: MessageType.error,\n    message: 'Left hand side of expression is not assignable.'\n  },\n  151: {\n    type: MessageType.error,\n    message: 'Unexpected keyword \"of\"'\n  },\n  2000: {\n    type: MessageType.error,\n    message: 'Router has not been activated.'\n  },\n  2001: {\n    type: MessageType.error,\n    message: 'Router has already been activated.'\n  },\n  2002: {\n    type: MessageType.error,\n    message: 'Failed to resolve all viewports.'\n  },\n  2003: {\n    type: MessageType.error,\n    message: 'Queued browser history has already been activated.'\n  },\n  2004: {\n    type: MessageType.error,\n    message: 'LinkHandler has already been activated.'\n  },\n  10000: {\n    type: MessageType.debug,\n    message: '%s'\n  }\n};\n","import { ILiveLoggingOptions, ITraceInfo, ITraceWriter, PLATFORM, Reporter, Tracer as RuntimeTracer } from '@aurelia/kernel';\nimport { IScope, LifecycleFlags } from '@aurelia/runtime';\n\nconst marker: ITraceInfo = {\n  objName: 'marker',\n  methodName: 'noop',\n  params: PLATFORM.emptyArray,\n  depth: -1,\n  prev: null,\n  next: null\n};\nclass TraceInfo implements ITraceInfo {\n  public static head: ITraceInfo = marker;\n  public static tail: ITraceInfo = marker;\n  public static stack: ITraceInfo[] = [];\n\n  public readonly objName: string;\n  public readonly methodName: string;\n  public readonly depth: number;\n  public params: unknown[] | null;\n  public next: ITraceInfo | null;\n  public prev: ITraceInfo | null;\n\n  constructor(objName: string, methodName: string, params: unknown[] | null) {\n    this.objName = objName;\n    this.methodName = methodName;\n    this.depth = TraceInfo.stack.length;\n    this.params = params;\n    this.next = marker;\n    this.prev = TraceInfo.tail;\n    TraceInfo.tail.next = this;\n    TraceInfo.tail = this;\n    TraceInfo.stack.push(this);\n  }\n\n  public static reset(): void {\n    let current: ITraceInfo | null = TraceInfo.head;\n    let next = null;\n    while (current !== null) {\n      next = current.next;\n      current.next = null;\n      current.prev = null;\n      current.params = null;\n      current = next;\n    }\n    TraceInfo.head = marker;\n    TraceInfo.tail = marker;\n    TraceInfo.stack = [];\n  }\n\n  public static enter(objName: string, methodName: string, params: unknown[] | null): ITraceInfo {\n    return new TraceInfo(objName, methodName, params);\n  }\n\n  public static leave(): ITraceInfo {\n    return TraceInfo.stack.pop() as ITraceInfo;\n  }\n}\n\nexport const Tracer: typeof RuntimeTracer = {\n  ...RuntimeTracer,\n  /**\n   * A convenience property for the user to conditionally call the tracer.\n   * This saves unnecessary `noop` and `slice` calls in non-AOT scenarios even if debugging is disabled.\n   * In AOT these calls will simply be removed entirely.\n   *\n   * This property **only** turns on tracing if `@aurelia/debug` is included and configured as well.\n   */\n  enabled: false,\n  liveLoggingEnabled: false,\n  liveWriter: null,\n  /**\n   * Call this at the start of a method/function.\n   * Each call to `enter` **must** have an accompanying call to `leave` for the tracer to work properly.\n   * @param objName Any human-friendly name to identify the traced object with.\n   * @param methodName Any human-friendly name to identify the traced method with.\n   * @param args Pass in `Array.prototype.slice.call(arguments)` to also trace the parameters, or `null` if this is not needed (to save memory/cpu)\n   */\n  enter(objName: string, methodName: string, args: unknown[] | null): void {\n    if (this.enabled) {\n      const info = TraceInfo.enter(objName, methodName, args);\n      if (this.liveLoggingEnabled) {\n        this.liveWriter.write(info);\n      }\n    }\n  },\n  /**\n   * Call this at the end of a method/function. Pops one trace item off the stack.\n   */\n  leave(): void {\n    if (this.enabled) {\n      TraceInfo.leave();\n    }\n  },\n  /**\n   * Writes only the trace info leading up to the current method call.\n   * @param writer An object to write the output to.\n   */\n  writeStack(writer: ITraceWriter): void {\n    let i = 0;\n    const stack = TraceInfo.stack;\n    const len = stack.length;\n    while (i < len) {\n      writer.write(stack[i]);\n      ++i;\n    }\n  },\n  /**\n   * Writes all trace info captured since the previous flushAll operation.\n   * @param writer An object to write the output to. Can be null to simply reset the tracer state.\n   */\n  flushAll(writer: ITraceWriter | null): void {\n    if (writer !== null) {\n      let current = TraceInfo.head.next; // skip the marker\n      while (current !== null && current !== marker) {\n        writer.write(current);\n        current = current.next;\n      }\n    }\n    TraceInfo.reset();\n  },\n  enableLiveLogging,\n  /**\n   * Stops writing out each trace info item as they are traced.\n   */\n  disableLiveLogging(): void {\n    this.liveLoggingEnabled = false;\n    this.liveWriter = null;\n  }\n};\n\nconst defaultOptions: ILiveLoggingOptions = Object.freeze({\n  rendering: true,\n  binding: true,\n  observation: true,\n  attaching: true,\n  mounting: true,\n  di: true,\n  lifecycle: true,\n  jit: true\n});\n\n/**\n * Writes out each trace info item as they are traced.\n * @param writer An object to write the output to.\n */\nfunction enableLiveLogging(this: typeof Tracer, writer: ITraceWriter): void;\n/**\n * Writes out each trace info item as they are traced.\n * @param options Optional. Specify which logging categories to output. If omitted, all will be logged.\n */\nfunction enableLiveLogging(this: typeof Tracer, options?: ILiveLoggingOptions): void;\nfunction enableLiveLogging(this: typeof Tracer, optionsOrWriter?: ILiveLoggingOptions | ITraceWriter): void {\n  this.liveLoggingEnabled = true;\n  if (optionsOrWriter && 'write' in optionsOrWriter) {\n    this.liveWriter = optionsOrWriter;\n  } else {\n    const options = optionsOrWriter !== undefined ? (optionsOrWriter as ILiveLoggingOptions) : defaultOptions;\n    this.liveWriter = createLiveTraceWriter(options);\n  }\n}\n\ntype Instance = {\n  constructor?: {\n    prototype: unknown;\n    name: string;\n    description?: {\n      name: string;\n    };\n  };\n};\n\nconst toString = Object.prototype.toString;\nfunction flagsText(info: ITraceInfo, i: number = 0): string {\n  if (info.params !== null && info.params.length > i) {\n    return stringifyLifecycleFlags(info.params[i] as LifecycleFlags);\n  }\n  return 'none';\n}\nfunction _ctorName(obj: Instance | undefined): string {\n  let name: string;\n  if (obj === undefined) {\n    name = 'undefined';\n  } else if (obj === null) {\n    name = 'null';\n  } else if (obj.constructor !== undefined) {\n    if (obj.constructor.description) {\n      name = `Resource{'${obj.constructor.description.name}'}`;\n    } else {\n      name = obj.constructor.name;\n    }\n  } else if (typeof obj === 'string') {\n    name = `'${obj}'`;\n  } else {\n    name = toString.call(obj);\n  }\n  return name;\n}\nfunction ctorName(info: ITraceInfo, i: number = 0): string {\n  if (info.params !== null && info.params.length > i) {\n    return _ctorName(info.params[i] as Instance);\n  }\n  return 'undefined';\n}\nfunction scopeText(info: ITraceInfo, i: number = 0): string {\n  let $ctorName: string;\n  if (info.params !== null && info.params.length > i) {\n    const $scope = info.params[i] as IScope | undefined;\n    if ($scope !== undefined && $scope.bindingContext !== undefined) {\n      $ctorName = _ctorName($scope.bindingContext as Instance);\n    } else {\n      $ctorName = 'undefined';\n    }\n    return `Scope{${$ctorName}}`;\n  }\n  return 'undefined';\n}\nfunction keyText(info: ITraceInfo, i: number = 0): string {\n  if (info.params !== null && info.params.length > i) {\n    const $key = info.params[i] as object | undefined;\n    if (typeof $key === 'string') {\n      return `'${$key}'`;\n    }\n    if ($key !== undefined && Reflect.has($key, 'friendlyName')) {\n      return ($key as Record<string, string>)['friendlyName'];\n    }\n    return _ctorName($key);\n  }\n  return 'undefined';\n}\nfunction primitive(info: ITraceInfo, i: number = 0): string {\n  if (info.params !== null && info.params.length > i) {\n    const $key = info.params[i] as string | symbol | number;\n    if (typeof $key === 'string') {\n      return `'${$key}'`;\n    }\n    return $key.toString();\n  }\n  return 'undefined';\n}\n\nconst RenderingArgsProcessor = {\n  $hydrate(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  render(info: ITraceInfo): string {\n    return `${flagsText(info)},IDOM,IRenderContext,${ctorName(info, 3)}`;\n  },\n  addBinding(info: ITraceInfo): string {\n    return `${ctorName(info)},${ctorName(info, 1)}`;\n  },\n  addComponent(info: ITraceInfo): string {\n    return `${ctorName(info)},${ctorName(info, 1)}`;\n  }\n};\n\nconst BindingArgsProcessor = {\n  $bind(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  $unbind(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  connect(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  // currently only observers trace constructor calls but keep an eye on this if others are added, then we'd need additional filtering\n  constructor(info: ITraceInfo): string {\n    switch (info.objName) {\n      case 'ArrayObserver':\n      case 'MapObserver':\n      case 'SetObserver':\n        return flagsText(info);\n      case 'SetterObserver':\n      case 'SelfObserver':\n        return `${flagsText(info)},${ctorName(info, 1)},${primitive(info, 2)}`;\n      case 'ProxyObserver':\n        return ctorName(info);\n      case 'ProxySubscriberCollection':\n      case 'DirtyCheckProperty':\n        return `${ctorName(info, 1)},${primitive(info, 2)}`;\n      case 'PrimitiveObserver':\n      case 'PropertyAccessor':\n        return `${ctorName(info)},${primitive(info, 1)}`;\n      default:\n        return '';\n    }\n  },\n  lockedBind(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  lockedUnbind(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  InternalObserversLookup(info: ITraceInfo): string {\n    return `${flagsText(info)},${ctorName(info, 1)},${primitive(info, 2)}`;\n  },\n  BindingContext(info: ITraceInfo): string {\n    switch (info.methodName) {\n      case 'get':\n        return `${scopeText(info)},${primitive(info, 1)},${primitive(info, 2)},${flagsText(info, 3)}`;\n      case 'getObservers':\n        return flagsText(info);\n      default:\n        return 'unknown';\n    }\n  },\n  Scope(info: ITraceInfo): string {\n    switch (info.methodName) {\n      case 'create':\n        return `${flagsText(info)},${ctorName(info, 1)},${ctorName(info, 2)}`;\n      case 'fromOverride':\n        return `${flagsText(info)},${ctorName(info, 1)}`;\n      case 'fromParent':\n        return `${flagsText(info)},${scopeText(info, 1)},${ctorName(info, 2)}`;\n      default:\n        return 'unknown';\n    }\n  },\n  OverrideContext(info: ITraceInfo): string {\n    switch (info.methodName) {\n      case 'create':\n        return `${flagsText(info)},${ctorName(info, 1)},${ctorName(info, 2)}`;\n      case 'getObservers':\n        return '';\n      default:\n        return 'unknown';\n    }\n  }\n};\n\nconst ObservationArgsProcessor = {\n  $patch(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  callSource(info: ITraceInfo): string {\n    switch (info.objName) {\n      case 'Listener':\n        return ((info.params as ReadonlyArray<{ type: string }>)[0]).type;\n      case 'Call':\n        const names: string[] = [];\n        if (info.params !== null) {\n          for (let i = 0, ii = info.params.length; i < ii; ++i) {\n            names.push(ctorName(info, i));\n          }\n        }\n        return names.join(',');\n      default:\n        return 'unknown';\n    }\n  },\n  setValue(info: ITraceInfo): string {\n    let valueText: string;\n    const value = (info.params as ReadonlyArray<unknown>)[0];\n    switch (typeof value) {\n      case 'undefined':\n        valueText = 'undefined';\n        break;\n      case 'object':\n        if (value === null) {\n          valueText = 'null';\n        } else {\n          valueText = _ctorName(value);\n        }\n        break;\n      case 'string':\n        valueText = `'${value}'`;\n        break;\n      case 'number':\n        valueText = value.toString();\n        break;\n      default:\n        valueText = _ctorName(value as Instance);\n    }\n    return `${valueText},${flagsText(info, 1)}`;\n  },\n  flush(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  handleChange(info: ITraceInfo): string {\n    return `${primitive(info)},${primitive(info, 1)},${flagsText(info, 2)}`;\n  },\n  lockScope(info: ITraceInfo): string {\n    return scopeText(info);\n  }\n};\n\nconst AttachingArgsProcessor = {\n  $attach(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  $detach(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  $cache(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  hold(info: ITraceInfo): string {\n    return `Node{'${((info.params as ReadonlyArray<{ textContent: string }>)[0]).textContent}'}`;\n  },\n  release(info: ITraceInfo): string {\n    return flagsText(info);\n  }\n};\n\nconst MountingArgsProcessor = {\n  $mount(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  $unmount(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  project(info: ITraceInfo): string {\n    return ctorName(info);\n  },\n  take(info: ITraceInfo): string {\n    return ctorName(info);\n  }\n};\n\nconst DIArgsProcessor = {\n  construct(info: ITraceInfo): string {\n    return ctorName(info);\n  },\n  Container(info: ITraceInfo): string {\n    switch (info.methodName) {\n      case 'get':\n      case 'getAll':\n        return keyText(info);\n      case 'register':\n        const names: string[] = [];\n        if (info.params !== null) {\n          for (let i = 0, ii = info.params.length; i < ii; ++i) {\n            names.push(keyText(info, i));\n          }\n        }\n        return names.join(',');\n      case 'createChild':\n        return '';\n      default:\n        return 'unknown';\n    }\n  }\n};\n\nconst LifecycleArgsProcessor = {\n  Lifecycle(info: ITraceInfo): string {\n    switch (info.methodName.slice(0, 3)) {\n      case 'beg':\n        return '';\n      case 'enq':\n        return ctorName(info);\n      case 'end':\n      case 'pro':\n        return flagsText(info);\n      default:\n        return 'unknown';\n    }\n  },\n  CompositionCoordinator(info: ITraceInfo): string {\n    switch (info.methodName) {\n      case 'enqueue':\n        return 'IView';\n      case 'swap':\n        return `IView,${flagsText(info, 1)}`;\n      case 'processNext':\n        return '';\n      default:\n        return 'unknown';\n    }\n  },\n  AggregateLifecycleTask(info: ITraceInfo): string {\n    switch (info.methodName) {\n      case 'addTask':\n      case 'removeTask':\n        return ctorName(info);\n      case 'complete':\n        return `${primitive(info, 2)}`;\n      default:\n        return 'unknown';\n    }\n  }\n};\n\nconst JitArgsProcessor = {\n  TemplateBinder(info: ITraceInfo): string {\n    return ''; // TODO\n  }\n};\n\nfunction createLiveTraceWriter(options: ILiveLoggingOptions): ITraceWriter {\n  const Processors: Record<string, (info: ITraceInfo) => string> = {};\n  if (options.rendering) {\n    Object.assign(Processors, RenderingArgsProcessor);\n  }\n  if (options.binding) {\n    Object.assign(Processors, BindingArgsProcessor);\n  }\n  if (options.observation) {\n    Object.assign(Processors, ObservationArgsProcessor);\n  }\n  if (options.attaching) {\n    Object.assign(Processors, AttachingArgsProcessor);\n  }\n  if (options.mounting) {\n    Object.assign(Processors, MountingArgsProcessor);\n  }\n  if (options.di) {\n    Object.assign(Processors, DIArgsProcessor);\n  }\n  if (options.lifecycle) {\n    Object.assign(Processors, LifecycleArgsProcessor);\n  }\n  if (options.jit) {\n    Object.assign(Processors, JitArgsProcessor);\n  }\n\n  return {\n    write(info: ITraceInfo): void {\n      let output: string;\n      if (Processors[info.methodName] !== undefined) {\n        output = Processors[info.methodName](info);\n      } else if (Processors[info.objName] !== undefined) {\n        output = Processors[info.objName](info);\n      } else {\n        return;\n      }\n      Reporter.write(10000, `${'-'.repeat(info.depth)}${info.objName}.${info.methodName}(${output})`);\n    }\n  };\n}\n\nexport function stringifyLifecycleFlags(flags: LifecycleFlags): string {\n  const flagNames: string[] = [];\n\n  if (flags & LifecycleFlags.mustEvaluate) { flagNames.push('mustEvaluate'); }\n  if (flags & LifecycleFlags.isCollectionMutation) { flagNames.push('isCollectionMutation'); }\n  if (flags & LifecycleFlags.updateTargetInstance) { flagNames.push('updateTargetInstance'); }\n  if (flags & LifecycleFlags.updateSourceExpression) { flagNames.push('updateSourceExpression'); }\n  if (flags & LifecycleFlags.fromAsyncFlush) { flagNames.push('fromAsyncFlush'); }\n  if (flags & LifecycleFlags.fromSyncFlush) { flagNames.push('fromSyncFlush'); }\n  if (flags & LifecycleFlags.fromStartTask) { flagNames.push('fromStartTask'); }\n  if (flags & LifecycleFlags.fromStopTask) { flagNames.push('fromStopTask'); }\n  if (flags & LifecycleFlags.fromBind) { flagNames.push('fromBind'); }\n  if (flags & LifecycleFlags.fromUnbind) { flagNames.push('fromUnbind'); }\n  if (flags & LifecycleFlags.fromAttach) { flagNames.push('fromAttach'); }\n  if (flags & LifecycleFlags.fromDetach) { flagNames.push('fromDetach'); }\n  if (flags & LifecycleFlags.fromCache) { flagNames.push('fromCache'); }\n  if (flags & LifecycleFlags.fromDOMEvent) { flagNames.push('fromDOMEvent'); }\n  if (flags & LifecycleFlags.fromLifecycleTask) { flagNames.push('fromLifecycleTask'); }\n  if (flags & LifecycleFlags.parentUnmountQueued) { flagNames.push('parentUnmountQueued'); }\n  if (flags & LifecycleFlags.doNotUpdateDOM) { flagNames.push('doNotUpdateDOM'); }\n  if (flags & LifecycleFlags.isTraversingParentScope) { flagNames.push('isTraversingParentScope'); }\n  if (flags & LifecycleFlags.allowParentScopeTraversal) { flagNames.push('allowParentScopeTraversal'); }\n  if (flags & LifecycleFlags.getterSetterStrategy) { flagNames.push('getterSetterStrategy'); }\n  if (flags & LifecycleFlags.proxyStrategy) { flagNames.push('proxyStrategy'); }\n  if (flags & LifecycleFlags.keyedStrategy) { flagNames.push('keyedStrategy'); }\n  if (flags & LifecycleFlags.patchStrategy) { flagNames.push('patchStrategy'); }\n\n  if (flagNames.length === 0) {\n    return 'none';\n  }\n  return flagNames.join('|');\n}\n","import { IContainer, Reporter as RuntimeReporter, Tracer as RuntimeTracer } from '@aurelia/kernel';\nimport { enableImprovedExpressionDebugging } from './binding/unparser';\nimport { Reporter } from './reporter';\nimport { Tracer } from './tracer';\n\nexport const DebugConfiguration = {\n  register(container?: IContainer): void {\n    Reporter.write(2);\n    Object.assign(RuntimeReporter, Reporter);\n    enableImprovedExpressionDebugging();\n  }\n};\n\nexport const TraceConfiguration = {\n  register(container?: IContainer): void {\n    Object.assign(RuntimeTracer, Tracer);\n  }\n};\n"],"names":["AST.AccessKeyed","AST.AccessMember","AST.AccessScope","AST.AccessThis","AST.ArrayBindingPattern","AST.ArrayLiteral","AST.Assign","AST.Binary","AST.BindingBehavior","AST.BindingIdentifier","AST.CallFunction","AST.CallMember","AST.CallScope","AST.Conditional","AST.ForOfStatement","AST.HtmlLiteral","AST.Interpolation","AST.ObjectBindingPattern","AST.ObjectLiteral","AST.PrimitiveLiteral","AST.TaggedTemplate","AST.Template","AST.Unary","AST.ValueConverter","RuntimeReporter","PLATFORM","RuntimeTracer","Reporter"],"mappings":"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"}