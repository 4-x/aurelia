{"version":3,"file":"index.es6.js","sources":["../src/binding/unparser.ts","../src/reporter.ts","../src/tracer.ts","../src/configuration.ts"],"sourcesContent":["import { Unwrap } from '@aurelia/kernel';\nimport * as AST from '@aurelia/runtime';\n\nconst astTypeMap = [\n  { type: AST.AccessKeyed, name: 'AccessKeyed' },\n  { type: AST.AccessMember, name: 'AccessMember' },\n  { type: AST.AccessScope, name: 'AccessScope' },\n  { type: AST.AccessThis, name: 'AccessThis' },\n  { type: AST.ArrayBindingPattern, name: 'ArrayBindingPattern' },\n  { type: AST.ArrayLiteral, name: 'ArrayLiteral' },\n  { type: AST.Assign, name: 'Assign' },\n  { type: AST.Binary, name: 'Binary' },\n  { type: AST.BindingBehavior, name: 'BindingBehavior' },\n  { type: AST.BindingIdentifier, name: 'BindingIdentifier' },\n  { type: AST.CallFunction, name: 'CallFunction' },\n  { type: AST.CallMember, name: 'CallMember' },\n  { type: AST.CallScope, name: 'CallScope' },\n  { type: AST.Conditional, name: 'Conditional' },\n  { type: AST.ForOfStatement, name: 'ForOfStatement' },\n  { type: AST.HtmlLiteral, name: 'HtmlLiteral' },\n  { type: AST.Interpolation, name: 'Interpolation' },\n  { type: AST.ObjectBindingPattern, name: 'ObjectBindingPattern' },\n  { type: AST.ObjectLiteral, name: 'ObjectLiteral' },\n  { type: AST.PrimitiveLiteral, name: 'PrimitiveLiteral' },\n  { type: AST.TaggedTemplate, name: 'TaggedTemplate' },\n  { type: AST.Template, name: 'Template' },\n  { type: AST.Unary, name: 'Unary' },\n  { type: AST.ValueConverter, name: 'ValueConverter' }\n];\n\nexport function enableImprovedExpressionDebugging(): void {\n  astTypeMap.forEach(x => { adoptDebugMethods(x.type, x.name); });\n}\n\n/** @internal */\nexport function adoptDebugMethods($type: Unwrap<typeof astTypeMap>['type'], name: string): void {\n  $type.prototype.toString = function (): string { return Unparser.unparse(this); };\n}\n\n/** @internal */\nexport class Unparser implements AST.IVisitor<void> {\n  public text: string = '';\n\n  public static unparse(expr: AST.IExpression): string {\n    const visitor = new Unparser();\n    expr.accept(visitor);\n    return visitor.text;\n  }\n\n  public visitAccessMember(expr: AST.AccessMember): void {\n    expr.object.accept(this);\n    this.text += `.${expr.name}`;\n  }\n\n  public visitAccessKeyed(expr: AST.AccessKeyed): void {\n    expr.object.accept(this);\n    this.text += '[';\n    expr.key.accept(this);\n    this.text += ']';\n  }\n\n  public visitAccessThis(expr: AST.AccessThis): void {\n    if (expr.ancestor === 0) {\n      this.text += '$this';\n      return;\n    }\n    this.text += '$parent';\n    let i = expr.ancestor - 1;\n    while (i--) {\n      this.text += '.$parent';\n    }\n  }\n\n  public visitAccessScope(expr: AST.AccessScope): void {\n    let i = expr.ancestor;\n    while (i--) {\n      this.text += '$parent.';\n    }\n    this.text += expr.name;\n  }\n\n  public visitArrayLiteral(expr: AST.ArrayLiteral): void {\n    const elements = expr.elements;\n    this.text += '[';\n    for (let i = 0, length = elements.length; i < length; ++i) {\n      if (i !== 0) {\n        this.text += ',';\n      }\n      elements[i].accept(this);\n    }\n    this.text += ']';\n  }\n\n  public visitObjectLiteral(expr: AST.ObjectLiteral): void {\n    const keys = expr.keys;\n    const values = expr.values;\n    this.text += '{';\n    for (let i = 0, length = keys.length; i < length; ++i) {\n      if (i !== 0) {\n        this.text += ',';\n      }\n      this.text += `'${keys[i]}':`;\n      values[i].accept(this);\n    }\n    this.text += '}';\n  }\n\n  public visitPrimitiveLiteral(expr: AST.PrimitiveLiteral): void {\n    this.text += '(';\n    if (typeof expr.value === 'string') {\n      const escaped = expr.value.replace(/'/g, '\\\\\\'');\n      this.text += `'${escaped}'`;\n    } else {\n      this.text += `${expr.value}`;\n    }\n    this.text += ')';\n  }\n\n  public visitCallFunction(expr: AST.CallFunction): void {\n    this.text += '(';\n    expr.func.accept(this);\n    this.writeArgs(expr.args);\n    this.text += ')';\n  }\n\n  public visitCallMember(expr: AST.CallMember): void {\n    this.text += '(';\n    expr.object.accept(this);\n    this.text += `.${expr.name}`;\n    this.writeArgs(expr.args);\n    this.text += ')';\n  }\n\n  public visitCallScope(expr: AST.CallScope): void {\n    this.text += '(';\n    let i = expr.ancestor;\n    while (i--) {\n      this.text += '$parent.';\n    }\n    this.text += expr.name;\n    this.writeArgs(expr.args);\n    this.text += ')';\n  }\n\n  public visitTemplate(expr: AST.Template): void {\n    const { cooked, expressions } = expr;\n    const length = expressions.length;\n    this.text += '`';\n    this.text += cooked[0];\n    for (let i = 0; i < length; i++) {\n      expressions[i].accept(this);\n      this.text += cooked[i + 1];\n    }\n    this.text += '`';\n  }\n\n  public visitTaggedTemplate(expr: AST.TaggedTemplate): void {\n    const { cooked, expressions } = expr;\n    const length = expressions.length;\n    expr.func.accept(this);\n    this.text += '`';\n    this.text += cooked[0];\n    for (let i = 0; i < length; i++) {\n      expressions[i].accept(this);\n      this.text += cooked[i + 1];\n    }\n    this.text += '`';\n  }\n\n  public visitUnary(expr: AST.Unary): void {\n    this.text += `(${expr.operation}`;\n    if (expr.operation.charCodeAt(0) >= /*a*/97) {\n      this.text += ' ';\n    }\n    expr.expression.accept(this);\n    this.text += ')';\n  }\n\n  public visitBinary(expr: AST.Binary): void {\n    this.text += '(';\n    expr.left.accept(this);\n    if (expr.operation.charCodeAt(0) === /*i*/105) {\n      this.text += ` ${expr.operation} `;\n    } else {\n      this.text += expr.operation;\n    }\n    expr.right.accept(this);\n    this.text += ')';\n  }\n\n  public visitConditional(expr: AST.Conditional): void {\n    this.text += '(';\n    expr.condition.accept(this);\n    this.text += '?';\n    expr.yes.accept(this);\n    this.text += ':';\n    expr.no.accept(this);\n    this.text += ')';\n  }\n\n  public visitAssign(expr: AST.Assign): void {\n    this.text += '(';\n    expr.target.accept(this);\n    this.text += '=';\n    expr.value.accept(this);\n    this.text += ')';\n  }\n\n  public visitValueConverter(expr: AST.ValueConverter): void {\n    const args = expr.args;\n    expr.expression.accept(this);\n    this.text += `|${expr.name}`;\n    for (let i = 0, length = args.length; i < length; ++i) {\n      this.text += ':';\n      args[i].accept(this);\n    }\n  }\n\n  public visitBindingBehavior(expr: AST.BindingBehavior): void {\n    const args = expr.args;\n    expr.expression.accept(this);\n    this.text += `&${expr.name}`;\n    for (let i = 0, length = args.length; i < length; ++i) {\n      this.text += ':';\n      args[i].accept(this);\n    }\n  }\n\n  public visitArrayBindingPattern(expr: AST.ArrayBindingPattern): void {\n    const elements = expr.elements;\n    this.text += '[';\n    for (let i = 0, length = elements.length; i < length; ++i) {\n      if (i !== 0) {\n        this.text += ',';\n      }\n      elements[i].accept(this);\n    }\n    this.text += ']';\n  }\n\n  public visitObjectBindingPattern(expr: AST.ObjectBindingPattern): void {\n    const keys = expr.keys;\n    const values = expr.values;\n    this.text += '{';\n    for (let i = 0, length = keys.length; i < length; ++i) {\n      if (i !== 0) {\n        this.text += ',';\n      }\n      this.text += `'${keys[i]}':`;\n      values[i].accept(this);\n    }\n    this.text += '}';\n  }\n\n  public visitBindingIdentifier(expr: AST.BindingIdentifier): void {\n    this.text += expr.name;\n  }\n\n  public visitHtmlLiteral(expr: AST.HtmlLiteral): void { throw new Error('visitHtmlLiteral'); }\n\n  public visitForOfStatement(expr: AST.ForOfStatement): void {\n    expr.declaration.accept(this);\n    this.text += ' of ';\n    expr.iterable.accept(this);\n  }\n\n  public visitInterpolation(expr: AST.Interpolation): void {\n    const { parts, expressions } = expr;\n    const length = expressions.length;\n    // tslint:disable-next-line:no-invalid-template-strings\n    this.text += '${';\n    this.text += parts[0];\n    for (let i = 0; i < length; i++) {\n      expressions[i].accept(this);\n      this.text += parts[i + 1];\n    }\n    this.text += '}';\n  }\n\n  private writeArgs(args: ReadonlyArray<AST.IExpression>): void {\n    this.text += '(';\n    for (let i = 0, length = args.length; i < length; ++i) {\n      if (i !== 0) {\n        this.text += ',';\n      }\n      args[i].accept(this);\n    }\n    this.text += ')';\n  }\n}\n\n/** @internal */\nexport class Serializer implements AST.IVisitor<string> {\n  public static serialize(expr: AST.IExpression): string {\n    const visitor = new Serializer();\n    if (expr === null || expr === undefined || typeof expr.accept !== 'function') {\n      return `${expr}`;\n    }\n    return expr.accept(visitor);\n  }\n\n  public visitAccessMember(expr: AST.AccessMember): string {\n    return `{\"type\":\"AccessMember\",\"name\":${expr.name},\"object\":${expr.object.accept(this)}}`;\n  }\n\n  public visitAccessKeyed(expr: AST.AccessKeyed): string {\n    return `{\"type\":\"AccessKeyed\",\"object\":${expr.object.accept(this)},\"key\":${expr.key.accept(this)}}`;\n  }\n\n  public visitAccessThis(expr: AST.AccessThis): string {\n    return `{\"type\":\"AccessThis\",\"ancestor\":${expr.ancestor}}`;\n  }\n\n  public visitAccessScope(expr: AST.AccessScope): string {\n    return `{\"type\":\"AccessScope\",\"name\":\"${expr.name}\",\"ancestor\":${expr.ancestor}}`;\n  }\n\n  public visitArrayLiteral(expr: AST.ArrayLiteral): string {\n    return `{\"type\":\"ArrayLiteral\",\"elements\":${this.serializeExpressions(expr.elements)}}`;\n  }\n\n  public visitObjectLiteral(expr: AST.ObjectLiteral): string {\n    return `{\"type\":\"ObjectLiteral\",\"keys\":${serializePrimitives(expr.keys)},\"values\":${this.serializeExpressions(expr.values)}}`;\n  }\n\n  public visitPrimitiveLiteral(expr: AST.PrimitiveLiteral): string {\n    return `{\"type\":\"PrimitiveLiteral\",\"value\":${serializePrimitive(expr.value)}}`;\n  }\n\n  public visitCallFunction(expr: AST.CallFunction): string {\n    return `{\"type\":\"CallFunction\",\"func\":${expr.func.accept(this)},\"args\":${this.serializeExpressions(expr.args)}}`;\n  }\n\n  public visitCallMember(expr: AST.CallMember): string {\n    return `{\"type\":\"CallMember\",\"name\":\"${expr.name}\",\"object\":${expr.object.accept(this)},\"args\":${this.serializeExpressions(expr.args)}}`;\n  }\n\n  public visitCallScope(expr: AST.CallScope): string {\n    return `{\"type\":\"CallScope\",\"name\":\"${expr.name}\",\"ancestor\":${expr.ancestor},\"args\":${this.serializeExpressions(expr.args)}}`;\n  }\n\n  public visitTemplate(expr: AST.Template): string {\n    return `{\"type\":\"Template\",\"cooked\":${serializePrimitives(expr.cooked)},\"expressions\":${this.serializeExpressions(expr.expressions)}}`;\n  }\n\n  public visitTaggedTemplate(expr: AST.TaggedTemplate): string {\n    return `{\"type\":\"TaggedTemplate\",\"cooked\":${serializePrimitives(expr.cooked)},\"raw\":${serializePrimitives(expr.cooked.raw as ReadonlyArray<unknown>)},\"expressions\":${this.serializeExpressions(expr.expressions)}}`;\n  }\n\n  public visitUnary(expr: AST.Unary): string {\n    return `{\"type\":\"Unary\",\"operation\":\"${expr.operation}\",\"expression\":${expr.expression.accept(this)}}`;\n  }\n\n  public visitBinary(expr: AST.Binary): string {\n    return `{\"type\":\"Binary\",\"operation\":\"${expr.operation}\",\"left\":${expr.left.accept(this)},\"right\":${expr.right.accept(this)}}`;\n  }\n\n  public visitConditional(expr: AST.Conditional): string {\n    return `{\"type\":\"Conditional\",\"condition\":${expr.condition.accept(this)},\"yes\":${expr.yes.accept(this)},\"no\":${expr.no.accept(this)}}`;\n  }\n\n  public visitAssign(expr: AST.Assign): string {\n    return `{\"type\":\"Assign\",\"target\":${expr.target.accept(this)},\"value\":${expr.value.accept(this)}}`;\n  }\n\n  public visitValueConverter(expr: AST.ValueConverter): string {\n    return `{\"type\":\"ValueConverter\",\"name\":\"${expr.name}\",\"expression\":${expr.expression.accept(this)},\"args\":${this.serializeExpressions(expr.args)}}`;\n  }\n\n  public visitBindingBehavior(expr: AST.BindingBehavior): string {\n    return `{\"type\":\"BindingBehavior\",\"name\":\"${expr.name}\",\"expression\":${expr.expression.accept(this)},\"args\":${this.serializeExpressions(expr.args)}}`;\n  }\n\n  public visitArrayBindingPattern(expr: AST.ArrayBindingPattern): string {\n    return `{\"type\":\"ArrayBindingPattern\",\"elements\":${this.serializeExpressions(expr.elements)}}`;\n  }\n\n  public visitObjectBindingPattern(expr: AST.ObjectBindingPattern): string {\n    return `{\"type\":\"ObjectBindingPattern\",\"keys\":${serializePrimitives(expr.keys)},\"values\":${this.serializeExpressions(expr.values)}}`;\n  }\n\n  public visitBindingIdentifier(expr: AST.BindingIdentifier): string {\n    return `{\"type\":\"BindingIdentifier\",\"name\":\"${expr.name}\"}`;\n  }\n\n  public visitHtmlLiteral(expr: AST.HtmlLiteral): string { throw new Error('visitHtmlLiteral'); }\n\n  public visitForOfStatement(expr: AST.ForOfStatement): string {\n    return `{\"type\":\"ForOfStatement\",\"declaration\":${expr.declaration.accept(this)},\"iterable\":${expr.iterable.accept(this)}}`;\n  }\n\n  public visitInterpolation(expr: AST.Interpolation): string {\n    return `{\"type\":\"Interpolation\",\"cooked\":${serializePrimitives(expr.parts)},\"expressions\":${this.serializeExpressions(expr.expressions)}}`;\n  }\n\n  private serializeExpressions(args: ReadonlyArray<AST.IExpression>): string {\n    let text = '[';\n    for (let i = 0, ii = args.length; i < ii; ++i) {\n      if (i !== 0) {\n        text += ',';\n      }\n      text += args[i].accept(this);\n    }\n    text += ']';\n    return text;\n  }\n}\n\nfunction serializePrimitives(values: ReadonlyArray<unknown>): string {\n  let text = '[';\n  for (let i = 0, ii = values.length; i < ii; ++i) {\n    if (i !== 0) {\n      text += ',';\n    }\n    text += serializePrimitive(values[i]);\n  }\n  text += ']';\n  return text;\n}\n\nfunction serializePrimitive(value: unknown): string {\n  if (typeof value === 'string') {\n    return `\"\\\\\"${escapeString(value)}\\\\\"\"`;\n  } else if (value === null || value === undefined) {\n    return `\"${value}\"`;\n  } else {\n    return `${value}`;\n  }\n}\n\nfunction escapeString(str: string): string {\n  let ret = '';\n  for (let i = 0, ii = str.length; i < ii; ++i) {\n    ret += escape(str.charAt(i));\n  }\n  return ret;\n}\n\nfunction escape(ch: string): string {\n  switch (ch) {\n    case '\\b': return '\\\\b';\n    case '\\t': return '\\\\t';\n    case '\\n': return '\\\\n';\n    case '\\v': return '\\\\v';\n    case '\\f': return '\\\\f';\n    case '\\r': return '\\\\r';\n    case '\\\"': return '\\\\\"';\n    case '\\'': return '\\\\\\'';\n    case '\\\\': return '\\\\\\\\';\n    default: return ch;\n  }\n}\n","import { Reporter as RuntimeReporter } from '@aurelia/kernel';\n\ndeclare var console: {\n  log(...args: unknown[]): void;\n  debug(...args: unknown[]): void;\n  info(...args: unknown[]): void;\n  warn(...args: unknown[]): void;\n  error(...args: unknown[]): void;\n};\n\nconst enum MessageType {\n  error,\n  warn,\n  info,\n  debug\n}\n\ninterface IMessageInfo {\n  message: string;\n  type: MessageType;\n}\n\nexport const Reporter: typeof RuntimeReporter = {\n  ...RuntimeReporter,\n  write(code: number, ...params: unknown[]): void {\n    const info = getMessageInfoForCode(code);\n\n    // tslint:disable:no-console\n    switch (info.type) {\n      case MessageType.debug:\n        console.debug(info.message, ...params);\n        break;\n      case MessageType.info:\n        console.info(info.message, ...params);\n        break;\n      case MessageType.warn:\n        console.warn(info.message, ...params);\n        break;\n      case MessageType.error:\n        throw this.error(code, ...params);\n    }\n    // tslint:enable:no-console\n  },\n  error(code: number, ...params: unknown[]): Error {\n    const info = getMessageInfoForCode(code);\n    const error = new Error(info.message);\n    (error as Error & {data: unknown}).data = params;\n    return error;\n  }\n};\n\nfunction getMessageInfoForCode(code: number): IMessageInfo {\n  const info = codeLookup[code];\n  return info !== undefined ? info : createInvalidCodeMessageInfo(code);\n}\n\nfunction createInvalidCodeMessageInfo(code: number): IMessageInfo {\n  return {\n    type: MessageType.error,\n    message: `Attempted to report with unknown code ${code}.`\n  };\n}\n\nconst codeLookup: Record<string, IMessageInfo> = {\n  0: {\n    type: MessageType.warn,\n    message: 'Cannot add observers to object.'\n  },\n  1: {\n    type: MessageType.warn,\n    message: 'Cannot observe property of object.'\n  },\n  2: {\n    type: MessageType.info,\n    message: 'Starting application in debug mode.'\n  },\n  3: {\n    type: MessageType.error,\n    message: 'Runtime expression compilation is only available when including JIT support.'\n  },\n  4: {\n    type: MessageType.error,\n    message: 'Invalid animation direction.'\n  },\n  5: {\n    type: MessageType.error,\n    message: 'key/value cannot be null or undefined. Are you trying to inject/register something that doesn\\'t exist with DI?'\n  },\n  6: {\n    type: MessageType.error,\n    message: 'Invalid resolver strategy specified.'\n  },\n  7: {\n    type: MessageType.error,\n    message: 'Constructor Parameter with index cannot be null or undefined. Are you trying to inject/register something that doesn\\'t exist with DI?'\n  },\n  8: {\n    type: MessageType.error,\n    message: 'Self binding behavior only supports events.'\n  },\n  9: {\n    type: MessageType.error,\n    message: 'The updateTrigger binding behavior requires at least one event name argument: eg <input value.bind=\"firstName & updateTrigger:\\'blur\\'\">'\n  },\n  10: {\n    type: MessageType.error,\n    message: 'The updateTrigger binding behavior can only be applied to two-way/ from-view bindings on input/select elements.'\n  },\n  11: {\n    type: MessageType.error,\n    message: 'Only property bindings and string interpolation bindings can be signaled. Trigger, delegate and call bindings cannot be signaled.'\n  },\n  12: {\n    type: MessageType.error,\n    message: 'Signal name is required.'\n  },\n  14: {\n    type: MessageType.error,\n    message: 'Property cannot be assigned.'\n  },\n  15: {\n    type: MessageType.error,\n    message: 'Unexpected call context.'\n  },\n  16: {\n    type: MessageType.error,\n    message: 'Only one child observer per content view is supported for the life of the content view.'\n  },\n  17: {\n    type: MessageType.error,\n    message: 'You can only define one default implementation for an interface.'\n  },\n  18: {\n    type: MessageType.error,\n    message: 'You cannot observe a setter only property.'\n  },\n  19: {\n    type: MessageType.error,\n    message: 'Value for expression is non-repeatable.'\n  },\n  20: {\n    type: MessageType.error,\n    message: 'No template compiler found with the specified name. JIT support or a custom compiler is required.'\n  },\n  21: {\n    type: MessageType.error,\n    message: 'You cannot combine the containerless custom element option with Shadow DOM.'\n  },\n  22: {\n    type: MessageType.error,\n    message: 'A containerless custom element cannot be the root component of an application.'\n  },\n  30: {\n    type: MessageType.error,\n    message: 'There are more targets than there are target instructions.'\n  },\n  31: {\n    type: MessageType.error,\n    message: 'There are more target instructions than there are targets.'\n  },\n  100: {\n    type: MessageType.error,\n    message: 'Invalid start of expression.'\n  },\n  101: {\n    type: MessageType.error,\n    message: 'Unconsumed token.'\n  },\n  102: {\n    type: MessageType.error,\n    message: 'Double dot and spread operators are not supported.'\n  },\n  103: {\n    type: MessageType.error,\n    message: 'Invalid member expression.'\n  },\n  104: {\n    type: MessageType.error,\n    message: 'Unexpected end of expression.'\n  },\n  105: {\n    type: MessageType.error,\n    message: 'Expected identifier.'\n  },\n  106: {\n    type: MessageType.error,\n    message: 'Invalid BindingIdentifier at left hand side of \"of\".'\n  },\n  107: {\n    type: MessageType.error,\n    message: 'Invalid or unsupported property definition in object literal.'\n  },\n  108: {\n    type: MessageType.error,\n    message: 'Unterminated quote in string literal.'\n  },\n  109: {\n    type: MessageType.error,\n    message: 'Unterminated template string.'\n  },\n  110: {\n    type: MessageType.error,\n    message: 'Missing expected token.'\n  },\n  111: {\n    type: MessageType.error,\n    message: 'Unexpected character.'\n  },\n  150: {\n    type: MessageType.error,\n    message: 'Left hand side of expression is not assignable.'\n  },\n  151: {\n    type: MessageType.error,\n    message: 'Unexpected keyword \"of\"'\n  },\n  2000: {\n    type: MessageType.error,\n    message: 'Router has not been activated.'\n  },\n  2001: {\n    type: MessageType.error,\n    message: 'Router has already been activated.'\n  },\n  2002: {\n    type: MessageType.error,\n    message: 'Failed to resolve all viewports.'\n  },\n  2003: {\n    type: MessageType.error,\n    message: 'Queued browser history has already been activated.'\n  },\n  2004: {\n    type: MessageType.error,\n    message: 'LinkHandler has already been activated.'\n  },\n  10000: {\n    type: MessageType.debug,\n    message: '%s'\n  }\n};\n","import { ILiveLoggingOptions, ITraceInfo, ITraceWriter, PLATFORM, Reporter, Tracer as RuntimeTracer } from '@aurelia/kernel';\nimport { IScope, LifecycleFlags } from '@aurelia/runtime';\n\nconst marker: ITraceInfo = {\n  objName: 'marker',\n  methodName: 'noop',\n  params: PLATFORM.emptyArray,\n  depth: -1,\n  prev: null,\n  next: null\n};\nclass TraceInfo implements ITraceInfo {\n  public static head: ITraceInfo = marker;\n  public static tail: ITraceInfo = marker;\n  public static stack: ITraceInfo[] = [];\n\n  public readonly objName: string;\n  public readonly methodName: string;\n  public readonly depth: number;\n  public params: unknown[] | null;\n  public next: ITraceInfo | null;\n  public prev: ITraceInfo | null;\n\n  constructor(objName: string, methodName: string, params: unknown[] | null) {\n    this.objName = objName;\n    this.methodName = methodName;\n    this.depth = TraceInfo.stack.length;\n    this.params = params;\n    this.next = marker;\n    this.prev = TraceInfo.tail;\n    TraceInfo.tail.next = this;\n    TraceInfo.tail = this;\n    TraceInfo.stack.push(this);\n  }\n\n  public static reset(): void {\n    let current: ITraceInfo | null = TraceInfo.head;\n    let next = null;\n    while (current !== null) {\n      next = current.next;\n      current.next = null;\n      current.prev = null;\n      current.params = null;\n      current = next;\n    }\n    TraceInfo.head = marker;\n    TraceInfo.tail = marker;\n    TraceInfo.stack = [];\n  }\n\n  public static enter(objName: string, methodName: string, params: unknown[] | null): ITraceInfo {\n    return new TraceInfo(objName, methodName, params);\n  }\n\n  public static leave(): ITraceInfo {\n    return TraceInfo.stack.pop() as ITraceInfo;\n  }\n}\n\nexport const Tracer: typeof RuntimeTracer = {\n  ...RuntimeTracer,\n  /**\n   * A convenience property for the user to conditionally call the tracer.\n   * This saves unnecessary `noop` and `slice` calls in non-AOT scenarios even if debugging is disabled.\n   * In AOT these calls will simply be removed entirely.\n   *\n   * This property **only** turns on tracing if `@aurelia/debug` is included and configured as well.\n   */\n  enabled: false,\n  liveLoggingEnabled: false,\n  liveWriter: null,\n  /**\n   * Call this at the start of a method/function.\n   * Each call to `enter` **must** have an accompanying call to `leave` for the tracer to work properly.\n   * @param objName Any human-friendly name to identify the traced object with.\n   * @param methodName Any human-friendly name to identify the traced method with.\n   * @param args Pass in `Array.prototype.slice.call(arguments)` to also trace the parameters, or `null` if this is not needed (to save memory/cpu)\n   */\n  enter(objName: string, methodName: string, args: unknown[] | null): void {\n    if (this.enabled) {\n      const info = TraceInfo.enter(objName, methodName, args);\n      if (this.liveLoggingEnabled) {\n        this.liveWriter.write(info);\n      }\n    }\n  },\n  /**\n   * Call this at the end of a method/function. Pops one trace item off the stack.\n   */\n  leave(): void {\n    if (this.enabled) {\n      TraceInfo.leave();\n    }\n  },\n  /**\n   * Writes only the trace info leading up to the current method call.\n   * @param writer An object to write the output to.\n   */\n  writeStack(writer: ITraceWriter): void {\n    let i = 0;\n    const stack = TraceInfo.stack;\n    const len = stack.length;\n    while (i < len) {\n      writer.write(stack[i]);\n      ++i;\n    }\n  },\n  /**\n   * Writes all trace info captured since the previous flushAll operation.\n   * @param writer An object to write the output to. Can be null to simply reset the tracer state.\n   */\n  flushAll(writer: ITraceWriter | null): void {\n    if (writer !== null) {\n      let current = TraceInfo.head.next; // skip the marker\n      while (current !== null && current !== marker) {\n        writer.write(current);\n        current = current.next;\n      }\n    }\n    TraceInfo.reset();\n  },\n  enableLiveLogging,\n  /**\n   * Stops writing out each trace info item as they are traced.\n   */\n  disableLiveLogging(): void {\n    this.liveLoggingEnabled = false;\n    this.liveWriter = null;\n  }\n};\n\nconst defaultOptions: ILiveLoggingOptions = Object.freeze({\n  rendering: true,\n  binding: true,\n  observation: true,\n  attaching: true,\n  mounting: true,\n  di: true,\n  lifecycle: true,\n  jit: true\n});\n\n/**\n * Writes out each trace info item as they are traced.\n * @param writer An object to write the output to.\n */\nfunction enableLiveLogging(this: typeof Tracer, writer: ITraceWriter): void;\n/**\n * Writes out each trace info item as they are traced.\n * @param options Optional. Specify which logging categories to output. If omitted, all will be logged.\n */\nfunction enableLiveLogging(this: typeof Tracer, options?: ILiveLoggingOptions): void;\nfunction enableLiveLogging(this: typeof Tracer, optionsOrWriter?: ILiveLoggingOptions | ITraceWriter): void {\n  this.liveLoggingEnabled = true;\n  if (optionsOrWriter && 'write' in optionsOrWriter) {\n    this.liveWriter = optionsOrWriter;\n  } else {\n    const options = optionsOrWriter !== undefined ? (optionsOrWriter as ILiveLoggingOptions) : defaultOptions;\n    this.liveWriter = createLiveTraceWriter(options);\n  }\n}\n\ntype Instance = {\n  constructor?: {\n    prototype: unknown;\n    name: string;\n    description?: {\n      name: string;\n    };\n  };\n};\n\nconst toString = Object.prototype.toString;\nfunction flagsText(info: ITraceInfo, i: number = 0): string {\n  if (info.params !== null && info.params.length > i) {\n    return stringifyLifecycleFlags(info.params[i] as LifecycleFlags);\n  }\n  return 'none';\n}\nfunction _ctorName(obj: Instance | undefined): string {\n  let name: string;\n  if (obj === undefined) {\n    name = 'undefined';\n  } else if (obj === null) {\n    name = 'null';\n  } else if (obj.constructor !== undefined) {\n    if (obj.constructor.description) {\n      name = `Resource{'${obj.constructor.description.name}'}`;\n    } else {\n      name = obj.constructor.name;\n    }\n  } else if (typeof obj === 'string') {\n    name = `'${obj}'`;\n  } else {\n    name = toString.call(obj);\n  }\n  return name;\n}\nfunction ctorName(info: ITraceInfo, i: number = 0): string {\n  if (info.params !== null && info.params.length > i) {\n    return _ctorName(info.params[i] as Instance);\n  }\n  return 'undefined';\n}\nfunction scopeText(info: ITraceInfo, i: number = 0): string {\n  let $ctorName: string;\n  if (info.params !== null && info.params.length > i) {\n    const $scope = info.params[i] as IScope | undefined;\n    if ($scope !== undefined && $scope.bindingContext !== undefined) {\n      $ctorName = _ctorName($scope.bindingContext as Instance);\n    } else {\n      $ctorName = 'undefined';\n    }\n    return `Scope{${$ctorName}}`;\n  }\n  return 'undefined';\n}\nfunction keyText(info: ITraceInfo, i: number = 0): string {\n  if (info.params !== null && info.params.length > i) {\n    const $key = info.params[i] as object | undefined;\n    if (typeof $key === 'string') {\n      return `'${$key}'`;\n    }\n    if ($key !== undefined && Reflect.has($key, 'friendlyName')) {\n      return ($key as Record<string, string>)['friendlyName'];\n    }\n    return _ctorName($key);\n  }\n  return 'undefined';\n}\nfunction primitive(info: ITraceInfo, i: number = 0): string {\n  if (info.params !== null && info.params.length > i) {\n    const $key = info.params[i] as string | symbol | number;\n    if (typeof $key === 'string') {\n      return `'${$key}'`;\n    }\n    return $key.toString();\n  }\n  return 'undefined';\n}\n\nconst RenderingArgsProcessor = {\n  $hydrate(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  render(info: ITraceInfo): string {\n    return `${flagsText(info)},IDOM,IRenderContext,${ctorName(info, 3)}`;\n  },\n  addBinding(info: ITraceInfo): string {\n    return `${ctorName(info)},${ctorName(info, 1)}`;\n  },\n  addComponent(info: ITraceInfo): string {\n    return `${ctorName(info)},${ctorName(info, 1)}`;\n  }\n};\n\nconst BindingArgsProcessor = {\n  $bind(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  $unbind(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  connect(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  // currently only observers trace constructor calls but keep an eye on this if others are added, then we'd need additional filtering\n  constructor(info: ITraceInfo): string {\n    switch (info.objName) {\n      case 'ArrayObserver':\n      case 'MapObserver':\n      case 'SetObserver':\n        return flagsText(info);\n      case 'SetterObserver':\n      case 'SelfObserver':\n        return `${flagsText(info)},${ctorName(info, 1)},${primitive(info, 2)}`;\n      case 'ProxyObserver':\n        return ctorName(info);\n      case 'ProxySubscriberCollection':\n      case 'DirtyCheckProperty':\n        return `${ctorName(info, 1)},${primitive(info, 2)}`;\n      case 'PrimitiveObserver':\n      case 'PropertyAccessor':\n        return `${ctorName(info)},${primitive(info, 1)}`;\n      default:\n        return '';\n    }\n  },\n  lockedBind(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  lockedUnbind(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  InternalObserversLookup(info: ITraceInfo): string {\n    return `${flagsText(info)},${ctorName(info, 1)},${primitive(info, 2)}`;\n  },\n  BindingContext(info: ITraceInfo): string {\n    switch (info.methodName) {\n      case 'get':\n        return `${scopeText(info)},${primitive(info, 1)},${primitive(info, 2)},${flagsText(info, 3)}`;\n      case 'getObservers':\n        return flagsText(info);\n      default:\n        return 'unknown';\n    }\n  },\n  Scope(info: ITraceInfo): string {\n    switch (info.methodName) {\n      case 'create':\n        return `${flagsText(info)},${ctorName(info, 1)},${ctorName(info, 2)}`;\n      case 'fromOverride':\n        return `${flagsText(info)},${ctorName(info, 1)}`;\n      case 'fromParent':\n        return `${flagsText(info)},${scopeText(info, 1)},${ctorName(info, 2)}`;\n      default:\n        return 'unknown';\n    }\n  },\n  OverrideContext(info: ITraceInfo): string {\n    switch (info.methodName) {\n      case 'create':\n        return `${flagsText(info)},${ctorName(info, 1)},${ctorName(info, 2)}`;\n      case 'getObservers':\n        return '';\n      default:\n        return 'unknown';\n    }\n  }\n};\n\nconst ObservationArgsProcessor = {\n  $patch(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  callSource(info: ITraceInfo): string {\n    switch (info.objName) {\n      case 'Listener':\n        return ((info.params as ReadonlyArray<{ type: string }>)[0]).type;\n      case 'Call':\n        const names: string[] = [];\n        if (info.params !== null) {\n          for (let i = 0, ii = info.params.length; i < ii; ++i) {\n            names.push(ctorName(info, i));\n          }\n        }\n        return names.join(',');\n      default:\n        return 'unknown';\n    }\n  },\n  setValue(info: ITraceInfo): string {\n    let valueText: string;\n    const value = (info.params as ReadonlyArray<unknown>)[0];\n    switch (typeof value) {\n      case 'undefined':\n        valueText = 'undefined';\n        break;\n      case 'object':\n        if (value === null) {\n          valueText = 'null';\n        } else {\n          valueText = _ctorName(value);\n        }\n        break;\n      case 'string':\n        valueText = `'${value}'`;\n        break;\n      case 'number':\n        valueText = value.toString();\n        break;\n      default:\n        valueText = _ctorName(value as Instance);\n    }\n    return `${valueText},${flagsText(info, 1)}`;\n  },\n  flush(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  handleChange(info: ITraceInfo): string {\n    return `${primitive(info)},${primitive(info, 1)},${flagsText(info, 2)}`;\n  },\n  lockScope(info: ITraceInfo): string {\n    return scopeText(info);\n  }\n};\n\nconst AttachingArgsProcessor = {\n  $attach(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  $detach(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  $cache(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  hold(info: ITraceInfo): string {\n    return `Node{'${((info.params as ReadonlyArray<{ textContent: string }>)[0]).textContent}'}`;\n  },\n  release(info: ITraceInfo): string {\n    return flagsText(info);\n  }\n};\n\nconst MountingArgsProcessor = {\n  $mount(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  $unmount(info: ITraceInfo): string {\n    return flagsText(info);\n  },\n  project(info: ITraceInfo): string {\n    return ctorName(info);\n  },\n  take(info: ITraceInfo): string {\n    return ctorName(info);\n  }\n};\n\nconst DIArgsProcessor = {\n  construct(info: ITraceInfo): string {\n    return ctorName(info);\n  },\n  Container(info: ITraceInfo): string {\n    switch (info.methodName) {\n      case 'get':\n      case 'getAll':\n        return keyText(info);\n      case 'register':\n        const names: string[] = [];\n        if (info.params !== null) {\n          for (let i = 0, ii = info.params.length; i < ii; ++i) {\n            names.push(keyText(info, i));\n          }\n        }\n        return names.join(',');\n      case 'createChild':\n        return '';\n      default:\n        return 'unknown';\n    }\n  }\n};\n\nconst LifecycleArgsProcessor = {\n  Lifecycle(info: ITraceInfo): string {\n    switch (info.methodName.slice(0, 3)) {\n      case 'beg':\n        return '';\n      case 'enq':\n        return ctorName(info);\n      case 'end':\n      case 'pro':\n        return flagsText(info);\n      default:\n        return 'unknown';\n    }\n  },\n  CompositionCoordinator(info: ITraceInfo): string {\n    switch (info.methodName) {\n      case 'enqueue':\n        return 'IView';\n      case 'swap':\n        return `IView,${flagsText(info, 1)}`;\n      case 'processNext':\n        return '';\n      default:\n        return 'unknown';\n    }\n  },\n  AggregateLifecycleTask(info: ITraceInfo): string {\n    switch (info.methodName) {\n      case 'addTask':\n      case 'removeTask':\n        return ctorName(info);\n      case 'complete':\n        return `${primitive(info, 2)}`;\n      default:\n        return 'unknown';\n    }\n  }\n};\n\nconst JitArgsProcessor = {\n  TemplateBinder(info: ITraceInfo): string {\n    return ''; // TODO\n  }\n};\n\nfunction createLiveTraceWriter(options: ILiveLoggingOptions): ITraceWriter {\n  const Processors: Record<string, (info: ITraceInfo) => string> = {};\n  if (options.rendering) {\n    Object.assign(Processors, RenderingArgsProcessor);\n  }\n  if (options.binding) {\n    Object.assign(Processors, BindingArgsProcessor);\n  }\n  if (options.observation) {\n    Object.assign(Processors, ObservationArgsProcessor);\n  }\n  if (options.attaching) {\n    Object.assign(Processors, AttachingArgsProcessor);\n  }\n  if (options.mounting) {\n    Object.assign(Processors, MountingArgsProcessor);\n  }\n  if (options.di) {\n    Object.assign(Processors, DIArgsProcessor);\n  }\n  if (options.lifecycle) {\n    Object.assign(Processors, LifecycleArgsProcessor);\n  }\n  if (options.jit) {\n    Object.assign(Processors, JitArgsProcessor);\n  }\n\n  return {\n    write(info: ITraceInfo): void {\n      let output: string;\n      if (Processors[info.methodName] !== undefined) {\n        output = Processors[info.methodName](info);\n      } else if (Processors[info.objName] !== undefined) {\n        output = Processors[info.objName](info);\n      } else {\n        return;\n      }\n      Reporter.write(10000, `${'-'.repeat(info.depth)}${info.objName}.${info.methodName}(${output})`);\n    }\n  };\n}\n\nexport function stringifyLifecycleFlags(flags: LifecycleFlags): string {\n  const flagNames: string[] = [];\n\n  if (flags & LifecycleFlags.mustEvaluate) { flagNames.push('mustEvaluate'); }\n  if (flags & LifecycleFlags.isCollectionMutation) { flagNames.push('isCollectionMutation'); }\n  if (flags & LifecycleFlags.updateTargetInstance) { flagNames.push('updateTargetInstance'); }\n  if (flags & LifecycleFlags.updateSourceExpression) { flagNames.push('updateSourceExpression'); }\n  if (flags & LifecycleFlags.fromAsyncFlush) { flagNames.push('fromAsyncFlush'); }\n  if (flags & LifecycleFlags.fromSyncFlush) { flagNames.push('fromSyncFlush'); }\n  if (flags & LifecycleFlags.fromStartTask) { flagNames.push('fromStartTask'); }\n  if (flags & LifecycleFlags.fromStopTask) { flagNames.push('fromStopTask'); }\n  if (flags & LifecycleFlags.fromBind) { flagNames.push('fromBind'); }\n  if (flags & LifecycleFlags.fromUnbind) { flagNames.push('fromUnbind'); }\n  if (flags & LifecycleFlags.fromAttach) { flagNames.push('fromAttach'); }\n  if (flags & LifecycleFlags.fromDetach) { flagNames.push('fromDetach'); }\n  if (flags & LifecycleFlags.fromCache) { flagNames.push('fromCache'); }\n  if (flags & LifecycleFlags.fromDOMEvent) { flagNames.push('fromDOMEvent'); }\n  if (flags & LifecycleFlags.fromLifecycleTask) { flagNames.push('fromLifecycleTask'); }\n  if (flags & LifecycleFlags.parentUnmountQueued) { flagNames.push('parentUnmountQueued'); }\n  if (flags & LifecycleFlags.doNotUpdateDOM) { flagNames.push('doNotUpdateDOM'); }\n  if (flags & LifecycleFlags.isTraversingParentScope) { flagNames.push('isTraversingParentScope'); }\n  if (flags & LifecycleFlags.allowParentScopeTraversal) { flagNames.push('allowParentScopeTraversal'); }\n  if (flags & LifecycleFlags.getterSetterStrategy) { flagNames.push('getterSetterStrategy'); }\n  if (flags & LifecycleFlags.proxyStrategy) { flagNames.push('proxyStrategy'); }\n  if (flags & LifecycleFlags.keyedStrategy) { flagNames.push('keyedStrategy'); }\n  if (flags & LifecycleFlags.patchStrategy) { flagNames.push('patchStrategy'); }\n\n  if (flagNames.length === 0) {\n    return 'none';\n  }\n  return flagNames.join('|');\n}\n","import { IContainer, Reporter as RuntimeReporter, Tracer as RuntimeTracer } from '@aurelia/kernel';\nimport { enableImprovedExpressionDebugging } from './binding/unparser';\nimport { Reporter } from './reporter';\nimport { Tracer } from './tracer';\n\nexport const DebugConfiguration = {\n  register(container?: IContainer): void {\n    Reporter.write(2);\n    Object.assign(RuntimeReporter, Reporter);\n    enableImprovedExpressionDebugging();\n  }\n};\n\nexport const TraceConfiguration = {\n  register(container?: IContainer): void {\n    Object.assign(RuntimeTracer, Tracer);\n  }\n};\n"],"names":["AST.AccessKeyed","AST.AccessMember","AST.AccessScope","AST.AccessThis","AST.ArrayBindingPattern","AST.ArrayLiteral","AST.Assign","AST.Binary","AST.BindingBehavior","AST.BindingIdentifier","AST.CallFunction","AST.CallMember","AST.CallScope","AST.Conditional","AST.ForOfStatement","AST.HtmlLiteral","AST.Interpolation","AST.ObjectBindingPattern","AST.ObjectLiteral","AST.PrimitiveLiteral","AST.TaggedTemplate","AST.Template","AST.Unary","AST.ValueConverter","RuntimeReporter","RuntimeTracer","Reporter"],"mappings":"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"}